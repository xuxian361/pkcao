android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.a.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.a.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.a.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.a.d:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.a.e:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.a.f:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    java.lang.String getString(int) -> a
    boolean isAdded() -> d
    void onHiddenChanged(boolean) -> a
    void startActivity(android.content.Intent) -> a
    void startActivityForResult(android.content.Intent,int) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.a.g:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.a.h:
android.support.v4.app.FragmentActivity -> android.support.v4.a.i:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> e
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> a
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$1 -> android.support.v4.a.j:
    android.support.v4.app.FragmentActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.a.k:
    android.support.v4.app.FragmentActivity this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.a.l:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.a.m:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.a.n:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.a.o:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    android.support.v4.app.Fragment findFragmentById(int) -> a
    void popBackStack() -> b
    int getBackStackEntryCount() -> c
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.a.p:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.a.q:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> d
    void popBackStack() -> b
    boolean popBackStackImmediate() -> e
    int getBackStackEntryCount() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> f
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> v
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> g
    void reportBackStackChanged() -> h
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> i
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> j
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> k
    void dispatchCreate() -> l
    void dispatchActivityCreated() -> m
    void dispatchStart() -> n
    void dispatchResume() -> o
    void dispatchPause() -> p
    void dispatchStop() -> q
    void dispatchReallyStop() -> r
    void dispatchDestroyView() -> s
    void dispatchDestroy() -> t
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> u
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.a.r:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.a.s:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.a.t:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.a.u:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.a.v:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.a.w:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.a.x:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTransaction -> android.support.v4.a.y:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> b
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> a
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.a.z:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.a.aa:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.a.ab:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.a.ac:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.a.ad:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.a.ae:
android.support.v4.content.Loader -> android.support.v4.b.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.b.b:
android.support.v4.content.LocalBroadcastManager -> android.support.v4.b.c:
    android.content.Context mAppContext -> a
    java.util.HashMap mReceivers -> b
    java.util.HashMap mActions -> c
    java.util.ArrayList mPendingBroadcasts -> d
    android.os.Handler mHandler -> e
    java.lang.Object mLock -> f
    android.support.v4.content.LocalBroadcastManager mInstance -> g
    android.support.v4.content.LocalBroadcastManager getInstance(android.content.Context) -> a
    void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> a
    void unregisterReceiver(android.content.BroadcastReceiver) -> a
    boolean sendBroadcast(android.content.Intent) -> a
    void executePendingBroadcasts() -> a
    void access$000(android.support.v4.content.LocalBroadcastManager) -> a
android.support.v4.content.LocalBroadcastManager$1 -> android.support.v4.b.d:
    android.support.v4.content.LocalBroadcastManager this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.LocalBroadcastManager$BroadcastRecord -> android.support.v4.b.e:
    android.content.Intent intent -> a
    java.util.ArrayList receivers -> b
android.support.v4.content.LocalBroadcastManager$ReceiverRecord -> android.support.v4.b.f:
    android.content.IntentFilter filter -> a
    android.content.BroadcastReceiver receiver -> b
    boolean broadcasting -> c
    java.lang.String toString() -> toString
android.support.v4.os.ParcelableCompat -> android.support.v4.c.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.c.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.c.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.c.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.c.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.d.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.d.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.d.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.p:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.q:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.r:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.w:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.x:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void notifyDataSetChanged() -> c
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.y:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.z:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.aa:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ab:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.ac:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.ad:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.ae:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.af:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ag:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.ah:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ai:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.aj:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.ak:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.al:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.am:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.an:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ao:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.ap:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.aq:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.ar:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.as:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.at:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> h
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> i
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.au:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.av:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.aw:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ax:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ay:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.az:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ba:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bb:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bc:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bd:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.be:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.bf:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bg:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bh:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    java.lang.Object getInfo() -> a
    void addAction(int) -> a
    void setScrollable(boolean) -> a
    void setClassName(java.lang.CharSequence) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    void addAction(java.lang.Object,int) -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.f:
    void addAction(java.lang.Object,int) -> a
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setScrollable(java.lang.Object,boolean) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.g:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.h:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.j:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.k:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.l:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.m:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.n:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.e.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.e.b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.e.c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.e.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.e.e:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
cn.sharesdk.demo.wxapi.WXEntryActivity -> cn.sharesdk.demo.wxapi.WXEntryActivity:
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> a
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> b
cn.sharesdk.framework.CustomPlatform -> cn.sharesdk.a.a:
cn.sharesdk.framework.Platform -> cn.sharesdk.a.b:
    cn.sharesdk.framework.f a -> c
    android.content.Context context -> a
    cn.sharesdk.framework.PlatformDb db -> b
    void a() -> a
    void initDevInfo(java.lang.String) -> a
    java.lang.String getDevinfo(java.lang.String) -> b
    java.lang.String getDevinfo(java.lang.String,java.lang.String) -> a
    android.content.Context getContext() -> b
    java.lang.String getName() -> c
    int getPlatformId() -> d
    int getSortId() -> e
    void setPlatformActionListener(cn.sharesdk.framework.PlatformActionListener) -> a
    boolean isClientValid() -> f
    void SSOSetting(boolean) -> a
    boolean b() -> g
    void setNetworkDevinfo() -> h
    boolean checkAuthorize(int,java.lang.Object) -> a
    void share(cn.sharesdk.framework.Platform$ShareParams) -> a
    void doShare(cn.sharesdk.framework.Platform$ShareParams) -> b
    void follow(java.lang.String) -> c
    void timeline(int,int,java.lang.String) -> a
    void showUser(java.lang.String) -> d
    void userInfor(java.lang.String) -> e
    void getFriendList(int,int,java.lang.String) -> b
    void doCustomerProtocol(java.lang.String,java.lang.String,int,java.util.HashMap,java.util.HashMap) -> a
    cn.sharesdk.framework.PlatformDb getDb() -> i
    cn.sharesdk.framework.statistics.b.f$a filterShareContent(cn.sharesdk.framework.Platform$ShareParams,java.util.HashMap) -> a
cn.sharesdk.framework.Platform$ShareParams -> cn.sharesdk.a.c:
cn.sharesdk.framework.PlatformActionListener -> cn.sharesdk.a.d:
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> a
    void onCancel(cn.sharesdk.framework.Platform,int) -> a
cn.sharesdk.framework.PlatformDb -> cn.sharesdk.a.e:
    android.content.SharedPreferences db -> a
    void put(java.lang.String,java.lang.String) -> a
    java.lang.String get(java.lang.String) -> a
    void putToken(java.lang.String) -> b
    void putExpiresIn(long) -> a
    java.lang.String getUserId() -> a
    java.lang.String getUserGender() -> b
cn.sharesdk.framework.Service -> cn.sharesdk.a.f:
    void onUnbind() -> a
cn.sharesdk.framework.ShareSDK -> cn.sharesdk.a.g:
    cn.sharesdk.framework.k a -> a
    boolean b -> b
    void initSDK(android.content.Context) -> a
    void initSDK(android.content.Context,java.lang.String,boolean) -> a
    void c() -> f
    java.lang.String getSDKVersionName() -> a
    int getSDKVersionCode() -> b
    cn.sharesdk.framework.Platform[] getPlatformList() -> c
    cn.sharesdk.framework.Platform getPlatform(java.lang.String) -> a
    void logDemoEvent(int,cn.sharesdk.framework.Platform) -> a
    void logApiEvent(java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> a
    java.lang.String a(int,java.lang.String) -> a
    boolean a() -> d
    boolean b() -> e
    boolean a(java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
cn.sharesdk.framework.a -> cn.sharesdk.a.h:
    cn.sharesdk.framework.PlatformActionListener a -> a
    java.util.HashMap b -> b
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> a
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void onCancel(cn.sharesdk.framework.Platform,int) -> a
    void a(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> b
    void b(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> c
    void a(int,cn.sharesdk.framework.Platform) -> a
    java.lang.String a(cn.sharesdk.framework.Platform) -> a
    java.lang.String b(cn.sharesdk.framework.Platform) -> b
    java.lang.String a(cn.sharesdk.framework.PlatformDb,java.lang.String[]) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.a,cn.sharesdk.framework.PlatformActionListener) -> a
    cn.sharesdk.framework.PlatformActionListener a(cn.sharesdk.framework.a) -> a
    java.lang.String a(cn.sharesdk.framework.a,cn.sharesdk.framework.Platform) -> a
    void a(cn.sharesdk.framework.a,int,cn.sharesdk.framework.Platform) -> a
cn.sharesdk.framework.a.a -> cn.sharesdk.a.a.a:
    cn.sharesdk.framework.a.a a -> c
    java.lang.String a(java.lang.String,java.util.ArrayList,java.lang.String,int) -> a
    java.lang.String a(java.lang.String,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut,java.lang.String,int) -> a
    void a(java.lang.String,int) -> a
cn.sharesdk.framework.authorize.AuthorizeListener -> cn.sharesdk.a.b.a:
    void onComplete(android.os.Bundle) -> a
    void onError(java.lang.Throwable) -> a
    void onCancel() -> a
cn.sharesdk.framework.b -> cn.sharesdk.a.i:
    cn.sharesdk.framework.PlatformActionListener a -> a
    int b -> b
    java.util.HashMap c -> c
    cn.sharesdk.framework.a d -> d
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> a
    void onCancel(cn.sharesdk.framework.Platform,int) -> a
cn.sharesdk.framework.d -> cn.sharesdk.a.j:
    java.util.HashMap params -> a
    java.lang.Object get(java.lang.String,java.lang.Class) -> a
    java.util.HashMap toMap() -> a
    java.lang.String toString() -> toString
    java.lang.String[] getCustomFlag() -> b
cn.sharesdk.framework.f -> cn.sharesdk.a.k:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.a d -> b
    int e -> c
    int f -> d
    boolean g -> e
    boolean h -> f
    boolean i -> g
    void a(java.lang.String) -> a
    int b() -> a
    void a(cn.sharesdk.framework.PlatformActionListener) -> a
    void a(boolean) -> a
    boolean f() -> b
    boolean j() -> c
    java.lang.String a(int,java.lang.String,java.lang.String) -> a
    void b(int,java.lang.Object) -> a
    void c(int,java.lang.Object) -> b
    void a(cn.sharesdk.framework.Platform$ShareParams) -> a
    void c(java.lang.String) -> b
    boolean a(cn.sharesdk.framework.f) -> a
    cn.sharesdk.framework.Platform b(cn.sharesdk.framework.f) -> b
cn.sharesdk.framework.g -> cn.sharesdk.a.l:
    int a -> a
    java.lang.Object b -> b
    cn.sharesdk.framework.f c -> c
    void run() -> run
cn.sharesdk.framework.i -> cn.sharesdk.a.m:
    boolean a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.util.ArrayList a() -> a
    android.content.pm.PackageInfo e() -> e
    java.util.ArrayList a(android.content.pm.PackageInfo) -> a
    java.util.ArrayList f() -> f
    void a(java.util.ArrayList) -> a
    void a(android.os.Handler,boolean,int) -> a
    void b() -> b
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    void a(cn.sharesdk.framework.k) -> a
    java.lang.String a(int,java.lang.String,java.util.HashMap) -> a
    boolean a(java.util.HashMap,java.util.HashMap) -> a
    java.lang.String c() -> c
    int d() -> d
cn.sharesdk.framework.j -> cn.sharesdk.a.n:
    cn.sharesdk.framework.i a -> a
    int a(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
cn.sharesdk.framework.k -> cn.sharesdk.a.o:
    cn.sharesdk.framework.k$a a -> b
    android.content.Context b -> c
    java.util.HashMap c -> d
    java.util.ArrayList d -> e
    java.util.HashMap e -> f
    java.util.HashMap f -> g
    java.util.HashMap g -> h
    java.util.HashMap h -> i
    java.util.HashMap i -> j
    java.lang.String j -> k
    boolean k -> l
    java.lang.String l -> m
    boolean n -> n
    void a(boolean) -> a
    void startThread() -> a
    void h() -> h
    void i() -> i
    void onStart(android.os.Message) -> a
    void j() -> j
    void k() -> k
    void l() -> l
    void onStop(android.os.Message) -> b
    void onMessage(android.os.Message) -> c
    cn.sharesdk.framework.Platform a(java.lang.String) -> a
    cn.sharesdk.framework.Platform[] a() -> b
    java.lang.String b() -> c
    int c() -> d
    void a(int,cn.sharesdk.framework.Platform) -> a
    void a(java.lang.String,int) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> a
    java.lang.String a(int,java.lang.String) -> a
    boolean e() -> e
    boolean f() -> f
    boolean a(java.util.HashMap) -> a
    boolean a(cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
    boolean b(java.util.HashMap) -> b
    boolean a(cn.sharesdk.framework.k,cn.sharesdk.framework.statistics.a,java.util.HashMap,java.util.HashMap) -> a
cn.sharesdk.framework.k$a -> cn.sharesdk.a.p:
    cn.sharesdk.framework.k$a a -> a
    cn.sharesdk.framework.k$a b -> b
    cn.sharesdk.framework.k$a c -> c
    cn.sharesdk.framework.k$a[] d -> d
    cn.sharesdk.framework.k$a[] values() -> values
    cn.sharesdk.framework.k$a valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.l -> cn.sharesdk.a.q:
    cn.sharesdk.framework.k a -> a
    void run() -> run
cn.sharesdk.framework.m -> cn.sharesdk.a.r:
    cn.sharesdk.framework.statistics.a a -> a
    cn.sharesdk.framework.k b -> b
    void run() -> run
cn.sharesdk.framework.statistics.NewAppReceiver -> cn.sharesdk.a.c.a:
    java.lang.String[] a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver b -> b
    android.content.Context c -> c
    android.content.IntentFilter[] d -> d
    android.os.Handler e -> e
    java.lang.String f -> f
    void a(android.content.Context,java.lang.String) -> a
    void b() -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    boolean a(java.lang.String) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    java.lang.String a() -> a
cn.sharesdk.framework.statistics.NewAppReceiver$a -> cn.sharesdk.a.c.b:
    com.mob.tools.utils.LocalDB a -> a
    java.util.ArrayList a() -> a
    void a(java.util.ArrayList) -> a
    long b() -> b
    void a(long) -> a
cn.sharesdk.framework.statistics.NewAppReceiver$b -> cn.sharesdk.a.c.c:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.NewAppReceiver$a b -> b
    void a(android.content.Context) -> a
    void run() -> run
    java.util.HashMap a(java.util.ArrayList) -> a
    java.util.ArrayList a(java.util.HashMap) -> a
cn.sharesdk.framework.statistics.a -> cn.sharesdk.a.c.d:
    cn.sharesdk.framework.statistics.a a -> a
    cn.sharesdk.framework.statistics.c b -> b
    cn.sharesdk.framework.statistics.a.e c -> c
    boolean d -> d
    cn.sharesdk.framework.statistics.a a(android.content.Context,java.lang.String) -> a
    void a(java.lang.String,java.util.ArrayList) -> a
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    void a(boolean) -> a
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    void a(cn.sharesdk.framework.statistics.b.b) -> a
    void a(cn.sharesdk.framework.statistics.b.f) -> a
    java.lang.String a(java.lang.String,cn.sharesdk.framework.statistics.b) -> a
    java.lang.String c(java.lang.String) -> b
    java.lang.String a(android.graphics.Bitmap,cn.sharesdk.framework.statistics.b) -> a
    void e() -> e
    java.lang.String d(java.lang.String) -> c
    boolean a(java.lang.String,boolean) -> a
    java.util.HashMap f() -> f
    java.util.HashMap g() -> g
    void a(java.util.HashMap) -> a
    java.util.HashMap b(java.lang.String) -> a
    boolean a(int,int) -> a
cn.sharesdk.framework.statistics.a.a -> cn.sharesdk.a.c.a.a:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
cn.sharesdk.framework.statistics.a.b -> cn.sharesdk.a.c.a.b:
    android.content.Context a -> a
    cn.sharesdk.framework.statistics.a.a b -> b
    cn.sharesdk.framework.statistics.a.b c -> c
    cn.sharesdk.framework.statistics.a.b a(android.content.Context) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
cn.sharesdk.framework.statistics.a.c -> cn.sharesdk.a.c.a.c:
    java.lang.String a -> a
    java.util.ArrayList b -> b
cn.sharesdk.framework.statistics.a.d -> cn.sharesdk.a.c.a.d:
    int a -> a
    int b -> b
    int c -> c
    long a(android.content.Context,java.lang.String,long) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context) -> a
cn.sharesdk.framework.statistics.a.e -> cn.sharesdk.a.c.a.e:
    android.content.Context a -> a
    com.mob.tools.utils.SharePrefrenceHelper b -> b
    cn.sharesdk.framework.statistics.a.e c -> c
    cn.sharesdk.framework.statistics.a.e a(android.content.Context) -> a
    long a() -> a
    boolean b() -> b
    boolean c() -> c
    int e() -> d
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String e(java.lang.String) -> e
    void f(java.lang.String) -> f
    java.lang.String f() -> e
    void g(java.lang.String) -> g
    java.lang.String g() -> f
    void a(long) -> a
    java.lang.Long h() -> g
    void a(boolean) -> a
    boolean i() -> h
    void b(long) -> b
    java.lang.Long j() -> i
    void b(java.lang.String,java.lang.String) -> b
    java.lang.String h(java.lang.String) -> h
    void a(java.lang.String,java.lang.Long) -> a
    long i(java.lang.String) -> i
    void a(java.lang.String,int) -> a
    int j(java.lang.String) -> j
    void a(java.lang.String,java.lang.Object) -> a
    java.lang.Object k(java.lang.String) -> k
cn.sharesdk.framework.statistics.b -> cn.sharesdk.a.c.e:
    cn.sharesdk.framework.statistics.b a -> a
    cn.sharesdk.framework.statistics.b b -> b
    cn.sharesdk.framework.statistics.b[] c -> c
    cn.sharesdk.framework.statistics.b[] values() -> values
    cn.sharesdk.framework.statistics.b valueOf(java.lang.String) -> valueOf
cn.sharesdk.framework.statistics.b.a -> cn.sharesdk.a.c.b.a:
    int c -> c
    long d -> d
    int a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.b -> cn.sharesdk.a.c.b.b:
    int n -> n
    long o -> o
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.c -> cn.sharesdk.a.c.b.c:
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    long e() -> e
    long d() -> d
    void a(long) -> a
    void f() -> f
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.d -> cn.sharesdk.a.c.b.d:
    int d -> d
    long n -> n
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.e -> cn.sharesdk.a.c.b.e:
    int b -> b
    long c -> c
    long a -> a
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.f -> cn.sharesdk.a.c.b.f:
    int p -> p
    long q -> q
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    cn.sharesdk.framework.statistics.b.f$a d -> d
    java.lang.String n -> n
    java.lang.String[] o -> o
    java.lang.String a() -> a
    java.lang.String toString() -> toString
    int b() -> b
    int c() -> c
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
cn.sharesdk.framework.statistics.b.f$a -> cn.sharesdk.a.c.b.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.util.ArrayList c -> c
    java.util.ArrayList d -> d
    java.util.ArrayList e -> e
    java.util.ArrayList f -> f
    java.util.HashMap g -> g
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.b.g -> cn.sharesdk.a.c.b.h:
    int a -> a
    long b -> b
    java.lang.String a() -> a
    int b() -> b
    int c() -> c
    boolean a(android.content.Context) -> a
    void b(android.content.Context) -> b
    long d() -> d
    long e() -> e
    void f() -> f
    void a(long) -> a
    java.lang.String toString() -> toString
cn.sharesdk.framework.statistics.c -> cn.sharesdk.a.c.f:
    java.lang.String a -> a
    android.content.Context b -> b
    cn.sharesdk.framework.statistics.a.e c -> c
    com.mob.tools.utils.DeviceHelper d -> d
    com.mob.tools.network.NetworkHelper e -> e
    com.mob.tools.utils.Hashon f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    boolean i -> i
    java.util.HashMap j -> j
    void i() -> i
    void a(java.lang.String) -> a
    void a(java.util.HashMap) -> a
    java.lang.String j() -> j
    java.util.HashMap a() -> a
    java.lang.String k() -> k
    long b() -> b
    java.lang.String l() -> l
    java.util.HashMap c() -> c
    java.lang.String m() -> m
    void b(java.util.HashMap) -> b
    java.lang.String d(java.util.HashMap) -> d
    java.util.HashMap d() -> d
    void b(java.lang.String) -> b
    java.lang.String e() -> e
    void a(java.lang.String,java.util.ArrayList) -> a
    java.lang.String n() -> n
    java.util.HashMap c(java.lang.String) -> c
    java.lang.String o() -> o
    boolean a(java.lang.String,boolean) -> a
    java.lang.String q() -> p
    java.util.HashMap f() -> f
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    java.util.ArrayList g() -> g
    void a(java.util.ArrayList) -> a
    java.util.HashMap h() -> h
    void c(java.util.HashMap) -> c
    java.util.HashMap d(java.lang.String) -> d
    void a(int,int) -> a
    java.lang.String b(int,int) -> b
cn.sharesdk.framework.statistics.d -> cn.sharesdk.a.c.g:
    cn.sharesdk.framework.statistics.d a -> b
    android.content.Context b -> c
    com.mob.tools.utils.DeviceHelper c -> d
    cn.sharesdk.framework.statistics.a d -> e
    java.lang.String e -> f
    android.os.Handler f -> g
    boolean g -> h
    int h -> i
    boolean i -> j
    long j -> k
    boolean k -> l
    cn.sharesdk.framework.statistics.d a(android.content.Context,java.lang.String) -> a
    void a(android.os.Handler) -> a
    void a(boolean) -> a
    void a(int) -> a
    void onStart(android.os.Message) -> a
    void onStop(android.os.Message) -> b
    void a(cn.sharesdk.framework.statistics.b.c) -> a
    void b(cn.sharesdk.framework.statistics.b.c) -> b
    void onMessage(android.os.Message) -> c
    void c(cn.sharesdk.framework.statistics.b.c) -> c
    void a() -> b
    boolean b() -> c
    void c() -> d
    void d() -> e
cn.sharesdk.framework.utils.ShareSDKR -> cn.sharesdk.a.d.a:
    int getResId(android.content.Context,java.lang.String,java.lang.String) -> a
    int getBitmapRes(android.content.Context,java.lang.String) -> a
    int getStringRes(android.content.Context,java.lang.String) -> b
    int getLayoutRes(android.content.Context,java.lang.String) -> c
    int getIdRes(android.content.Context,java.lang.String) -> d
cn.sharesdk.framework.utils.d -> cn.sharesdk.a.d.b:
    java.lang.String getSDKTag() -> a
    com.mob.tools.log.NLog a(android.content.Context,int,java.lang.String) -> a
    com.mob.tools.log.NLog a() -> b
cn.sharesdk.framework.utils.e -> cn.sharesdk.a.d.c:
    int a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.utils.d c -> c
    int getSDKVersion() -> a
    java.lang.String getSDKTag() -> b
    java.lang.String getAppkey() -> c
cn.sharesdk.framework.utils.f -> cn.sharesdk.a.d.d:
    void a(android.content.Context) -> a
    int b(android.content.Context) -> b
cn.sharesdk.onekeyshare.CustomerLogo -> cn.sharesdk.b.a:
    java.lang.String label -> a
    android.graphics.Bitmap enableLogo -> b
    android.graphics.Bitmap disableLogo -> c
    android.view.View$OnClickListener listener -> d
cn.sharesdk.onekeyshare.EditPageFakeActivity -> cn.sharesdk.b.b:
    java.util.List platforms -> a
    java.util.HashMap shareParamMap -> b
    boolean dialogMode -> c
    android.view.View backgroundView -> d
    java.util.ArrayList shareImageList -> e
    void setShareData(java.util.HashMap) -> a_
    void setDialogMode() -> a_
    void setBackgroundView(android.view.View) -> a
    void setPlatforms(java.util.List) -> a
    boolean onFinish() -> b
cn.sharesdk.onekeyshare.OnekeyShare -> cn.sharesdk.b.c:
    java.util.HashMap shareParamsMap -> a
    java.util.ArrayList customers -> b
    boolean silent -> c
    cn.sharesdk.framework.PlatformActionListener callback -> d
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> e
    boolean dialogMode -> f
    boolean disableSSO -> g
    boolean shareVideo -> h
    java.util.HashMap hiddenPlatforms -> i
    android.view.View bgView -> j
    cn.sharesdk.onekeyshare.OnekeyShareTheme theme -> k
    android.content.Context context -> l
    cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener onShareButtonClickListener -> m
    void show(android.content.Context) -> a
    void setTitle(java.lang.String) -> a
    void setText(java.lang.String) -> b
    void setImagePath(java.lang.String) -> c
    void setImageUrl(java.lang.String) -> d
    void setUrl(java.lang.String) -> e
    void setComment(java.lang.String) -> f
    void setSite(java.lang.String) -> g
    void disableSSOWhenAuthorize() -> a
    void share(java.util.HashMap) -> a
    void onComplete(cn.sharesdk.framework.Platform,int,java.util.HashMap) -> a
    void onError(cn.sharesdk.framework.Platform,int,java.lang.Throwable) -> a
    void onCancel(cn.sharesdk.framework.Platform,int) -> a
    boolean handleMessage(android.os.Message) -> handleMessage
    void showNotification(java.lang.String) -> h
cn.sharesdk.onekeyshare.OnekeyShare$1 -> cn.sharesdk.b.d:
    cn.sharesdk.onekeyshare.OnekeyShare this$0 -> a
    void doShare(java.util.HashMap) -> a
cn.sharesdk.onekeyshare.OnekeyShareTheme -> cn.sharesdk.b.e:
    cn.sharesdk.onekeyshare.OnekeyShareTheme CLASSIC -> a
    cn.sharesdk.onekeyshare.OnekeyShareTheme SKYBLUE -> b
    cn.sharesdk.onekeyshare.OnekeyShareTheme[] $VALUES -> c
    cn.sharesdk.onekeyshare.OnekeyShareTheme[] values() -> values
    cn.sharesdk.onekeyshare.OnekeyShareTheme valueOf(java.lang.String) -> valueOf
cn.sharesdk.onekeyshare.PlatformListFakeActivity -> cn.sharesdk.b.f:
    java.util.HashMap shareParamsMap -> a
    boolean silent -> b
    java.util.ArrayList customerLogos -> c
    java.util.HashMap hiddenPlatforms -> d
    boolean canceled -> j
    android.view.View backgroundView -> e
    cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener onShareButtonClickListener -> f
    boolean dialogMode -> g
    cn.sharesdk.onekeyshare.ThemeShareCallback themeShareCallback -> h
    void onCreate() -> a
    boolean onKeyEvent(int,android.view.KeyEvent) -> a
    void setCanceled(boolean) -> a
    boolean onFinish() -> b
    void show(android.content.Context,android.content.Intent) -> a
    void setShareParamsMap(java.util.HashMap) -> b_
    void setSilent(boolean) -> b
    void setCustomerLogos(java.util.ArrayList) -> a
    void setHiddenPlatforms(java.util.HashMap) -> b
    android.view.View getBackgroundView() -> c
    void setBackgroundView(android.view.View) -> a
    void setOnShareButtonClickListener(cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener) -> a
    void setDialogMode(boolean) -> c
    void setThemeShareCallback(cn.sharesdk.onekeyshare.ThemeShareCallback) -> a
    void onShareButtonClick(android.view.View,java.util.List) -> a
    void showEditPage(java.util.List) -> a
    void showEditPage(android.content.Context,cn.sharesdk.framework.Platform) -> a
    void showEditPage(android.content.Context,java.util.List) -> a
cn.sharesdk.onekeyshare.PlatformListFakeActivity$1 -> cn.sharesdk.b.g:
    cn.sharesdk.onekeyshare.PlatformListFakeActivity this$0 -> a
    void onResult(java.util.HashMap) -> a
cn.sharesdk.onekeyshare.PlatformListFakeActivity$OnShareButtonClickListener -> cn.sharesdk.b.h:
    void onClick(android.view.View,java.util.List) -> onClick
cn.sharesdk.onekeyshare.ShareContentCustomizeCallback -> cn.sharesdk.b.i:
    void onShare(cn.sharesdk.framework.Platform,cn.sharesdk.framework.Platform$ShareParams) -> a
cn.sharesdk.onekeyshare.ShareCore -> cn.sharesdk.b.j:
    cn.sharesdk.onekeyshare.ShareContentCustomizeCallback customizeCallback -> a
    void setShareContentCustomizeCallback(cn.sharesdk.onekeyshare.ShareContentCustomizeCallback) -> a
    boolean share(cn.sharesdk.framework.Platform,java.util.HashMap) -> a
    boolean isUseClientToShare(java.lang.String) -> a
    boolean isDirectShare(cn.sharesdk.framework.Platform) -> a
cn.sharesdk.onekeyshare.ThemeShareCallback -> cn.sharesdk.b.k:
    void doShare(java.util.HashMap) -> a
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView -> cn.sharesdk.b.a.a.a:
    int LINE_PER_PAGE -> a
    int COLUMN_PER_LINE -> b
    int PAGE_SIZE -> c
    com.mob.tools.gui.ViewPagerClassic pager -> d
    android.widget.ImageView[] points -> e
    android.graphics.Bitmap grayPoint -> f
    android.graphics.Bitmap bluePoint -> g
    boolean silent -> h
    cn.sharesdk.framework.Platform[] platformList -> i
    java.util.HashMap reqData -> j
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage parent -> k
    java.util.ArrayList customers -> l
    java.util.HashMap hiddenPlatforms -> m
    android.view.View bgView -> n
    long lastClickTime -> o
    void init(android.content.Context) -> a
    void calPageSize() -> c
    boolean handleMessage(android.os.Message) -> handleMessage
    void afterPlatformListGot() -> a
    void onConfigurationChanged() -> b
    void setData(java.util.HashMap,boolean) -> a
    void setHiddenPlatforms(java.util.HashMap) -> setHiddenPlatforms
    void setCustomerLogos(java.util.ArrayList) -> setCustomerLogos
    void setEditPageBackground(android.view.View) -> setEditPageBackground
    void setParent(cn.sharesdk.onekeyshare.theme.classic.PlatformListPage) -> setParent
    void onClick(android.view.View) -> onClick
    void disableOverScrollMode(android.view.View) -> a
    cn.sharesdk.framework.Platform[] access$002(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView,cn.sharesdk.framework.Platform[]) -> a
    cn.sharesdk.framework.Platform[] access$000(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> a
    java.util.HashMap access$100(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> b
    java.util.ArrayList access$200(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> c
    int access$300(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> d
    int access$400(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> e
    android.widget.ImageView[] access$500(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> f
    android.graphics.Bitmap access$600(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> g
    android.graphics.Bitmap access$700(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView) -> h
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$1 -> cn.sharesdk.b.a.a.b:
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView this$0 -> a
    void run() -> run
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$GridView -> cn.sharesdk.b.a.a.c:
    java.lang.Object[] beans -> a
    android.view.View$OnClickListener callback -> b
    int lines -> c
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter platformAdapter -> d
    void setData(int,java.lang.Object[]) -> a
    void init() -> a
    android.widget.LinearLayout getView(int,android.view.View$OnClickListener,android.content.Context) -> a
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform) -> a
    java.lang.String getName(cn.sharesdk.framework.Platform) -> b
cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter -> cn.sharesdk.b.a.a.d:
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$GridView[] girds -> a
    java.util.List logos -> b
    android.view.View$OnClickListener callback -> c
    int lines -> d
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView platformGridView -> e
    int getCount() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> a
    void onScreenChange(int,int) -> a
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView access$800(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter) -> a
    android.view.View$OnClickListener access$900(cn.sharesdk.onekeyshare.theme.classic.PlatformGridView$PlatformAdapter) -> b
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage -> cn.sharesdk.b.a.a.e:
    android.widget.FrameLayout flPage -> j
    cn.sharesdk.onekeyshare.theme.classic.PlatformGridView grid -> k
    android.widget.Button btnCancel -> l
    android.view.animation.Animation animShow -> m
    android.view.animation.Animation animHide -> n
    boolean finishing -> o
    android.widget.LinearLayout llPage -> p
    void onCreate() -> a
    void initPageView() -> m
    void initAnim() -> n
    void onConfigurationChanged(android.content.res.Configuration) -> a
    boolean onFinish() -> b
    void onClick(android.view.View) -> onClick
    void onPlatformIconClick(android.view.View,java.util.ArrayList) -> a
    android.widget.FrameLayout access$000(cn.sharesdk.onekeyshare.theme.classic.PlatformListPage) -> a
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$1 -> cn.sharesdk.b.a.a.f:
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage this$0 -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
cn.sharesdk.onekeyshare.theme.classic.PlatformListPage$2 -> cn.sharesdk.b.a.a.g:
    cn.sharesdk.onekeyshare.theme.classic.PlatformListPage this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter -> cn.sharesdk.b.a.b.a:
    android.content.Context context -> a
    java.util.List logos -> b
    java.util.List checkedPositionList -> c
    int directOnlyPosition -> d
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onClick(android.view.View) -> onClick
    void setData(cn.sharesdk.framework.Platform[],java.util.HashMap) -> a
    void setCustomerLogos(java.util.ArrayList) -> a
    java.util.List getCheckedItems() -> a
    android.graphics.Bitmap getIcon(cn.sharesdk.framework.Platform,java.lang.String) -> a
    java.lang.String getName(cn.sharesdk.framework.Platform) -> a
cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter$ViewHolder -> cn.sharesdk.b.a.b.b:
    java.lang.Integer position -> a
    android.widget.ImageView logoImageView -> b
    android.widget.ImageView checkedImageView -> c
    android.widget.TextView nameTextView -> d
cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage -> cn.sharesdk.b.a.b.c:
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter gridViewAdapter -> j
    void onCreate() -> a
    void initView() -> m
    void onClick(android.view.View) -> onClick
    void onShareButtonClick(android.view.View) -> c
    java.util.HashMap access$000(cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage) -> a
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformGridViewAdapter access$100(cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage) -> b
cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage$1 -> cn.sharesdk.b.a.b.d:
    cn.sharesdk.onekeyshare.theme.skyblue.PlatformListPage this$0 -> a
    cn.sharesdk.framework.Platform[] doInBackground(java.lang.Void[]) -> a
    void onPostExecute(cn.sharesdk.framework.Platform[]) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
cn.sharesdk.wechat.utils.WXAppExtendObject -> cn.sharesdk.c.a.a:
    java.lang.String extInfo -> a
    java.lang.String filePath -> b
    byte[] fileData -> c
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.WXMediaMessage -> cn.sharesdk.c.a.b:
    int sdkVer -> a
    java.lang.String title -> b
    java.lang.String description -> c
    byte[] thumbData -> d
    cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject mediaObject -> e
cn.sharesdk.wechat.utils.WXMediaMessage$IMediaObject -> cn.sharesdk.c.a.c:
    void serialize(android.os.Bundle) -> a
    void unserialize(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.WXMediaMessage$a -> cn.sharesdk.c.a.d:
    android.os.Bundle a(cn.sharesdk.wechat.utils.WXMediaMessage) -> a
    cn.sharesdk.wechat.utils.WXMediaMessage a(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.WechatHandlerActivity -> cn.sharesdk.c.a.e:
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onGetMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> a
    void onShowMessageFromWXReq(cn.sharesdk.wechat.utils.WXMediaMessage) -> b
cn.sharesdk.wechat.utils.WechatHelper -> cn.sharesdk.c.a.f:
    boolean a -> a
    cn.sharesdk.wechat.utils.WechatHelper b -> b
    cn.sharesdk.wechat.utils.j c -> c
    cn.sharesdk.wechat.utils.k d -> d
    cn.sharesdk.wechat.utils.WechatHelper a() -> a
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity) -> a
cn.sharesdk.wechat.utils.WechatResp -> cn.sharesdk.c.a.g:
    int f -> a
    java.lang.String g -> b
    java.lang.String h -> c
    int a() -> a
    void b(android.os.Bundle) -> a
    void a(android.os.Bundle) -> b
cn.sharesdk.wechat.utils.b -> cn.sharesdk.c.a.h:
    java.lang.String a -> d
    java.lang.String b -> e
    int c -> f
    java.lang.String d -> g
    java.lang.String e -> h
    int a() -> a
    void a(android.os.Bundle) -> b
    void b(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.c -> cn.sharesdk.c.a.i:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> d
    int a() -> a
    void a(android.os.Bundle) -> b
    void b(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.e -> cn.sharesdk.c.a.j:
    int a() -> a
cn.sharesdk.wechat.utils.f -> cn.sharesdk.c.a.k:
    cn.sharesdk.wechat.utils.WXMediaMessage a -> d
    int a() -> a
    void a(android.os.Bundle) -> b
    void b(android.os.Bundle) -> a
cn.sharesdk.wechat.utils.g -> cn.sharesdk.c.a.l:
    java.lang.String a -> a
    java.lang.String b -> b
    cn.sharesdk.framework.a.a c -> c
    cn.sharesdk.framework.Platform d -> d
    int e -> e
    void a(android.os.Bundle,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(java.lang.String,cn.sharesdk.framework.authorize.AuthorizeListener) -> a
    void a(java.lang.String) -> a
    int b(cn.sharesdk.wechat.utils.g) -> a
    cn.sharesdk.framework.a.a c(cn.sharesdk.wechat.utils.g) -> b
    java.lang.String d(cn.sharesdk.wechat.utils.g) -> c
    java.lang.String e(cn.sharesdk.wechat.utils.g) -> d
    void a(cn.sharesdk.wechat.utils.g,java.lang.String) -> a
cn.sharesdk.wechat.utils.h -> cn.sharesdk.c.a.m:
    java.lang.String a -> a
    cn.sharesdk.framework.authorize.AuthorizeListener b -> b
    cn.sharesdk.wechat.utils.g c -> c
    void run() -> run
cn.sharesdk.wechat.utils.j -> cn.sharesdk.c.a.n:
    byte[] a(java.lang.String,java.lang.String,int) -> a
    boolean a(cn.sharesdk.wechat.utils.WechatHandlerActivity,cn.sharesdk.wechat.utils.k) -> a
    boolean a(byte[],byte[]) -> a
cn.sharesdk.wechat.utils.k -> cn.sharesdk.c.a.o:
    cn.sharesdk.framework.Platform a -> a
    cn.sharesdk.framework.Platform$ShareParams b -> b
    cn.sharesdk.framework.PlatformActionListener c -> c
    cn.sharesdk.framework.authorize.AuthorizeListener d -> d
    cn.sharesdk.wechat.utils.g e -> e
    void a(cn.sharesdk.wechat.utils.WechatResp) -> a
com.alibaba.fastjson.JSON -> com.alibaba.fastjson.JSON:
    java.lang.String DEFAULT_TYPE_KEY -> DEFAULT_TYPE_KEY
    int DEFAULT_PARSER_FEATURE -> DEFAULT_PARSER_FEATURE
    java.lang.String DEFFAULT_DATE_FORMAT -> DEFFAULT_DATE_FORMAT
    int DEFAULT_GENERATE_FEATURE -> DEFAULT_GENERATE_FEATURE
    java.lang.String VERSION -> VERSION
    java.lang.Object parse(java.lang.String) -> parse
    java.lang.Object parse(java.lang.String,int) -> parse
    java.lang.Object parse(byte[],com.alibaba.fastjson.parser.Feature[]) -> parse
    java.lang.Object parse(byte[],int,int,java.nio.charset.CharsetDecoder,com.alibaba.fastjson.parser.Feature[]) -> parse
    java.lang.Object parse(byte[],int,int,java.nio.charset.CharsetDecoder,int) -> parse
    java.lang.Object parse(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parse
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    com.alibaba.fastjson.JSONObject parseObject(java.lang.String) -> parseObject
    java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    int handleResovleTask(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object) -> handleResovleTask
    java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(byte[],int,int,java.nio.charset.CharsetDecoder,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(char[],int,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    java.lang.Object parseObject(java.lang.String,java.lang.Class) -> parseObject
    com.alibaba.fastjson.JSONArray parseArray(java.lang.String) -> parseArray
    java.util.List parseArray(java.lang.String,java.lang.Class) -> parseArray
    java.util.List parseArray(java.lang.String,java.lang.reflect.Type[]) -> parseArray
    java.lang.String toJSONString(java.lang.Object) -> toJSONString
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    java.lang.String toJSONStringWithDateFormat(java.lang.Object,java.lang.String,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringWithDateFormat
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    java.lang.String toJSONStringZ(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringZ
    byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    java.lang.String toJSONString(java.lang.Object,boolean) -> toJSONString
    void writeJSONStringTo(java.lang.Object,java.io.Writer,com.alibaba.fastjson.serializer.SerializerFeature[]) -> writeJSONStringTo
    java.lang.String toString() -> toString
    java.lang.String toJSONString() -> toJSONString
    void writeJSONString(java.lang.Appendable) -> writeJSONString
    java.lang.Object toJSON(java.lang.Object) -> toJSON
    java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.parser.ParserConfig) -> toJSON
    java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class) -> toJavaObject
com.alibaba.fastjson.JSONArray -> com.alibaba.fastjson.JSONArray:
    long serialVersionUID -> serialVersionUID
    java.util.List list -> list
    java.lang.Object relatedArray -> relatedArray
    java.lang.reflect.Type componentType -> componentType
    java.lang.Object getRelatedArray() -> getRelatedArray
    void setRelatedArray(java.lang.Object) -> setRelatedArray
    java.lang.reflect.Type getComponentType() -> getComponentType
    void setComponentType(java.lang.reflect.Type) -> setComponentType
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean contains(java.lang.Object) -> contains
    java.util.Iterator iterator() -> iterator
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean remove(java.lang.Object) -> remove
    boolean containsAll(java.util.Collection) -> containsAll
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    void clear() -> clear
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    java.lang.Object remove(int) -> remove
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    java.util.ListIterator listIterator() -> listIterator
    java.util.ListIterator listIterator(int) -> listIterator
    java.util.List subList(int,int) -> subList
    java.lang.Object get(int) -> get
    com.alibaba.fastjson.JSONObject getJSONObject(int) -> getJSONObject
    com.alibaba.fastjson.JSONArray getJSONArray(int) -> getJSONArray
    java.lang.Object getObject(int,java.lang.Class) -> getObject
    java.lang.Boolean getBoolean(int) -> getBoolean
    boolean getBooleanValue(int) -> getBooleanValue
    java.lang.Byte getByte(int) -> getByte
    byte getByteValue(int) -> getByteValue
    java.lang.Short getShort(int) -> getShort
    short getShortValue(int) -> getShortValue
    java.lang.Integer getInteger(int) -> getInteger
    int getIntValue(int) -> getIntValue
    java.lang.Long getLong(int) -> getLong
    long getLongValue(int) -> getLongValue
    java.lang.Float getFloat(int) -> getFloat
    float getFloatValue(int) -> getFloatValue
    java.lang.Double getDouble(int) -> getDouble
    double getDoubleValue(int) -> getDoubleValue
    java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    java.math.BigInteger getBigInteger(int) -> getBigInteger
    java.lang.String getString(int) -> getString
    java.util.Date getDate(int) -> getDate
    java.sql.Date getSqlDate(int) -> getSqlDate
    java.sql.Timestamp getTimestamp(int) -> getTimestamp
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.alibaba.fastjson.JSONAware -> com.alibaba.fastjson.JSONAware:
    java.lang.String toJSONString() -> toJSONString
com.alibaba.fastjson.JSONException -> com.alibaba.fastjson.JSONException:
    long serialVersionUID -> serialVersionUID
com.alibaba.fastjson.JSONObject -> com.alibaba.fastjson.JSONObject:
    long serialVersionUID -> serialVersionUID
    int DEFAULT_INITIAL_CAPACITY -> DEFAULT_INITIAL_CAPACITY
    java.util.Map map -> map
    int size() -> size
    boolean isEmpty() -> isEmpty
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    java.lang.Object getObject(java.lang.String,java.lang.Class) -> getObject
    java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    byte[] getBytes(java.lang.String) -> getBytes
    boolean getBooleanValue(java.lang.String) -> getBooleanValue
    java.lang.Byte getByte(java.lang.String) -> getByte
    byte getByteValue(java.lang.String) -> getByteValue
    java.lang.Short getShort(java.lang.String) -> getShort
    short getShortValue(java.lang.String) -> getShortValue
    java.lang.Integer getInteger(java.lang.String) -> getInteger
    int getIntValue(java.lang.String) -> getIntValue
    java.lang.Long getLong(java.lang.String) -> getLong
    long getLongValue(java.lang.String) -> getLongValue
    java.lang.Float getFloat(java.lang.String) -> getFloat
    float getFloatValue(java.lang.String) -> getFloatValue
    java.lang.Double getDouble(java.lang.String) -> getDouble
    double getDoubleValue(java.lang.String) -> getDoubleValue
    java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    java.math.BigInteger getBigInteger(java.lang.String) -> getBigInteger
    java.lang.String getString(java.lang.String) -> getString
    java.util.Date getDate(java.lang.String) -> getDate
    java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    java.sql.Timestamp getTimestamp(java.lang.String) -> getTimestamp
    java.lang.Object put(java.lang.String,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    void clear() -> clear
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set keySet() -> keySet
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object clone() -> clone
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.alibaba.fastjson.JSONReader -> com.alibaba.fastjson.JSONReader:
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> parser
    com.alibaba.fastjson.JSONStreamContext context -> context
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    void startObject() -> startObject
    void endObject() -> endObject
    void startArray() -> startArray
    void endArray() -> endArray
    void startStructure() -> startStructure
    void endStructure() -> endStructure
    boolean hasNext() -> hasNext
    void close() -> close
    java.lang.Integer readInteger() -> readInteger
    java.lang.Long readLong() -> readLong
    java.lang.String readString() -> readString
    java.lang.Object readObject(java.lang.reflect.Type) -> readObject
    java.lang.Object readObject(java.lang.Class) -> readObject
    void readObject(java.lang.Object) -> readObject
    java.lang.Object readObject() -> readObject
    java.lang.Object readObject(java.util.Map) -> readObject
    void readBefore() -> readBefore
    void readAfter() -> readAfter
com.alibaba.fastjson.JSONStreamAware -> com.alibaba.fastjson.JSONStreamAware:
    void writeJSONString(java.lang.Appendable) -> writeJSONString
com.alibaba.fastjson.JSONStreamContext -> com.alibaba.fastjson.JSONStreamContext:
    int StartObject -> StartObject
    int PropertyKey -> PropertyKey
    int PropertyValue -> PropertyValue
    int StartArray -> StartArray
    int ArrayValue -> ArrayValue
    com.alibaba.fastjson.JSONStreamContext parent -> parent
    int state -> state
    com.alibaba.fastjson.JSONStreamContext getParent() -> getParent
    int getState() -> getState
    void setState(int) -> setState
com.alibaba.fastjson.JSONWriter -> com.alibaba.fastjson.JSONWriter:
    com.alibaba.fastjson.serializer.SerializeWriter writer -> writer
    com.alibaba.fastjson.serializer.JSONSerializer serializer -> serializer
    com.alibaba.fastjson.JSONStreamContext context -> context
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    void startObject() -> startObject
    void endObject() -> endObject
    void writeKey(java.lang.String) -> writeKey
    void writeValue(java.lang.Object) -> writeValue
    void writeObject(java.lang.String) -> writeObject
    void writeObject(java.lang.Object) -> writeObject
    void startArray() -> startArray
    void beginStructure() -> beginStructure
    void endArray() -> endArray
    void endStructure() -> endStructure
    void beforeWrite() -> beforeWrite
    void afterWriter() -> afterWriter
    void flush() -> flush
    void close() -> close
    void writeStartObject() -> writeStartObject
    void writeEndObject() -> writeEndObject
    void writeStartArray() -> writeStartArray
    void writeEndArray() -> writeEndArray
com.alibaba.fastjson.TypeReference -> com.alibaba.fastjson.TypeReference:
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type LIST_STRING -> LIST_STRING
    java.lang.reflect.Type getType() -> getType
com.alibaba.fastjson.TypeReference$1 -> com.alibaba.fastjson.TypeReference$1:
com.alibaba.fastjson.annotation.JSONCreator -> com.alibaba.fastjson.annotation.JSONCreator:
com.alibaba.fastjson.annotation.JSONField -> com.alibaba.fastjson.annotation.JSONField:
    java.lang.String name() -> name
    java.lang.String format() -> format
    boolean serialize() -> serialize
    boolean deserialize() -> deserialize
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> serialzeFeatures
    com.alibaba.fastjson.parser.Feature[] parseFeatures() -> parseFeatures
com.alibaba.fastjson.annotation.JSONType -> com.alibaba.fastjson.annotation.JSONType:
    boolean asm() -> asm
    java.lang.String[] orders() -> orders
    java.lang.String[] ignores() -> ignores
    com.alibaba.fastjson.serializer.SerializerFeature[] serialzeFeatures() -> serialzeFeatures
    boolean alphabetic() -> alphabetic
    java.lang.Class mappingTo() -> mappingTo
com.alibaba.fastjson.parser.AbstractJSONParser -> com.alibaba.fastjson.parser.AbstractJSONParser:
com.alibaba.fastjson.parser.CharTypes -> com.alibaba.fastjson.parser.CharTypes:
    char[] digits -> digits
    boolean[] firstIdentifierFlags -> firstIdentifierFlags
    boolean[] identifierFlags -> identifierFlags
    boolean[] specicalFlags_doubleQuotes -> specicalFlags_doubleQuotes
    boolean[] specicalFlags_singleQuotes -> specicalFlags_singleQuotes
    char[] replaceChars -> replaceChars
    char[] ASCII_CHARS -> ASCII_CHARS
    boolean isSpecial_doubleQuotes(char) -> isSpecial_doubleQuotes
com.alibaba.fastjson.parser.DefaultJSONParser -> com.alibaba.fastjson.parser.DefaultJSONParser:
    java.lang.Object input -> input
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> symbolTable
    com.alibaba.fastjson.parser.ParserConfig config -> config
    java.util.Set primitiveClasses -> primitiveClasses
    java.lang.String dateFormatPattern -> dateFormatPattern
    java.text.DateFormat dateFormat -> dateFormat
    com.alibaba.fastjson.parser.JSONLexer lexer -> lexer
    com.alibaba.fastjson.parser.ParseContext context -> context
    com.alibaba.fastjson.parser.ParseContext[] contextArray -> contextArray
    int contextArrayIndex -> contextArrayIndex
    java.util.List resolveTaskList -> resolveTaskList
    int NONE -> NONE
    int NeedToResolve -> NeedToResolve
    int TypeNameRedirect -> TypeNameRedirect
    int resolveStatus -> resolveStatus
    java.lang.String getDateFomartPattern() -> getDateFomartPattern
    java.text.DateFormat getDateFormat() -> getDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    void setDateFomrat(java.text.DateFormat) -> setDateFomrat
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    java.lang.String getInput() -> getInput
    java.lang.Object parseObject(java.util.Map,java.lang.Object) -> parseObject
    com.alibaba.fastjson.parser.ParserConfig getConfig() -> getConfig
    void setConfig(com.alibaba.fastjson.parser.ParserConfig) -> setConfig
    java.lang.Object parseObject(java.lang.Class) -> parseObject
    java.lang.Object parseObject(java.lang.reflect.Type) -> parseObject
    java.util.List parseArray(java.lang.Class) -> parseArray
    void parseArray(java.lang.Class,java.util.Collection) -> parseArray
    void parseArray(java.lang.reflect.Type,java.util.Collection) -> parseArray
    void parseArray(java.lang.reflect.Type,java.util.Collection,java.lang.Object) -> parseArray
    java.lang.Object[] parseArray(java.lang.reflect.Type[]) -> parseArray
    void parseObject(java.lang.Object) -> parseObject
    java.lang.Object parseArrayWithType(java.lang.reflect.Type) -> parseArrayWithType
    int getResolveStatus() -> getResolveStatus
    void setResolveStatus(int) -> setResolveStatus
    java.lang.Object getObject(java.lang.String) -> getObject
    void checkListResolve(java.util.Collection) -> checkListResolve
    void checkMapResolve(java.util.Map,java.lang.String) -> checkMapResolve
    java.lang.Object parseObject(java.util.Map) -> parseObject
    com.alibaba.fastjson.JSONObject parseObject() -> parseObject
    void parseArray(java.util.Collection) -> parseArray
    void parseArray(java.util.Collection,java.lang.Object) -> parseArray
    com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    java.util.List getResolveTaskList() -> getResolveTaskList
    void addResolveTask(com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask) -> addResolveTask
    com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask getLastResolveTask() -> getLastResolveTask
    void setContext(com.alibaba.fastjson.parser.ParseContext) -> setContext
    void popContext() -> popContext
    com.alibaba.fastjson.parser.ParseContext setContext(java.lang.Object,java.lang.Object) -> setContext
    com.alibaba.fastjson.parser.ParseContext setContext(com.alibaba.fastjson.parser.ParseContext,java.lang.Object,java.lang.Object) -> setContext
    void addContext(com.alibaba.fastjson.parser.ParseContext) -> addContext
    java.lang.Object parse() -> parse
    java.lang.Object parseKey() -> parseKey
    java.lang.Object parse(java.lang.Object) -> parse
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    com.alibaba.fastjson.parser.JSONLexer getLexer() -> getLexer
    void accept(int) -> accept
    void accept(int,int) -> accept
    void close() -> close
com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask -> com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask:
    com.alibaba.fastjson.parser.ParseContext context -> context
    java.lang.String referenceValue -> referenceValue
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer fieldDeserializer -> fieldDeserializer
    com.alibaba.fastjson.parser.ParseContext ownerContext -> ownerContext
    com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    java.lang.String getReferenceValue() -> getReferenceValue
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer getFieldDeserializer() -> getFieldDeserializer
    void setFieldDeserializer(com.alibaba.fastjson.parser.deserializer.FieldDeserializer) -> setFieldDeserializer
    com.alibaba.fastjson.parser.ParseContext getOwnerContext() -> getOwnerContext
    void setOwnerContext(com.alibaba.fastjson.parser.ParseContext) -> setOwnerContext
com.alibaba.fastjson.parser.Feature -> com.alibaba.fastjson.parser.Feature:
    com.alibaba.fastjson.parser.Feature AutoCloseSource -> AutoCloseSource
    com.alibaba.fastjson.parser.Feature AllowComment -> AllowComment
    com.alibaba.fastjson.parser.Feature AllowUnQuotedFieldNames -> AllowUnQuotedFieldNames
    com.alibaba.fastjson.parser.Feature AllowSingleQuotes -> AllowSingleQuotes
    com.alibaba.fastjson.parser.Feature InternFieldNames -> InternFieldNames
    com.alibaba.fastjson.parser.Feature AllowISO8601DateFormat -> AllowISO8601DateFormat
    com.alibaba.fastjson.parser.Feature AllowArbitraryCommas -> AllowArbitraryCommas
    com.alibaba.fastjson.parser.Feature UseBigDecimal -> UseBigDecimal
    com.alibaba.fastjson.parser.Feature IgnoreNotMatch -> IgnoreNotMatch
    com.alibaba.fastjson.parser.Feature SortFeidFastMatch -> SortFeidFastMatch
    com.alibaba.fastjson.parser.Feature DisableASM -> DisableASM
    com.alibaba.fastjson.parser.Feature DisableCircularReferenceDetect -> DisableCircularReferenceDetect
    com.alibaba.fastjson.parser.Feature InitStringFieldAsEmpty -> InitStringFieldAsEmpty
    int mask -> mask
    com.alibaba.fastjson.parser.Feature[] $VALUES -> $VALUES
    com.alibaba.fastjson.parser.Feature[] values() -> values
    com.alibaba.fastjson.parser.Feature valueOf(java.lang.String) -> valueOf
    int getMask() -> getMask
    boolean isEnabled(int,com.alibaba.fastjson.parser.Feature) -> isEnabled
    int config(int,com.alibaba.fastjson.parser.Feature,boolean) -> config
com.alibaba.fastjson.parser.JSONLexer -> com.alibaba.fastjson.parser.JSONLexer:
    byte EOI -> EOI
    int token -> token
    int pos -> pos
    int features -> features
    char ch -> ch
    int bp -> bp
    int eofPos -> eofPos
    char[] sbuf -> sbuf
    int sp -> sp
    int np -> np
    boolean hasSpecial -> hasSpecial
    java.util.Calendar calendar -> calendar
    java.lang.ThreadLocal SBUF_REF_LOCAL -> SBUF_REF_LOCAL
    com.alibaba.fastjson.parser.Keywords keywods -> keywods
    char[] typeFieldName -> typeFieldName
    boolean[] whitespaceFlags -> whitespaceFlags
    long MULTMIN_RADIX_TEN -> MULTMIN_RADIX_TEN
    long N_MULTMAX_RADIX_TEN -> N_MULTMAX_RADIX_TEN
    int INT_MULTMIN_RADIX_TEN -> INT_MULTMIN_RADIX_TEN
    int INT_N_MULTMAX_RADIX_TEN -> INT_N_MULTMAX_RADIX_TEN
    int[] digits -> digits
    void nextToken() -> nextToken
    void nextToken(int) -> nextToken
    void nextIdent() -> nextIdent
    void nextTokenWithColon() -> nextTokenWithColon
    int token() -> token
    java.lang.String tokenName() -> tokenName
    int pos() -> pos
    int getBufferPosition() -> getBufferPosition
    java.lang.Number integerValue() -> integerValue
    void nextTokenWithColon(int) -> nextTokenWithColon
    float floatValue() -> floatValue
    double doubleValue() -> doubleValue
    void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    java.lang.String numberString() -> numberString
    boolean isEOF() -> isEOF
    char getCurrent() -> getCurrent
    char charAt(int) -> charAt
    char next() -> next
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbol
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable,char) -> scanSymbol
    void resetStringPosition() -> resetStringPosition
    java.lang.String scanSymbolUnQuoted(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbolUnQuoted
    void copyTo(int,int,char[]) -> copyTo
    void scanString() -> scanString
    java.util.Calendar getCalendar() -> getCalendar
    int intValue() -> intValue
    byte[] bytesValue() -> bytesValue
    void close() -> close
    boolean isRef() -> isRef
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    void scanTrue() -> scanTrue
    void scanTreeSet() -> scanTreeSet
    void scanNullOrNew() -> scanNullOrNew
    void scanFalse() -> scanFalse
    void scanIdent() -> scanIdent
    java.lang.String stringVal() -> stringVal
    boolean isBlankInput() -> isBlankInput
    void skipWhitespace() -> skipWhitespace
    void scanStringSingleQuote() -> scanStringSingleQuote
    void scanSet() -> scanSet
    void putChar(char) -> putChar
    void scanNumber() -> scanNumber
    long longValue() -> longValue
    java.lang.Number decimalValue(boolean) -> decimalValue
    java.math.BigDecimal decimalValue() -> decimalValue
    java.lang.Number numberValue() -> numberValue
    boolean isWhitespace(char) -> isWhitespace
com.alibaba.fastjson.parser.JSONReaderScanner -> com.alibaba.fastjson.parser.JSONReaderScanner:
    int BUF_INIT_LEN -> BUF_INIT_LEN
    java.lang.ThreadLocal BUF_REF_LOCAL -> BUF_REF_LOCAL
    java.io.Reader reader -> reader
    char[] buf -> buf
    int bufLength -> bufLength
    char charAt(int) -> charAt
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    char next() -> next
    void copyTo(int,int,char[]) -> copyTo
    byte[] bytesValue() -> bytesValue
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String stringVal() -> stringVal
    java.lang.String numberString() -> numberString
    void close() -> close
    boolean isEOF() -> isEOF
com.alibaba.fastjson.parser.JSONScanner -> com.alibaba.fastjson.parser.JSONScanner:
    java.lang.String text -> text
    int ISO8601_LEN_0 -> ISO8601_LEN_0
    int ISO8601_LEN_1 -> ISO8601_LEN_1
    int ISO8601_LEN_2 -> ISO8601_LEN_2
    char charAt(int) -> charAt
    char next() -> next
    void copyTo(int,int,char[]) -> copyTo
    java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    byte[] bytesValue() -> bytesValue
    void arrayCopy(int,char[],int,int) -> arrayCopy
    java.lang.String stringVal() -> stringVal
    java.lang.String subString(int,int) -> subString
    java.lang.String numberString() -> numberString
    boolean scanISO8601DateIfMatch() -> scanISO8601DateIfMatch
    boolean scanISO8601DateIfMatch(boolean) -> scanISO8601DateIfMatch
    boolean checkTime(char,char,char,char,char,char) -> checkTime
    void setCalendar(char,char,char,char,char,char,char,char) -> setCalendar
    boolean checkDate(char,char,char,char,char,char,int,int) -> checkDate
    boolean isEOF() -> isEOF
com.alibaba.fastjson.parser.JSONToken -> com.alibaba.fastjson.parser.JSONToken:
    int ERROR -> ERROR
    int LITERAL_INT -> LITERAL_INT
    int LITERAL_FLOAT -> LITERAL_FLOAT
    int LITERAL_STRING -> LITERAL_STRING
    int LITERAL_ISO8601_DATE -> LITERAL_ISO8601_DATE
    int TRUE -> TRUE
    int FALSE -> FALSE
    int NULL -> NULL
    int NEW -> NEW
    int LPAREN -> LPAREN
    int RPAREN -> RPAREN
    int LBRACE -> LBRACE
    int RBRACE -> RBRACE
    int LBRACKET -> LBRACKET
    int RBRACKET -> RBRACKET
    int COMMA -> COMMA
    int COLON -> COLON
    int IDENTIFIER -> IDENTIFIER
    int FIELD_NAME -> FIELD_NAME
    int EOF -> EOF
    int SET -> SET
    int TREE_SET -> TREE_SET
    java.lang.String name(int) -> name
com.alibaba.fastjson.parser.JavaBeanMapping -> com.alibaba.fastjson.parser.JavaBeanMapping:
    com.alibaba.fastjson.parser.JavaBeanMapping instance -> instance
    com.alibaba.fastjson.parser.JavaBeanMapping getGlobalInstance() -> getGlobalInstance
com.alibaba.fastjson.parser.Keywords -> com.alibaba.fastjson.parser.Keywords:
    java.util.Map keywords -> keywords
    com.alibaba.fastjson.parser.Keywords DEFAULT_KEYWORDS -> DEFAULT_KEYWORDS
    java.lang.Integer getKeyword(java.lang.String) -> getKeyword
com.alibaba.fastjson.parser.ParseContext -> com.alibaba.fastjson.parser.ParseContext:
    java.lang.Object object -> object
    com.alibaba.fastjson.parser.ParseContext parent -> parent
    java.lang.Object fieldName -> fieldName
    java.lang.reflect.Type type -> type
    java.lang.reflect.Type getType() -> getType
    void setType(java.lang.reflect.Type) -> setType
    java.lang.Object getObject() -> getObject
    void setObject(java.lang.Object) -> setObject
    com.alibaba.fastjson.parser.ParseContext getParentContext() -> getParentContext
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
com.alibaba.fastjson.parser.ParserConfig -> com.alibaba.fastjson.parser.ParserConfig:
    java.util.Set primitiveClasses -> primitiveClasses
    com.alibaba.fastjson.parser.ParserConfig global -> global
    com.alibaba.fastjson.util.IdentityHashMap derializers -> derializers
    com.alibaba.fastjson.parser.SymbolTable symbolTable -> symbolTable
    com.alibaba.fastjson.parser.ParserConfig getGlobalInstance() -> getGlobalInstance
    com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    com.alibaba.fastjson.util.IdentityHashMap getDerializers() -> getDerializers
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.reflect.Type) -> getDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.Class,java.lang.reflect.Type) -> getDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer createJavaBeanDeserializer(java.lang.Class,java.lang.reflect.Type) -> createJavaBeanDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    void putDeserializer(java.lang.reflect.Type,com.alibaba.fastjson.parser.deserializer.ObjectDeserializer) -> putDeserializer
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(com.alibaba.fastjson.util.FieldInfo) -> getDeserializer
    boolean isPrimitive(java.lang.Class) -> isPrimitive
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Field getField0(java.lang.Class,java.lang.String) -> getField0
    java.util.Map getFieldDeserializers(java.lang.Class) -> getFieldDeserializers
com.alibaba.fastjson.parser.SymbolTable -> com.alibaba.fastjson.parser.SymbolTable:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    int MAX_BUCKET_LENTH -> MAX_BUCKET_LENTH
    int MAX_SIZE -> MAX_SIZE
    com.alibaba.fastjson.parser.SymbolTable$Entry[] buckets -> buckets
    java.lang.String[] symbols -> symbols
    char[][] symbols_char -> symbols_char
    int indexMask -> indexMask
    int size -> size
    java.lang.String addSymbol(char[],int,int) -> addSymbol
    java.lang.String addSymbol(char[],int,int,int) -> addSymbol
    java.lang.String addSymbol(java.lang.String,int,int,int) -> addSymbol
    int size() -> size
    int hash(char[],int,int) -> hash
com.alibaba.fastjson.parser.SymbolTable$Entry -> com.alibaba.fastjson.parser.SymbolTable$Entry:
    java.lang.String symbol -> symbol
    int hashCode -> hashCode
    char[] characters -> characters
    byte[] bytes -> bytes
    com.alibaba.fastjson.parser.SymbolTable$Entry next -> next
com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer -> com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
com.alibaba.fastjson.parser.deserializer.ArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.ArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object toObjectArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Class,com.alibaba.fastjson.JSONArray) -> toObjectArray
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer:
    java.lang.reflect.Type itemType -> itemType
    int itemFastMatchToken -> itemFastMatchToken
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer deserializer -> deserializer
    int getFastMatchToken() -> getFastMatchToken
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    void parseArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.util.Collection) -> parseArray
com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer -> com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer:
    com.alibaba.fastjson.parser.deserializer.BigDecimalDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer -> com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer:
    com.alibaba.fastjson.parser.deserializer.BigIntegerDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BooleanDeserializer -> com.alibaba.fastjson.parser.deserializer.BooleanDeserializer:
    com.alibaba.fastjson.parser.deserializer.BooleanDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CalendarDeserializer -> com.alibaba.fastjson.parser.deserializer.CalendarDeserializer:
    com.alibaba.fastjson.parser.deserializer.CalendarDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharacterDeserializer -> com.alibaba.fastjson.parser.deserializer.CharacterDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharacterDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CharsetDeserializer -> com.alibaba.fastjson.parser.deserializer.CharsetDeserializer:
    com.alibaba.fastjson.parser.deserializer.CharsetDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ClassDerializer -> com.alibaba.fastjson.parser.deserializer.ClassDerializer:
    com.alibaba.fastjson.parser.deserializer.ClassDerializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CollectionDeserializer -> com.alibaba.fastjson.parser.deserializer.CollectionDeserializer:
    com.alibaba.fastjson.parser.deserializer.CollectionDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Class getRawClass(java.lang.reflect.Type) -> getRawClass
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer:
    java.util.Collection collection -> collection
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.DateDeserializer -> com.alibaba.fastjson.parser.deserializer.DateDeserializer:
    com.alibaba.fastjson.parser.deserializer.DateDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer -> com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer:
    com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.EnumDeserializer -> com.alibaba.fastjson.parser.deserializer.EnumDeserializer:
    java.lang.Class enumClass -> enumClass
    java.util.Map ordinalMap -> ordinalMap
    java.util.Map nameMap -> nameMap
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.FieldDeserializer -> com.alibaba.fastjson.parser.deserializer.FieldDeserializer:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> fieldInfo
    java.lang.Class clazz -> clazz
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.reflect.Field getField() -> getField
    java.lang.Class getFieldClass() -> getFieldClass
    java.lang.reflect.Type getFieldType() -> getFieldType
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
    void setValue(java.lang.Object,boolean) -> setValue
    void setValue(java.lang.Object,int) -> setValue
    void setValue(java.lang.Object,long) -> setValue
    void setValue(java.lang.Object,java.lang.String) -> setValue
    void setValue(java.lang.Object,java.lang.Object) -> setValue
com.alibaba.fastjson.parser.deserializer.FileDeserializer -> com.alibaba.fastjson.parser.deserializer.FileDeserializer:
    com.alibaba.fastjson.parser.deserializer.FileDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.FloatDeserializer -> com.alibaba.fastjson.parser.deserializer.FloatDeserializer:
    com.alibaba.fastjson.parser.deserializer.FloatDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer -> com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer:
    com.alibaba.fastjson.parser.deserializer.InetAddressDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer -> com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer:
    com.alibaba.fastjson.parser.deserializer.InetSocketAddressDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.IntegerDeserializer -> com.alibaba.fastjson.parser.deserializer.IntegerDeserializer:
    com.alibaba.fastjson.parser.deserializer.IntegerDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer:
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer:
    com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer:
    com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer:
    java.util.Map feildDeserializerMap -> feildDeserializerMap
    java.util.List fieldDeserializers -> fieldDeserializers
    java.lang.Class clazz -> clazz
    com.alibaba.fastjson.util.DeserializeBeanInfo beanInfo -> beanInfo
    java.util.Map getFieldDeserializerMap() -> getFieldDeserializerMap
    void addFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> addFieldDeserializer
    com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type) -> createInstance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> deserialze
    boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer:
    com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer:
    int index -> index
    java.util.List list -> list
    com.alibaba.fastjson.parser.DefaultJSONParser parser -> parser
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.LocaleDeserializer -> com.alibaba.fastjson.parser.deserializer.LocaleDeserializer:
    com.alibaba.fastjson.parser.deserializer.LocaleDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.LongDeserializer -> com.alibaba.fastjson.parser.deserializer.LongDeserializer:
    com.alibaba.fastjson.parser.deserializer.LongDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.MapDeserializer -> com.alibaba.fastjson.parser.deserializer.MapDeserializer:
    com.alibaba.fastjson.parser.deserializer.MapDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.util.Map) -> deserialze
    java.util.Map parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.Object) -> parseMap
    java.lang.Object parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Object) -> parseMap
    java.util.Map createMap(java.lang.reflect.Type) -> createMap
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer:
    java.lang.String key -> key
    java.util.Map map -> map
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.NumberDeserializer -> com.alibaba.fastjson.parser.deserializer.NumberDeserializer:
    com.alibaba.fastjson.parser.deserializer.NumberDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.ObjectDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.PatternDeserializer -> com.alibaba.fastjson.parser.deserializer.PatternDeserializer:
    com.alibaba.fastjson.parser.deserializer.PatternDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer -> com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer:
    com.alibaba.fastjson.parser.deserializer.ReferenceDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer -> com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer:
    com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer -> com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer:
    com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StringDeserializer -> com.alibaba.fastjson.parser.deserializer.StringDeserializer:
    com.alibaba.fastjson.parser.deserializer.StringDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer:
    com.alibaba.fastjson.parser.deserializer.ObjectDeserializer fieldValueDeserilizer -> fieldValueDeserilizer
    void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer -> com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer:
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    java.lang.Throwable createException(java.lang.String,java.lang.Throwable,java.lang.Class) -> createException
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimeDeserializer -> com.alibaba.fastjson.parser.deserializer.TimeDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimeDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer -> com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimeZoneDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimestampDeserializer -> com.alibaba.fastjson.parser.deserializer.TimestampDeserializer:
    com.alibaba.fastjson.parser.deserializer.TimestampDeserializer instance -> instance
    java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.URIDeserializer -> com.alibaba.fastjson.parser.deserializer.URIDeserializer:
    com.alibaba.fastjson.parser.deserializer.URIDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.URLDeserializer -> com.alibaba.fastjson.parser.deserializer.URLDeserializer:
    com.alibaba.fastjson.parser.deserializer.URLDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.UUIDDeserializer -> com.alibaba.fastjson.parser.deserializer.UUIDDeserializer:
    com.alibaba.fastjson.parser.deserializer.UUIDDeserializer instance -> instance
    java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.AppendableSerializer -> com.alibaba.fastjson.serializer.AppendableSerializer:
    com.alibaba.fastjson.serializer.AppendableSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ArraySerializer -> com.alibaba.fastjson.serializer.ArraySerializer:
    java.lang.Class componentType -> componentType
    com.alibaba.fastjson.serializer.ObjectSerializer compObjectSerializer -> compObjectSerializer
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicBooleanSerializer -> com.alibaba.fastjson.serializer.AtomicBooleanSerializer:
    com.alibaba.fastjson.serializer.AtomicBooleanSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer -> com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer:
    com.alibaba.fastjson.serializer.AtomicIntegerArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicIntegerSerializer -> com.alibaba.fastjson.serializer.AtomicIntegerSerializer:
    com.alibaba.fastjson.serializer.AtomicIntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicLongArraySerializer -> com.alibaba.fastjson.serializer.AtomicLongArraySerializer:
    com.alibaba.fastjson.serializer.AtomicLongArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.AtomicLongSerializer -> com.alibaba.fastjson.serializer.AtomicLongSerializer:
    com.alibaba.fastjson.serializer.AtomicLongSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BigDecimalSerializer -> com.alibaba.fastjson.serializer.BigDecimalSerializer:
    com.alibaba.fastjson.serializer.BigDecimalSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BigIntegerSerializer -> com.alibaba.fastjson.serializer.BigIntegerSerializer:
    com.alibaba.fastjson.serializer.BigIntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanArraySerializer -> com.alibaba.fastjson.serializer.BooleanArraySerializer:
    com.alibaba.fastjson.serializer.BooleanArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanSerializer -> com.alibaba.fastjson.serializer.BooleanSerializer:
    com.alibaba.fastjson.serializer.BooleanSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ByteArraySerializer -> com.alibaba.fastjson.serializer.ByteArraySerializer:
    com.alibaba.fastjson.serializer.ByteArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ByteSerializer -> com.alibaba.fastjson.serializer.ByteSerializer:
    com.alibaba.fastjson.serializer.ByteSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CalendarSerializer -> com.alibaba.fastjson.serializer.CalendarSerializer:
    com.alibaba.fastjson.serializer.CalendarSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharArraySerializer -> com.alibaba.fastjson.serializer.CharArraySerializer:
    com.alibaba.fastjson.serializer.CharArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharacterSerializer -> com.alibaba.fastjson.serializer.CharacterSerializer:
    com.alibaba.fastjson.serializer.CharacterSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ClassSerializer -> com.alibaba.fastjson.serializer.ClassSerializer:
    com.alibaba.fastjson.serializer.ClassSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CollectionSerializer -> com.alibaba.fastjson.serializer.CollectionSerializer:
    com.alibaba.fastjson.serializer.CollectionSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateFormatSerializer -> com.alibaba.fastjson.serializer.DateFormatSerializer:
    com.alibaba.fastjson.serializer.DateFormatSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateSerializer -> com.alibaba.fastjson.serializer.DateSerializer:
    com.alibaba.fastjson.serializer.DateSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleArraySerializer -> com.alibaba.fastjson.serializer.DoubleArraySerializer:
    com.alibaba.fastjson.serializer.DoubleArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleSerializer -> com.alibaba.fastjson.serializer.DoubleSerializer:
    com.alibaba.fastjson.serializer.DoubleSerializer instance -> instance
    java.text.DecimalFormat decimalFormat -> decimalFormat
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumSerializer -> com.alibaba.fastjson.serializer.EnumSerializer:
    com.alibaba.fastjson.serializer.EnumSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumerationSeriliazer -> com.alibaba.fastjson.serializer.EnumerationSeriliazer:
    com.alibaba.fastjson.serializer.EnumerationSeriliazer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ExceptionSerializer -> com.alibaba.fastjson.serializer.ExceptionSerializer:
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
com.alibaba.fastjson.serializer.FieldSerializer -> com.alibaba.fastjson.serializer.FieldSerializer:
    com.alibaba.fastjson.util.FieldInfo fieldInfo -> fieldInfo
    java.lang.String double_quoted_fieldPrefix -> double_quoted_fieldPrefix
    java.lang.String single_quoted_fieldPrefix -> single_quoted_fieldPrefix
    java.lang.String un_quoted_fieldPrefix -> un_quoted_fieldPrefix
    boolean writeNull -> writeNull
    boolean isWriteNull() -> isWriteNull
    java.lang.reflect.Field getField() -> getField
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
    void writePrefix(com.alibaba.fastjson.serializer.JSONSerializer) -> writePrefix
    java.lang.Object getPropertyValue(java.lang.Object) -> getPropertyValue
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.FileSerializer -> com.alibaba.fastjson.serializer.FileSerializer:
    com.alibaba.fastjson.serializer.FileSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FilterUtils -> com.alibaba.fastjson.serializer.FilterUtils:
    java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processValue
    java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processKey
    boolean applyName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> applyName
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> apply
com.alibaba.fastjson.serializer.FloatArraySerializer -> com.alibaba.fastjson.serializer.FloatArraySerializer:
    com.alibaba.fastjson.serializer.FloatArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FloatSerializer -> com.alibaba.fastjson.serializer.FloatSerializer:
    com.alibaba.fastjson.serializer.FloatSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.InetAddressSerializer -> com.alibaba.fastjson.serializer.InetAddressSerializer:
    com.alibaba.fastjson.serializer.InetAddressSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.InetSocketAddressSerializer -> com.alibaba.fastjson.serializer.InetSocketAddressSerializer:
    com.alibaba.fastjson.serializer.InetSocketAddressSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntArraySerializer -> com.alibaba.fastjson.serializer.IntArraySerializer:
    com.alibaba.fastjson.serializer.IntArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntegerSerializer -> com.alibaba.fastjson.serializer.IntegerSerializer:
    com.alibaba.fastjson.serializer.IntegerSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONAwareSerializer -> com.alibaba.fastjson.serializer.JSONAwareSerializer:
    com.alibaba.fastjson.serializer.JSONAwareSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer -> com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONSerializer -> com.alibaba.fastjson.serializer.JSONSerializer:
    com.alibaba.fastjson.serializer.SerializeConfig config -> config
    com.alibaba.fastjson.serializer.SerializeWriter out -> out
    java.util.List propertyFilters -> propertyFilters
    java.util.List valueFilters -> valueFilters
    java.util.List nameFilters -> nameFilters
    java.util.List propertyPreFilters -> propertyPreFilters
    int indentCount -> indentCount
    java.lang.String indent -> indent
    java.lang.String dateFormatPattern -> dateFormatPattern
    java.text.DateFormat dateFormat -> dateFormat
    java.util.IdentityHashMap references -> references
    com.alibaba.fastjson.serializer.SerialContext context -> context
    java.lang.String getDateFormatPattern() -> getDateFormatPattern
    java.text.DateFormat getDateFormat() -> getDateFormat
    void setDateFormat(java.text.DateFormat) -> setDateFormat
    void setDateFormat(java.lang.String) -> setDateFormat
    com.alibaba.fastjson.serializer.SerialContext getContext() -> getContext
    void setContext(com.alibaba.fastjson.serializer.SerialContext) -> setContext
    void setContext(com.alibaba.fastjson.serializer.SerialContext,java.lang.Object,java.lang.Object) -> setContext
    boolean isWriteClassName(java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    com.alibaba.fastjson.serializer.SerialContext getSerialContext(java.lang.Object) -> getSerialContext
    boolean containsReference(java.lang.Object) -> containsReference
    void writeReference(java.lang.Object) -> writeReference
    java.util.List getValueFilters() -> getValueFilters
    java.util.List getValueFiltersDirect() -> getValueFiltersDirect
    int getIndentCount() -> getIndentCount
    void incrementIndent() -> incrementIndent
    void decrementIdent() -> decrementIdent
    void println() -> println
    java.util.List getNameFilters() -> getNameFilters
    java.util.List getNameFiltersDirect() -> getNameFiltersDirect
    java.util.List getPropertyPreFilters() -> getPropertyPreFilters
    java.util.List getPropertyPreFiltersDirect() -> getPropertyPreFiltersDirect
    java.util.List getPropertyFilters() -> getPropertyFilters
    java.util.List getPropertyFiltersDirect() -> getPropertyFiltersDirect
    com.alibaba.fastjson.serializer.SerializeWriter getWriter() -> getWriter
    java.lang.String toString() -> toString
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    void writeNull() -> writeNull
    com.alibaba.fastjson.serializer.SerializeConfig getMapping() -> getMapping
    void write(java.io.Writer,java.lang.Object) -> write
    void write(com.alibaba.fastjson.serializer.SerializeWriter,java.lang.Object) -> write
    void write(java.lang.Object) -> write
    void writeWithFieldName(java.lang.Object,java.lang.Object) -> writeWithFieldName
    void writeWithFieldName(java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> writeWithFieldName
    void writeWithFormat(java.lang.Object,java.lang.String) -> writeWithFormat
    void write(java.lang.String) -> write
    com.alibaba.fastjson.serializer.ObjectSerializer getObjectWriter(java.lang.Class) -> getObjectWriter
    void close() -> close
com.alibaba.fastjson.serializer.JSONSerializerContext -> com.alibaba.fastjson.serializer.JSONSerializerContext:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    com.alibaba.fastjson.serializer.JSONSerializerContext$Entry[] buckets -> buckets
    int indexMask -> indexMask
    boolean put(java.lang.Object) -> put
com.alibaba.fastjson.serializer.JSONSerializerContext$Entry -> com.alibaba.fastjson.serializer.JSONSerializerContext$Entry:
    int hashCode -> hashCode
    java.lang.Object object -> object
    com.alibaba.fastjson.serializer.JSONSerializerContext$Entry next -> next
com.alibaba.fastjson.serializer.JSONSerializerMap -> com.alibaba.fastjson.serializer.JSONSerializerMap:
    boolean put(java.lang.Class,com.alibaba.fastjson.serializer.ObjectSerializer) -> put
com.alibaba.fastjson.serializer.JSONStreamAwareSerializer -> com.alibaba.fastjson.serializer.JSONStreamAwareSerializer:
    com.alibaba.fastjson.serializer.JSONStreamAwareSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JavaBeanSerializer -> com.alibaba.fastjson.serializer.JavaBeanSerializer:
    com.alibaba.fastjson.serializer.FieldSerializer[] getters -> getters
    com.alibaba.fastjson.serializer.FieldSerializer[] sortedGetters -> sortedGetters
    com.alibaba.fastjson.serializer.FieldSerializer[] getGetters() -> getGetters
    java.util.Map createAliasMap(java.lang.String[]) -> createAliasMap
    boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    void writeReference(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeReference
    com.alibaba.fastjson.serializer.FieldSerializer createFieldSerializer(com.alibaba.fastjson.util.FieldInfo) -> createFieldSerializer
com.alibaba.fastjson.serializer.ListSerializer -> com.alibaba.fastjson.serializer.ListSerializer:
    com.alibaba.fastjson.serializer.ListSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongArraySerializer -> com.alibaba.fastjson.serializer.LongArraySerializer:
    com.alibaba.fastjson.serializer.LongArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongSerializer -> com.alibaba.fastjson.serializer.LongSerializer:
    com.alibaba.fastjson.serializer.LongSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.MapSerializer -> com.alibaba.fastjson.serializer.MapSerializer:
    com.alibaba.fastjson.serializer.MapSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.NameFilter -> com.alibaba.fastjson.serializer.NameFilter:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.NumberFieldSerializer -> com.alibaba.fastjson.serializer.NumberFieldSerializer:
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.ObjectArraySerializer -> com.alibaba.fastjson.serializer.ObjectArraySerializer:
    com.alibaba.fastjson.serializer.ObjectArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ObjectFieldSerializer -> com.alibaba.fastjson.serializer.ObjectFieldSerializer:
    com.alibaba.fastjson.serializer.ObjectSerializer fieldSerializer -> fieldSerializer
    java.lang.Class runtimeFieldClass -> runtimeFieldClass
    java.lang.String format -> format
    boolean writeNumberAsZero -> writeNumberAsZero
    boolean writeNullStringAsEmpty -> writeNullStringAsEmpty
    boolean writeNullBooleanAsFalse -> writeNullBooleanAsFalse
    boolean writeNullListAsEmpty -> writeNullListAsEmpty
    boolean writeEnumUsingToString -> writeEnumUsingToString
    void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
com.alibaba.fastjson.serializer.ObjectSerializer -> com.alibaba.fastjson.serializer.ObjectSerializer:
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.PascalNameFilter -> com.alibaba.fastjson.serializer.PascalNameFilter:
    java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.PatternSerializer -> com.alibaba.fastjson.serializer.PatternSerializer:
    com.alibaba.fastjson.serializer.PatternSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.PropertyFilter -> com.alibaba.fastjson.serializer.PropertyFilter:
    boolean apply(java.lang.Object,java.lang.String,java.lang.Object) -> apply
com.alibaba.fastjson.serializer.PropertyPreFilter -> com.alibaba.fastjson.serializer.PropertyPreFilter:
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
com.alibaba.fastjson.serializer.ReferenceSerializer -> com.alibaba.fastjson.serializer.ReferenceSerializer:
    com.alibaba.fastjson.serializer.ReferenceSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SerialContext -> com.alibaba.fastjson.serializer.SerialContext:
    com.alibaba.fastjson.serializer.SerialContext parent -> parent
    java.lang.Object object -> object
    java.lang.Object fieldName -> fieldName
    com.alibaba.fastjson.serializer.SerialContext getParent() -> getParent
    java.lang.Object getObject() -> getObject
    java.lang.Object getFieldName() -> getFieldName
    java.lang.String getPath() -> getPath
    java.lang.String toString() -> toString
com.alibaba.fastjson.serializer.SerialWriterStringEncoder -> com.alibaba.fastjson.serializer.SerialWriterStringEncoder:
    java.nio.charset.CharsetEncoder encoder -> encoder
    byte[] encode(char[],int,int) -> encode
    java.nio.charset.CharsetEncoder getEncoder() -> getEncoder
    byte[] encode(char[],int,int,byte[]) -> encode
    int scale(int,float) -> scale
com.alibaba.fastjson.serializer.SerializeConfig -> com.alibaba.fastjson.serializer.SerializeConfig:
    com.alibaba.fastjson.serializer.SerializeConfig globalInstance -> globalInstance
    com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class) -> createJavaBeanSerializer
    com.alibaba.fastjson.serializer.SerializeConfig getGlobalInstance() -> getGlobalInstance
com.alibaba.fastjson.serializer.SerializeFilter -> com.alibaba.fastjson.serializer.SerializeFilter:
com.alibaba.fastjson.serializer.SerializeWriter -> com.alibaba.fastjson.serializer.SerializeWriter:
    char[] buf -> buf
    int count -> count
    java.lang.ThreadLocal bufLocal -> bufLocal
    int features -> features
    java.io.Writer writer -> writer
    int getBufferLength() -> getBufferLength
    void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    void write(int) -> write
    void write(char) -> write
    void write(char[],int,int) -> write
    void expandCapacity(int) -> expandCapacity
    void write(java.lang.String,int,int) -> write
    void writeTo(java.io.Writer) -> writeTo
    void writeTo(java.io.OutputStream,java.lang.String) -> writeTo
    void writeTo(java.io.OutputStream,java.nio.charset.Charset) -> writeTo
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence) -> append
    com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence,int,int) -> append
    com.alibaba.fastjson.serializer.SerializeWriter append(char) -> append
    void reset() -> reset
    char[] toCharArray() -> toCharArray
    byte[] toBytes(java.lang.String) -> toBytes
    int size() -> size
    java.lang.String toString() -> toString
    void close() -> close
    void write(java.lang.String) -> write
    void writeInt(int) -> writeInt
    void writeByteArray(byte[]) -> writeByteArray
    void writeIntAndChar(int,char) -> writeIntAndChar
    void writeLongAndChar(long,char) -> writeLongAndChar
    void writeLong(long) -> writeLong
    void writeNull() -> writeNull
    void writeStringWithDoubleQuote(java.lang.String,char) -> writeStringWithDoubleQuote
    void writeStringWithDoubleQuote(java.lang.String,char,boolean) -> writeStringWithDoubleQuote
    void write(boolean) -> write
    void writeString(java.lang.String,char) -> writeString
    void writeString(java.lang.String) -> writeString
    void writeStringWithSingleQuote(java.lang.String) -> writeStringWithSingleQuote
    void writeFieldName(java.lang.String) -> writeFieldName
    void writeFieldName(java.lang.String,boolean) -> writeFieldName
    void writeKeyWithDoubleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithDoubleQuoteIfHasSpecial
    void writeKeyWithSingleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithSingleQuoteIfHasSpecial
    void flush() -> flush
    java.io.Writer append(char) -> append
    java.io.Writer append(java.lang.CharSequence,int,int) -> append
    java.io.Writer append(java.lang.CharSequence) -> append
    java.lang.Appendable append(char) -> append
    java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    java.lang.Appendable append(java.lang.CharSequence) -> append
com.alibaba.fastjson.serializer.SerializerFeature -> com.alibaba.fastjson.serializer.SerializerFeature:
    com.alibaba.fastjson.serializer.SerializerFeature QuoteFieldNames -> QuoteFieldNames
    com.alibaba.fastjson.serializer.SerializerFeature UseSingleQuotes -> UseSingleQuotes
    com.alibaba.fastjson.serializer.SerializerFeature WriteMapNullValue -> WriteMapNullValue
    com.alibaba.fastjson.serializer.SerializerFeature WriteEnumUsingToString -> WriteEnumUsingToString
    com.alibaba.fastjson.serializer.SerializerFeature UseISO8601DateFormat -> UseISO8601DateFormat
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullListAsEmpty -> WriteNullListAsEmpty
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullStringAsEmpty -> WriteNullStringAsEmpty
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullNumberAsZero -> WriteNullNumberAsZero
    com.alibaba.fastjson.serializer.SerializerFeature WriteNullBooleanAsFalse -> WriteNullBooleanAsFalse
    com.alibaba.fastjson.serializer.SerializerFeature SkipTransientField -> SkipTransientField
    com.alibaba.fastjson.serializer.SerializerFeature SortField -> SortField
    com.alibaba.fastjson.serializer.SerializerFeature WriteTabAsSpecial -> WriteTabAsSpecial
    com.alibaba.fastjson.serializer.SerializerFeature PrettyFormat -> PrettyFormat
    com.alibaba.fastjson.serializer.SerializerFeature WriteClassName -> WriteClassName
    com.alibaba.fastjson.serializer.SerializerFeature DisableCircularReferenceDetect -> DisableCircularReferenceDetect
    com.alibaba.fastjson.serializer.SerializerFeature WriteSlashAsSpecial -> WriteSlashAsSpecial
    com.alibaba.fastjson.serializer.SerializerFeature BrowserCompatible -> BrowserCompatible
    com.alibaba.fastjson.serializer.SerializerFeature WriteDateUseDateFormat -> WriteDateUseDateFormat
    com.alibaba.fastjson.serializer.SerializerFeature NotWriteRootClassName -> NotWriteRootClassName
    com.alibaba.fastjson.serializer.SerializerFeature DisableCheckSpecialChar -> DisableCheckSpecialChar
    int mask -> mask
    com.alibaba.fastjson.serializer.SerializerFeature[] $VALUES -> $VALUES
    com.alibaba.fastjson.serializer.SerializerFeature[] values() -> values
    com.alibaba.fastjson.serializer.SerializerFeature valueOf(java.lang.String) -> valueOf
    int getMask() -> getMask
    boolean isEnabled(int,com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    int config(int,com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
com.alibaba.fastjson.serializer.ShortArraySerializer -> com.alibaba.fastjson.serializer.ShortArraySerializer:
    com.alibaba.fastjson.serializer.ShortArraySerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ShortSerializer -> com.alibaba.fastjson.serializer.ShortSerializer:
    com.alibaba.fastjson.serializer.ShortSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimpleDateFormatSerializer -> com.alibaba.fastjson.serializer.SimpleDateFormatSerializer:
    java.lang.String pattern -> pattern
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimplePropertyPreFilter -> com.alibaba.fastjson.serializer.SimplePropertyPreFilter:
    java.lang.Class clazz -> clazz
    java.util.Set includes -> includes
    java.util.Set excludes -> excludes
    java.lang.Class getClazz() -> getClazz
    java.util.Set getIncludes() -> getIncludes
    java.util.Set getExcludes() -> getExcludes
    boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
com.alibaba.fastjson.serializer.StringSerializer -> com.alibaba.fastjson.serializer.StringSerializer:
    com.alibaba.fastjson.serializer.StringSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.String) -> write
com.alibaba.fastjson.serializer.TimeZoneSerializer -> com.alibaba.fastjson.serializer.TimeZoneSerializer:
    com.alibaba.fastjson.serializer.TimeZoneSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ToStringSerializer -> com.alibaba.fastjson.serializer.ToStringSerializer:
    com.alibaba.fastjson.serializer.ToStringSerializer instance -> instance
    void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ValueFilter -> com.alibaba.fastjson.serializer.ValueFilter:
    java.lang.Object process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.util.Base64 -> com.alibaba.fastjson.util.Base64:
    char[] CA -> CA
    int[] IA -> IA
    byte[] decodeFast(char[],int,int) -> decodeFast
    byte[] decodeFast(java.lang.String,int,int) -> decodeFast
    byte[] decodeFast(java.lang.String) -> decodeFast
com.alibaba.fastjson.util.DeserializeBeanInfo -> com.alibaba.fastjson.util.DeserializeBeanInfo:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Constructor defaultConstructor -> defaultConstructor
    java.lang.reflect.Constructor creatorConstructor -> creatorConstructor
    java.lang.reflect.Method factoryMethod -> factoryMethod
    java.util.List fieldList -> fieldList
    java.lang.Class getClazz() -> getClazz
    java.lang.reflect.Constructor getDefaultConstructor() -> getDefaultConstructor
    void setDefaultConstructor(java.lang.reflect.Constructor) -> setDefaultConstructor
    java.lang.reflect.Constructor getCreatorConstructor() -> getCreatorConstructor
    void setCreatorConstructor(java.lang.reflect.Constructor) -> setCreatorConstructor
    java.lang.reflect.Method getFactoryMethod() -> getFactoryMethod
    void setFactoryMethod(java.lang.reflect.Method) -> setFactoryMethod
    java.util.List getFieldList() -> getFieldList
    com.alibaba.fastjson.util.FieldInfo getField(java.lang.String) -> getField
    boolean add(com.alibaba.fastjson.util.FieldInfo) -> add
    com.alibaba.fastjson.util.DeserializeBeanInfo computeSetters(java.lang.Class,java.lang.reflect.Type) -> computeSetters
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.reflect.Constructor getDefaultConstructor(java.lang.Class) -> getDefaultConstructor
    java.lang.reflect.Constructor getCreatorConstructor(java.lang.Class) -> getCreatorConstructor
    java.lang.reflect.Method getFactoryMethod(java.lang.Class) -> getFactoryMethod
com.alibaba.fastjson.util.FieldInfo -> com.alibaba.fastjson.util.FieldInfo:
    java.lang.String name -> name
    java.lang.reflect.Method method -> method
    java.lang.reflect.Field field -> field
    java.lang.Class fieldClass -> fieldClass
    java.lang.reflect.Type fieldType -> fieldType
    java.lang.Class declaringClass -> declaringClass
    boolean getOnly -> getOnly
    java.lang.reflect.Type getFieldType(java.lang.Class,java.lang.reflect.Type,java.lang.reflect.Type) -> getFieldType
    java.lang.reflect.Type getInheritGenericType(java.lang.Class,java.lang.reflect.TypeVariable) -> getInheritGenericType
    java.lang.String toString() -> toString
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    java.lang.Class getFieldClass() -> getFieldClass
    java.lang.reflect.Type getFieldType() -> getFieldType
    java.lang.String getName() -> getName
    java.lang.reflect.Method getMethod() -> getMethod
    java.lang.reflect.Field getField() -> getField
    int compareTo(com.alibaba.fastjson.util.FieldInfo) -> compareTo
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
    void setAccessible(boolean) -> setAccessible
    boolean isGetOnly() -> isGetOnly
    int compareTo(java.lang.Object) -> compareTo
com.alibaba.fastjson.util.IOUtils -> com.alibaba.fastjson.util.IOUtils:
    char[] digits -> digits
    char[] DigitTens -> DigitTens
    char[] DigitOnes -> DigitOnes
    int[] sizeTable -> sizeTable
    void close(java.io.Closeable) -> close
    int stringSize(long) -> stringSize
    void getChars(long,int,char[]) -> getChars
    void getChars(int,int,char[]) -> getChars
    void getChars(byte,int,char[]) -> getChars
    int stringSize(int) -> stringSize
    void decode(java.nio.charset.CharsetDecoder,java.nio.ByteBuffer,java.nio.CharBuffer) -> decode
com.alibaba.fastjson.util.IdentityHashMap -> com.alibaba.fastjson.util.IdentityHashMap:
    int DEFAULT_TABLE_SIZE -> DEFAULT_TABLE_SIZE
    com.alibaba.fastjson.util.IdentityHashMap$Entry[] buckets -> buckets
    int indexMask -> indexMask
    java.lang.Object get(java.lang.Object) -> get
    boolean put(java.lang.Object,java.lang.Object) -> put
    int size() -> size
com.alibaba.fastjson.util.IdentityHashMap$Entry -> com.alibaba.fastjson.util.IdentityHashMap$Entry:
    int hashCode -> hashCode
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.alibaba.fastjson.util.IdentityHashMap$Entry next -> next
com.alibaba.fastjson.util.ParameterizedTypeImpl -> com.alibaba.fastjson.util.ParameterizedTypeImpl:
    java.lang.reflect.Type[] actualTypeArguments -> actualTypeArguments
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    java.lang.reflect.Type getRawType() -> getRawType
com.alibaba.fastjson.util.ThreadLocalCache -> com.alibaba.fastjson.util.ThreadLocalCache:
    int CHARS_CACH_INIT_SIZE -> CHARS_CACH_INIT_SIZE
    int CHARS_CACH_MAX_SIZE -> CHARS_CACH_MAX_SIZE
    java.lang.ThreadLocal charsBufLocal -> charsBufLocal
    int BYTES_CACH_INIT_SIZE -> BYTES_CACH_INIT_SIZE
    int BYTeS_CACH_MAX_SIZE -> BYTeS_CACH_MAX_SIZE
    java.lang.ThreadLocal bytesBufLocal -> bytesBufLocal
    void clearChars() -> clearChars
    char[] getChars(int) -> getChars
    char[] allocate(int) -> allocate
    int getAllocateLength(int,int,int) -> getAllocateLength
    void clearBytes() -> clearBytes
    byte[] getBytes(int) -> getBytes
    byte[] allocateBytes(int) -> allocateBytes
com.alibaba.fastjson.util.TypeUtils -> com.alibaba.fastjson.util.TypeUtils:
    java.util.concurrent.ConcurrentMap mappings -> mappings
    java.util.Map methodsMap -> methodsMap
    java.lang.String castToString(java.lang.Object) -> castToString
    java.lang.Byte castToByte(java.lang.Object) -> castToByte
    java.lang.Character castToChar(java.lang.Object) -> castToChar
    java.lang.Short castToShort(java.lang.Object) -> castToShort
    java.math.BigDecimal castToBigDecimal(java.lang.Object) -> castToBigDecimal
    java.math.BigInteger castToBigInteger(java.lang.Object) -> castToBigInteger
    java.lang.Float castToFloat(java.lang.Object) -> castToFloat
    java.lang.Double castToDouble(java.lang.Object) -> castToDouble
    java.util.Date castToDate(java.lang.Object) -> castToDate
    java.sql.Date castToSqlDate(java.lang.Object) -> castToSqlDate
    java.sql.Timestamp castToTimestamp(java.lang.Object) -> castToTimestamp
    java.lang.Long castToLong(java.lang.Object) -> castToLong
    java.lang.Integer castToInt(java.lang.Object) -> castToInt
    byte[] castToBytes(java.lang.Object) -> castToBytes
    java.lang.Boolean castToBoolean(java.lang.Object) -> castToBoolean
    java.lang.Object castToJavaBean(java.lang.Object,java.lang.Class) -> castToJavaBean
    java.lang.Object cast(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object castToEnum(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToEnum
    java.lang.Object cast(java.lang.Object,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object cast(java.lang.Object,java.lang.reflect.ParameterizedType,com.alibaba.fastjson.parser.ParserConfig) -> cast
    java.lang.Object castToJavaBean(java.util.Map,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToJavaBean
    void addClassMapping(java.lang.String,java.lang.Class) -> addClassMapping
    void addBaseClassMappings() -> addBaseClassMappings
    void clearClassMapping() -> clearClassMapping
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.lang.reflect.Method[] getAllMethods(java.lang.Class) -> getAllMethods
    java.util.List computeGetters(java.lang.Class,java.util.Map) -> computeGetters
    java.util.List computeGetters(java.lang.Class,java.util.Map,boolean) -> computeGetters
    com.alibaba.fastjson.annotation.JSONField getSupperMethodAnnotation(java.lang.Class,java.lang.reflect.Method) -> getSupperMethodAnnotation
    boolean isJSONTypeIgnore(java.lang.Class,java.lang.String) -> isJSONTypeIgnore
    java.lang.Class getClass(java.lang.reflect.Type) -> getClass
com.androidquery.AQuery -> com.androidquery.AQuery:
com.androidquery.AbstractAQuery -> com.androidquery.AbstractAQuery:
    android.view.View root -> root
    android.app.Activity act -> act
    android.content.Context context -> context
    android.view.View view -> view
    java.lang.Object progress -> progress
    com.androidquery.auth.AccountHandle ah -> ah
    com.androidquery.callback.Transformer trans -> trans
    int policy -> policy
    org.apache.http.HttpHost proxy -> proxy
    java.lang.reflect.Constructor constructor -> constructor
    java.lang.Class[] ON_CLICK_SIG -> ON_CLICK_SIG
    java.lang.Class[] ON_ITEM_SIG -> ON_ITEM_SIG
    java.lang.Class[] ON_SCROLLED_STATE_SIG -> ON_SCROLLED_STATE_SIG
    java.lang.Class[] TEXT_CHANGE_SIG -> TEXT_CHANGE_SIG
    java.lang.Class[] PENDING_TRANSITION_SIG -> PENDING_TRANSITION_SIG
    java.lang.Class[] OVER_SCROLL_SIG -> OVER_SCROLL_SIG
    java.lang.Class[] LAYER_TYPE_SIG -> LAYER_TYPE_SIG
    java.util.WeakHashMap dialogs -> dialogs
    com.androidquery.AbstractAQuery create(android.view.View) -> create
    java.lang.reflect.Constructor getConstructor() -> getConstructor
    android.view.View findView(int) -> findView
    android.view.View findView(java.lang.String) -> findView
    android.view.View findView(int[]) -> findView
    com.androidquery.AbstractAQuery find(int) -> find
    com.androidquery.AbstractAQuery parent(int) -> parent
    com.androidquery.AbstractAQuery recycle(android.view.View) -> recycle
    com.androidquery.AbstractAQuery self() -> self
    android.view.View getView() -> getView
    com.androidquery.AbstractAQuery id(int) -> id
    com.androidquery.AbstractAQuery id(android.view.View) -> id
    com.androidquery.AbstractAQuery id(java.lang.String) -> id
    com.androidquery.AbstractAQuery id(int[]) -> id
    com.androidquery.AbstractAQuery progress(int) -> progress
    com.androidquery.AbstractAQuery progress(java.lang.Object) -> progress
    com.androidquery.AbstractAQuery progress(android.app.Dialog) -> progress
    com.androidquery.AbstractAQuery auth(com.androidquery.auth.AccountHandle) -> auth
    com.androidquery.AbstractAQuery transformer(com.androidquery.callback.Transformer) -> transformer
    com.androidquery.AbstractAQuery policy(int) -> policy
    com.androidquery.AbstractAQuery proxy(java.lang.String,int) -> proxy
    com.androidquery.AbstractAQuery rating(float) -> rating
    com.androidquery.AbstractAQuery text(int) -> text
    com.androidquery.AbstractAQuery text(int,java.lang.Object[]) -> text
    com.androidquery.AbstractAQuery text(java.lang.CharSequence) -> text
    com.androidquery.AbstractAQuery text(java.lang.CharSequence,boolean) -> text
    com.androidquery.AbstractAQuery text(android.text.Spanned) -> text
    com.androidquery.AbstractAQuery textColor(int) -> textColor
    com.androidquery.AbstractAQuery textColorId(int) -> textColorId
    com.androidquery.AbstractAQuery typeface(android.graphics.Typeface) -> typeface
    com.androidquery.AbstractAQuery textSize(float) -> textSize
    com.androidquery.AbstractAQuery adapter(android.widget.Adapter) -> adapter
    com.androidquery.AbstractAQuery adapter(android.widget.ExpandableListAdapter) -> adapter
    com.androidquery.AbstractAQuery image(int) -> image
    com.androidquery.AbstractAQuery image(android.graphics.drawable.Drawable) -> image
    com.androidquery.AbstractAQuery image(android.graphics.Bitmap) -> image
    com.androidquery.AbstractAQuery image(java.lang.String) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float,int,java.lang.String) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,com.androidquery.callback.ImageOptions) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,com.androidquery.callback.ImageOptions,java.lang.String) -> image
    com.androidquery.AbstractAQuery image(com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(java.lang.String,boolean,boolean,int,int,com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(java.io.File,int) -> image
    com.androidquery.AbstractAQuery image(java.io.File,boolean,int,com.androidquery.callback.BitmapAjaxCallback) -> image
    com.androidquery.AbstractAQuery image(android.graphics.Bitmap,float) -> image
    com.androidquery.AbstractAQuery tag(java.lang.Object) -> tag
    com.androidquery.AbstractAQuery tag(int,java.lang.Object) -> tag
    com.androidquery.AbstractAQuery transparent(boolean) -> transparent
    com.androidquery.AbstractAQuery enabled(boolean) -> enabled
    com.androidquery.AbstractAQuery checked(boolean) -> checked
    boolean isChecked() -> isChecked
    com.androidquery.AbstractAQuery clickable(boolean) -> clickable
    com.androidquery.AbstractAQuery gone() -> gone
    com.androidquery.AbstractAQuery invisible() -> invisible
    com.androidquery.AbstractAQuery visible() -> visible
    com.androidquery.AbstractAQuery visibility(int) -> visibility
    com.androidquery.AbstractAQuery background(int) -> background
    com.androidquery.AbstractAQuery backgroundColor(int) -> backgroundColor
    com.androidquery.AbstractAQuery backgroundColorId(int) -> backgroundColorId
    com.androidquery.AbstractAQuery dataChanged() -> dataChanged
    boolean isExist() -> isExist
    java.lang.Object getTag() -> getTag
    java.lang.Object getTag(int) -> getTag
    android.widget.ImageView getImageView() -> getImageView
    android.widget.Gallery getGallery() -> getGallery
    android.widget.TextView getTextView() -> getTextView
    android.widget.EditText getEditText() -> getEditText
    android.widget.ProgressBar getProgressBar() -> getProgressBar
    android.widget.SeekBar getSeekBar() -> getSeekBar
    android.widget.Button getButton() -> getButton
    android.widget.CheckBox getCheckBox() -> getCheckBox
    android.widget.ListView getListView() -> getListView
    android.widget.ExpandableListView getExpandableListView() -> getExpandableListView
    android.widget.GridView getGridView() -> getGridView
    android.widget.RatingBar getRatingBar() -> getRatingBar
    android.webkit.WebView getWebView() -> getWebView
    android.widget.Spinner getSpinner() -> getSpinner
    android.text.Editable getEditable() -> getEditable
    java.lang.CharSequence getText() -> getText
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getSelectedItemPosition() -> getSelectedItemPosition
    com.androidquery.AbstractAQuery clicked(java.lang.Object,java.lang.String) -> clicked
    com.androidquery.AbstractAQuery clicked(android.view.View$OnClickListener) -> clicked
    com.androidquery.AbstractAQuery longClicked(java.lang.Object,java.lang.String) -> longClicked
    com.androidquery.AbstractAQuery longClicked(android.view.View$OnLongClickListener) -> longClicked
    com.androidquery.AbstractAQuery itemClicked(java.lang.Object,java.lang.String) -> itemClicked
    com.androidquery.AbstractAQuery itemClicked(android.widget.AdapterView$OnItemClickListener) -> itemClicked
    com.androidquery.AbstractAQuery itemLongClicked(java.lang.Object,java.lang.String) -> itemLongClicked
    com.androidquery.AbstractAQuery itemLongClicked(android.widget.AdapterView$OnItemLongClickListener) -> itemLongClicked
    com.androidquery.AbstractAQuery itemSelected(java.lang.Object,java.lang.String) -> itemSelected
    com.androidquery.AbstractAQuery itemSelected(android.widget.AdapterView$OnItemSelectedListener) -> itemSelected
    com.androidquery.AbstractAQuery setSelection(int) -> setSelection
    com.androidquery.AbstractAQuery scrolledBottom(java.lang.Object,java.lang.String) -> scrolledBottom
    com.androidquery.util.Common setScrollListener() -> setScrollListener
    com.androidquery.AbstractAQuery scrolled(android.widget.AbsListView$OnScrollListener) -> scrolled
    com.androidquery.AbstractAQuery textChanged(java.lang.Object,java.lang.String) -> textChanged
    com.androidquery.AbstractAQuery overridePendingTransition5(int,int) -> overridePendingTransition5
    com.androidquery.AbstractAQuery setOverScrollMode9(int) -> setOverScrollMode9
    com.androidquery.AbstractAQuery setLayerType11(int,android.graphics.Paint) -> setLayerType11
    java.lang.Object invoke(java.lang.String,java.lang.Class[],java.lang.Object[]) -> invoke
    com.androidquery.AbstractAQuery hardwareAccelerated11() -> hardwareAccelerated11
    com.androidquery.AbstractAQuery clear() -> clear
    com.androidquery.AbstractAQuery margin(float,float,float,float) -> margin
    com.androidquery.AbstractAQuery width(int) -> width
    com.androidquery.AbstractAQuery height(int) -> height
    com.androidquery.AbstractAQuery width(int,boolean) -> width
    com.androidquery.AbstractAQuery height(int,boolean) -> height
    void size(boolean,int,boolean) -> size
    android.content.Context getContext() -> getContext
    com.androidquery.AbstractAQuery ajax(com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery invoke(com.androidquery.callback.AbstractAjaxCallback) -> invoke
    void reset() -> reset
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,long,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.lang.Class,long,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.util.Map,java.lang.Class,com.androidquery.callback.AjaxCallback) -> ajax
    com.androidquery.AbstractAQuery ajax(java.lang.String,java.util.Map,java.lang.Class,java.lang.Object,java.lang.String) -> ajax
    com.androidquery.AbstractAQuery delete(java.lang.String,java.lang.Class,com.androidquery.callback.AjaxCallback) -> delete
    com.androidquery.AbstractAQuery put(java.lang.String,java.lang.String,org.apache.http.HttpEntity,java.lang.Class,com.androidquery.callback.AjaxCallback) -> put
    com.androidquery.AbstractAQuery post(java.lang.String,java.lang.String,org.apache.http.HttpEntity,java.lang.Class,com.androidquery.callback.AjaxCallback) -> post
    com.androidquery.AbstractAQuery post(java.lang.String,org.json.JSONObject,java.lang.Class,com.androidquery.callback.AjaxCallback) -> post
    com.androidquery.AbstractAQuery put(java.lang.String,org.json.JSONObject,java.lang.Class,com.androidquery.callback.AjaxCallback) -> put
    com.androidquery.AbstractAQuery delete(java.lang.String,java.lang.Class,java.lang.Object,java.lang.String) -> delete
    com.androidquery.AbstractAQuery sync(com.androidquery.callback.AjaxCallback) -> sync
    com.androidquery.AbstractAQuery cache(java.lang.String,long) -> cache
    com.androidquery.AbstractAQuery ajaxCancel() -> ajaxCancel
    java.io.File getCachedFile(java.lang.String) -> getCachedFile
    com.androidquery.AbstractAQuery invalidate(java.lang.String) -> invalidate
    android.graphics.Bitmap getCachedImage(java.lang.String) -> getCachedImage
    android.graphics.Bitmap getCachedImage(java.lang.String,int) -> getCachedImage
    android.graphics.Bitmap getCachedImage(int) -> getCachedImage
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float) -> shouldDelay
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float,boolean) -> shouldDelay
    boolean shouldDelay(int,boolean,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,int,boolean,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    java.io.File makeSharedFile(java.lang.String,java.lang.String) -> makeSharedFile
    com.androidquery.AbstractAQuery animate(int) -> animate
    com.androidquery.AbstractAQuery animate(int,android.view.animation.Animation$AnimationListener) -> animate
    com.androidquery.AbstractAQuery animate(android.view.animation.Animation) -> animate
    com.androidquery.AbstractAQuery click() -> click
    com.androidquery.AbstractAQuery longClick() -> longClick
    com.androidquery.AbstractAQuery show(android.app.Dialog) -> show
    com.androidquery.AbstractAQuery dismiss(android.app.Dialog) -> dismiss
    com.androidquery.AbstractAQuery dismiss() -> dismiss
    com.androidquery.AbstractAQuery webImage(java.lang.String) -> webImage
    com.androidquery.AbstractAQuery webImage(java.lang.String,boolean,boolean,int) -> webImage
    android.view.View inflate(android.view.View,int,android.view.ViewGroup) -> inflate
    com.androidquery.AbstractAQuery expand(int,boolean) -> expand
    com.androidquery.AbstractAQuery expand(boolean) -> expand
    com.androidquery.AbstractAQuery download(java.lang.String,java.io.File,com.androidquery.callback.AjaxCallback) -> download
    com.androidquery.AbstractAQuery download(java.lang.String,java.io.File,java.lang.Object,java.lang.String) -> download
com.androidquery.WebDialog -> com.androidquery.WebDialog:
    java.lang.String url -> url
    android.webkit.WebViewClient client -> client
    android.webkit.WebView wv -> wv
    android.widget.LinearLayout ll -> ll
    java.lang.String message -> message
    void setLoadingMessage(java.lang.String) -> setLoadingMessage
    void onCreate(android.os.Bundle) -> onCreate
    void setupProgress(android.widget.RelativeLayout) -> setupProgress
    void setupWebView(android.widget.RelativeLayout) -> setupWebView
    void load() -> load
    void showProgress(boolean) -> showProgress
    void dismiss() -> dismiss
    void access$0(com.androidquery.WebDialog,boolean) -> access$0
    android.webkit.WebViewClient access$1(com.androidquery.WebDialog) -> access$1
com.androidquery.WebDialog$DialogWebViewClient -> com.androidquery.WebDialog$DialogWebViewClient:
    com.androidquery.WebDialog this$0 -> this$0
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.androidquery.auth.AccountHandle -> com.androidquery.auth.AccountHandle:
    java.util.LinkedHashSet callbacks -> callbacks
    void auth(com.androidquery.callback.AbstractAjaxCallback) -> auth
    boolean authenticated() -> authenticated
    void success(android.content.Context) -> success
    void failure(android.content.Context,int,java.lang.String) -> failure
    void auth() -> auth
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,java.net.HttpURLConnection) -> applyToken
    java.lang.String getNetworkUrl(java.lang.String) -> getNetworkUrl
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    void unauth() -> unauth
com.androidquery.auth.BasicHandle -> com.androidquery.auth.BasicHandle:
    java.lang.String username -> username
    java.lang.String password -> password
    boolean authenticated() -> authenticated
    void auth() -> auth
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,java.net.HttpURLConnection) -> applyToken
com.androidquery.auth.FacebookHandle -> com.androidquery.auth.FacebookHandle:
    java.lang.String appId -> appId
    android.app.Activity act -> act
    com.androidquery.WebDialog dialog -> dialog
    java.lang.String token -> token
    java.lang.String permissions -> permissions
    java.lang.String message -> message
    java.lang.String OAUTH_ENDPOINT -> OAUTH_ENDPOINT
    java.lang.String REDIRECT_URI -> REDIRECT_URI
    java.lang.String CANCEL_URI -> CANCEL_URI
    boolean first -> first
    boolean sso -> sso
    int requestId -> requestId
    java.lang.String FB_TOKEN -> FB_TOKEN
    java.lang.String FB_PERMISSION -> FB_PERMISSION
    java.lang.Boolean hasSSO -> hasSSO
    java.lang.String FB_APP_SIGNATURE -> FB_APP_SIGNATURE
    java.lang.String getToken() -> getToken
    java.lang.String getToken(android.content.Context) -> getToken
    com.androidquery.auth.FacebookHandle sso(int) -> sso
    boolean permissionOk(java.lang.String,java.lang.String) -> permissionOk
    com.androidquery.auth.FacebookHandle message(java.lang.String) -> message
    com.androidquery.auth.FacebookHandle setLoadingMessage(int) -> setLoadingMessage
    void dismiss() -> dismiss
    void show() -> show
    void hide() -> hide
    void failure() -> failure
    void failure(java.lang.String) -> failure
    void auth() -> auth
    boolean sso() -> sso
    void webAuth() -> webAuth
    java.lang.String fetchToken() -> fetchToken
    java.lang.String fetchPermission() -> fetchPermission
    void storeToken(java.lang.String,java.lang.String) -> storeToken
    java.lang.String extractToken(java.lang.String) -> extractToken
    java.lang.String encodeUrl(android.os.Bundle) -> encodeUrl
    android.os.Bundle decodeUrl(java.lang.String) -> decodeUrl
    android.os.Bundle parseUrl(java.lang.String) -> parseUrl
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    java.lang.String getNetworkUrl(java.lang.String) -> getNetworkUrl
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    boolean authenticated() -> authenticated
    void unauth() -> unauth
    boolean startSingleSignOn(android.app.Activity,java.lang.String,java.lang.String,int) -> startSingleSignOn
    boolean isSSOAvailable() -> isSSOAvailable
    void authenticated(java.lang.String) -> authenticated
    void ajaxProfile(com.androidquery.callback.AjaxCallback) -> ajaxProfile
    void ajaxProfile(com.androidquery.callback.AjaxCallback,long) -> ajaxProfile
    boolean validateAppSignatureForIntent(android.content.Context,android.content.Intent) -> validateAppSignatureForIntent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.os.Bundle access$0(java.lang.String) -> access$0
    java.lang.String access$1(com.androidquery.auth.FacebookHandle,java.lang.String) -> access$1
    void access$2(com.androidquery.auth.FacebookHandle,java.lang.String) -> access$2
    java.lang.String access$3(com.androidquery.auth.FacebookHandle) -> access$3
    void access$4(com.androidquery.auth.FacebookHandle) -> access$4
    java.lang.String access$5(com.androidquery.auth.FacebookHandle) -> access$5
    void access$6(com.androidquery.auth.FacebookHandle,java.lang.String,java.lang.String) -> access$6
    void access$7(com.androidquery.auth.FacebookHandle,boolean) -> access$7
    android.app.Activity access$8(com.androidquery.auth.FacebookHandle) -> access$8
    void access$9(com.androidquery.auth.FacebookHandle) -> access$9
    void access$10(com.androidquery.auth.FacebookHandle) -> access$10
com.androidquery.auth.FacebookHandle$1 -> com.androidquery.auth.FacebookHandle$1:
    com.androidquery.auth.FacebookHandle this$0 -> this$0
    com.androidquery.callback.AbstractAjaxCallback val$cb -> val$cb
    void run() -> run
com.androidquery.auth.FacebookHandle$FbWebViewClient -> com.androidquery.auth.FacebookHandle$FbWebViewClient:
    com.androidquery.auth.FacebookHandle this$0 -> this$0
    boolean checkDone(java.lang.String) -> checkDone
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onCancel(android.content.DialogInterface) -> onCancel
com.androidquery.auth.GoogleHandle -> com.androidquery.auth.GoogleHandle:
    android.accounts.AccountManager am -> am
    android.accounts.Account acc -> acc
    java.lang.String type -> type
    android.app.Activity act -> act
    java.lang.String email -> email
    android.accounts.Account[] accs -> accs
    java.lang.String token -> token
    void auth() -> auth
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    java.lang.String getType() -> getType
    void accountDialog() -> accountDialog
    void onClick(android.content.DialogInterface,int) -> onClick
    void setActiveAccount(android.content.Context,java.lang.String) -> setActiveAccount
    java.lang.String getActiveAccount(android.content.Context) -> getActiveAccount
    void auth(android.accounts.Account) -> auth
    void onCancel(android.content.DialogInterface) -> onCancel
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    java.lang.String getCacheUrl(java.lang.String) -> getCacheUrl
    boolean authenticated() -> authenticated
    android.accounts.AccountManager access$0(com.androidquery.auth.GoogleHandle) -> access$0
    android.accounts.Account access$1(com.androidquery.auth.GoogleHandle) -> access$1
    java.lang.String access$2(com.androidquery.auth.GoogleHandle) -> access$2
    android.app.Activity access$3(com.androidquery.auth.GoogleHandle) -> access$3
    void access$4(com.androidquery.auth.GoogleHandle,java.lang.String) -> access$4
com.androidquery.auth.GoogleHandle$Task -> com.androidquery.auth.GoogleHandle$Task:
    com.androidquery.auth.GoogleHandle this$0 -> this$0
    android.os.Bundle doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(android.os.Bundle) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.androidquery.auth.TwitterHandle -> com.androidquery.auth.TwitterHandle:
    java.lang.String OAUTH_REQUEST_TOKEN -> OAUTH_REQUEST_TOKEN
    java.lang.String OAUTH_ACCESS_TOKEN -> OAUTH_ACCESS_TOKEN
    java.lang.String OAUTH_AUTHORIZE -> OAUTH_AUTHORIZE
    java.lang.String CALLBACK_URI -> CALLBACK_URI
    java.lang.String CANCEL_URI -> CANCEL_URI
    android.app.Activity act -> act
    com.androidquery.WebDialog dialog -> dialog
    oauth.signpost.commonshttp.CommonsHttpOAuthConsumer consumer -> consumer
    oauth.signpost.commonshttp.CommonsHttpOAuthProvider provider -> provider
    java.lang.String token -> token
    java.lang.String secret -> secret
    java.lang.String TW_TOKEN -> TW_TOKEN
    java.lang.String TW_SECRET -> TW_SECRET
    java.lang.String getToken() -> getToken
    java.lang.String getSecret() -> getSecret
    void dismiss() -> dismiss
    void show() -> show
    void failure() -> failure
    void auth() -> auth
    void authenticate(boolean) -> authenticate
    void authenticated(java.lang.String,java.lang.String) -> authenticated
    java.lang.String fetchToken(java.lang.String) -> fetchToken
    void storeToken(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> storeToken
    java.lang.String extract(java.lang.String,java.lang.String) -> extract
    boolean expired(com.androidquery.callback.AbstractAjaxCallback,com.androidquery.callback.AjaxStatus) -> expired
    boolean reauth(com.androidquery.callback.AbstractAjaxCallback) -> reauth
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest) -> applyToken
    void applyToken(com.androidquery.callback.AbstractAjaxCallback,java.net.HttpURLConnection) -> applyToken
    boolean authenticated() -> authenticated
    void unauth() -> unauth
    oauth.signpost.commonshttp.CommonsHttpOAuthProvider access$0(com.androidquery.auth.TwitterHandle) -> access$0
    oauth.signpost.commonshttp.CommonsHttpOAuthConsumer access$1(com.androidquery.auth.TwitterHandle) -> access$1
    android.app.Activity access$2(com.androidquery.auth.TwitterHandle) -> access$2
    void access$3(com.androidquery.auth.TwitterHandle,com.androidquery.WebDialog) -> access$3
    com.androidquery.WebDialog access$4(com.androidquery.auth.TwitterHandle) -> access$4
    void access$5(com.androidquery.auth.TwitterHandle) -> access$5
    void access$6(com.androidquery.auth.TwitterHandle) -> access$6
    void access$7(com.androidquery.auth.TwitterHandle,java.lang.String) -> access$7
    void access$8(com.androidquery.auth.TwitterHandle,java.lang.String) -> access$8
    java.lang.String access$9(com.androidquery.auth.TwitterHandle) -> access$9
    java.lang.String access$10(com.androidquery.auth.TwitterHandle) -> access$10
    void access$11(com.androidquery.auth.TwitterHandle,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> access$11
    void access$12(com.androidquery.auth.TwitterHandle) -> access$12
    java.lang.String access$13(com.androidquery.auth.TwitterHandle,java.lang.String,java.lang.String) -> access$13
com.androidquery.auth.TwitterHandle$Task -> com.androidquery.auth.TwitterHandle$Task:
    com.androidquery.callback.AbstractAjaxCallback cb -> cb
    com.androidquery.auth.TwitterHandle this$0 -> this$0
    java.lang.String doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void onCancel(android.content.DialogInterface) -> onCancel
    void run() -> run
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void access$3(com.androidquery.auth.TwitterHandle$Task,com.androidquery.callback.AbstractAjaxCallback) -> access$3
com.androidquery.auth.TwitterHandle$Task2 -> com.androidquery.auth.TwitterHandle$Task2:
    com.androidquery.auth.TwitterHandle this$0 -> this$0
    java.lang.String doInBackground(java.lang.String[]) -> doInBackground
    void onPostExecute(java.lang.String) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.androidquery.auth.TwitterHandle$TwWebViewClient -> com.androidquery.auth.TwitterHandle$TwWebViewClient:
    com.androidquery.auth.TwitterHandle this$0 -> this$0
    boolean checkDone(java.lang.String) -> checkDone
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.androidquery.callback.AbstractAjaxCallback -> com.androidquery.callback.AbstractAjaxCallback:
    int NET_TIMEOUT -> NET_TIMEOUT
    java.lang.String AGENT -> AGENT
    int NETWORK_POOL -> NETWORK_POOL
    boolean GZIP -> GZIP
    boolean REUSE_CLIENT -> REUSE_CLIENT
    boolean SIMULATE_ERROR -> SIMULATE_ERROR
    java.lang.Class type -> type
    java.lang.ref.Reference whandler -> whandler
    java.lang.Object handler -> handler
    java.lang.String callback -> callback
    java.lang.ref.WeakReference progress -> progress
    java.lang.String url -> url
    java.lang.String networkUrl -> networkUrl
    java.util.Map params -> params
    java.util.Map headers -> headers
    java.util.Map cookies -> cookies
    com.androidquery.callback.Transformer transformer -> transformer
    java.lang.Object result -> result
    int policy -> policy
    java.io.File cacheDir -> cacheDir
    java.io.File targetFile -> targetFile
    com.androidquery.auth.AccountHandle ah -> ah
    com.androidquery.callback.AjaxStatus status -> status
    boolean fileCache -> fileCache
    boolean memCache -> memCache
    boolean refresh -> refresh
    int timeout -> timeout
    boolean redirect -> redirect
    long expire -> expire
    java.lang.String encoding -> encoding
    java.lang.ref.WeakReference act -> act
    int method -> method
    org.apache.http.client.methods.HttpUriRequest request -> request
    boolean uiCallback -> uiCallback
    int retry -> retry
    com.androidquery.callback.Transformer st -> st
    org.apache.http.HttpHost proxy -> proxy
    java.lang.Class[] DEFAULT_SIG -> DEFAULT_SIG
    boolean completed -> completed
    boolean blocked -> blocked
    boolean reauth -> reauth
    java.util.concurrent.ExecutorService fetchExe -> fetchExe
    org.apache.http.conn.scheme.SocketFactory ssf -> ssf
    org.apache.http.impl.client.DefaultHttpClient client -> client
    com.androidquery.callback.ProxyHandle proxyHandle -> proxyHandle
    int lastStatus -> lastStatus
    boolean abort -> abort
    java.lang.String lineEnd -> lineEnd
    java.lang.String twoHyphens -> twoHyphens
    java.lang.String boundary -> boundary
    java.lang.Object self() -> self
    void clear() -> clear
    void setTimeout(int) -> setTimeout
    void setAgent(java.lang.String) -> setAgent
    void setGZip(boolean) -> setGZip
    void setSimulateError(boolean) -> setSimulateError
    void setTransformer(com.androidquery.callback.Transformer) -> setTransformer
    java.lang.Class getType() -> getType
    java.lang.Object weakHandler(java.lang.Object,java.lang.String) -> weakHandler
    java.lang.Object handler(java.lang.Object,java.lang.String) -> handler
    java.lang.Object url(java.lang.String) -> url
    java.lang.Object networkUrl(java.lang.String) -> networkUrl
    java.lang.Object type(java.lang.Class) -> type
    java.lang.Object method(int) -> method
    java.lang.Object timeout(int) -> timeout
    java.lang.Object redirect(boolean) -> redirect
    java.lang.Object retry(int) -> retry
    java.lang.Object transformer(com.androidquery.callback.Transformer) -> transformer
    java.lang.Object fileCache(boolean) -> fileCache
    java.lang.Object memCache(boolean) -> memCache
    java.lang.Object policy(int) -> policy
    java.lang.Object refresh(boolean) -> refresh
    java.lang.Object uiCallback(boolean) -> uiCallback
    java.lang.Object expire(long) -> expire
    java.lang.Object header(java.lang.String,java.lang.String) -> header
    java.lang.Object headers(java.util.Map) -> headers
    java.lang.Object cookie(java.lang.String,java.lang.String) -> cookie
    java.lang.Object cookies(java.util.Map) -> cookies
    java.lang.Object encoding(java.lang.String) -> encoding
    java.lang.Object proxy(java.lang.String,int) -> proxy
    java.lang.Object proxy(java.lang.String,int,java.lang.String,java.lang.String) -> proxy
    java.lang.String makeAuthHeader(java.lang.String,java.lang.String) -> makeAuthHeader
    java.lang.Object targetFile(java.io.File) -> targetFile
    java.lang.Object param(java.lang.String,java.lang.Object) -> param
    java.lang.Object params(java.util.Map) -> params
    java.lang.Object progress(android.view.View) -> progress
    java.lang.Object progress(android.app.Dialog) -> progress
    java.lang.Object progress(java.lang.Object) -> progress
    void callback() -> callback
    void wake() -> wake
    void block() -> block
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> callback
    void skip(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> skip
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
    java.lang.Object datastoreGet(java.lang.String) -> datastoreGet
    void showProgress(boolean) -> showProgress
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    java.lang.String getCharset(java.lang.String) -> getCharset
    java.lang.String parseCharset(java.lang.String) -> parseCharset
    java.lang.String correctEncoding(byte[],java.lang.String,com.androidquery.callback.AjaxStatus) -> correctEncoding
    java.lang.Object memGet(java.lang.String) -> memGet
    void memPut(java.lang.String,java.lang.Object) -> memPut
    void filePut(java.lang.String,java.lang.Object,java.io.File,byte[]) -> filePut
    java.io.File accessFile(java.io.File,java.lang.String) -> accessFile
    void async(android.app.Activity) -> async
    void async(android.content.Context) -> async
    boolean isActive() -> isActive
    void failure(int,java.lang.String) -> failure
    void work(android.content.Context) -> work
    boolean cacheAvailable(android.content.Context) -> cacheAvailable
    void run() -> run
    void backgroundWork() -> backgroundWork
    java.lang.String getCacheUrl() -> getCacheUrl
    java.lang.String getNetworkUrl(java.lang.String) -> getNetworkUrl
    void fileWork() -> fileWork
    void datastoreWork() -> datastoreWork
    void networkWork() -> networkWork
    java.io.File getCacheFile() -> getCacheFile
    boolean isStreamingContent() -> isStreamingContent
    java.io.File getPreFile() -> getPreFile
    void filePut() -> filePut
    java.lang.String extractUrl(android.net.Uri) -> extractUrl
    java.util.Map extractParams(android.net.Uri) -> extractParams
    void network(int) -> network
    void network() -> network
    void afterWork() -> afterWork
    void execute(java.lang.Runnable) -> execute
    int getActiveCount() -> getActiveCount
    void setNetworkLimit(int) -> setNetworkLimit
    void cancel() -> cancel
    java.lang.String patchUrl(java.lang.String) -> patchUrl
    void httpGet(java.lang.String,com.androidquery.callback.AjaxStatus) -> httpGet
    void httpDelete(java.lang.String,com.androidquery.callback.AjaxStatus) -> httpDelete
    void httpPost(java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> httpPost
    void httpPut(java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> httpPut
    void httpEntity(java.lang.String,org.apache.http.client.methods.HttpEntityEnclosingRequestBase,java.util.Map,com.androidquery.callback.AjaxStatus) -> httpEntity
    void setSSF(org.apache.http.conn.scheme.SocketFactory) -> setSSF
    void setReuseHttpClient(boolean) -> setReuseHttpClient
    org.apache.http.impl.client.DefaultHttpClient getClient() -> getClient
    org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext) -> execute
    void setProxyHandle(com.androidquery.callback.ProxyHandle) -> setProxyHandle
    void httpDo(org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.androidquery.callback.AjaxStatus) -> httpDo
    java.lang.String getEncoding(org.apache.http.HttpEntity) -> getEncoding
    void copy(java.io.InputStream,java.io.OutputStream,int,java.io.File,java.io.File) -> copy
    java.io.File makeTempFile(java.io.File) -> makeTempFile
    void copy(java.io.InputStream,java.io.OutputStream,int) -> copy
    java.lang.Object auth(android.app.Activity,java.lang.String,java.lang.String) -> auth
    java.lang.Object auth(com.androidquery.auth.AccountHandle) -> auth
    java.lang.String getUrl() -> getUrl
    java.lang.Object getHandler() -> getHandler
    java.lang.String getCallback() -> getCallback
    int getLastStatus() -> getLastStatus
    java.lang.Object getResult() -> getResult
    com.androidquery.callback.AjaxStatus getStatus() -> getStatus
    java.lang.String getEncoding() -> getEncoding
    void abort() -> abort
    boolean isMultiPart(java.util.Map) -> isMultiPart
    void httpMulti(java.lang.String,java.util.Map,com.androidquery.callback.AjaxStatus) -> httpMulti
    byte[] toData(java.lang.String,java.io.InputStream) -> toData
    void writeObject(java.io.DataOutputStream,java.lang.String,java.lang.Object) -> writeObject
    void writeData(java.io.DataOutputStream,java.lang.String,java.lang.String,java.io.InputStream) -> writeData
    void writeField(java.io.DataOutputStream,java.lang.String,java.lang.String) -> writeField
    java.lang.String makeCookie() -> makeCookie
    java.lang.String access$0(com.androidquery.callback.AbstractAjaxCallback) -> access$0
com.androidquery.callback.AbstractAjaxCallback$1 -> com.androidquery.callback.AbstractAjaxCallback$1:
    com.androidquery.callback.AbstractAjaxCallback this$0 -> this$0
    java.lang.Object val$p -> val$p
    boolean val$show -> val$show
    void run() -> run
com.androidquery.callback.AjaxCallback -> com.androidquery.callback.AjaxCallback:
com.androidquery.callback.AjaxStatus -> com.androidquery.callback.AjaxStatus:
    int NETWORK -> NETWORK
    int DATASTORE -> DATASTORE
    int FILE -> FILE
    int MEMORY -> MEMORY
    int DEVICE -> DEVICE
    int NETWORK_ERROR -> NETWORK_ERROR
    int AUTH_ERROR -> AUTH_ERROR
    int TRANSFORM_ERROR -> TRANSFORM_ERROR
    int code -> code
    java.lang.String message -> message
    java.lang.String redirect -> redirect
    byte[] data -> data
    java.io.File file -> file
    java.util.Date time -> time
    boolean refresh -> refresh
    org.apache.http.impl.client.DefaultHttpClient client -> client
    long duration -> duration
    int source -> source
    long start -> start
    boolean done -> done
    boolean invalid -> invalid
    boolean reauth -> reauth
    java.lang.String error -> error
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.Header[] headers -> headers
    java.io.Closeable close -> close
    com.androidquery.callback.AjaxStatus source(int) -> source
    com.androidquery.callback.AjaxStatus code(int) -> code
    com.androidquery.callback.AjaxStatus error(java.lang.String) -> error
    com.androidquery.callback.AjaxStatus message(java.lang.String) -> message
    com.androidquery.callback.AjaxStatus redirect(java.lang.String) -> redirect
    com.androidquery.callback.AjaxStatus context(org.apache.http.protocol.HttpContext) -> context
    com.androidquery.callback.AjaxStatus time(java.util.Date) -> time
    com.androidquery.callback.AjaxStatus refresh(boolean) -> refresh
    com.androidquery.callback.AjaxStatus reauth(boolean) -> reauth
    com.androidquery.callback.AjaxStatus client(org.apache.http.impl.client.DefaultHttpClient) -> client
    com.androidquery.callback.AjaxStatus headers(org.apache.http.Header[]) -> headers
    com.androidquery.callback.AjaxStatus done() -> done
    com.androidquery.callback.AjaxStatus reset() -> reset
    void closeLater(java.io.Closeable) -> closeLater
    void close() -> close
    com.androidquery.callback.AjaxStatus data(byte[]) -> data
    com.androidquery.callback.AjaxStatus file(java.io.File) -> file
    com.androidquery.callback.AjaxStatus invalidate() -> invalidate
    boolean getDone() -> getDone
    boolean getReauth() -> getReauth
    boolean getInvalid() -> getInvalid
    int getCode() -> getCode
    java.lang.String getMessage() -> getMessage
    java.lang.String getRedirect() -> getRedirect
    byte[] getData() -> getData
    java.io.File getFile() -> getFile
    java.util.Date getTime() -> getTime
    boolean getRefresh() -> getRefresh
    org.apache.http.impl.client.DefaultHttpClient getClient() -> getClient
    long getDuration() -> getDuration
    int getSource() -> getSource
    java.lang.String getError() -> getError
    boolean expired(long) -> expired
    java.util.List getCookies() -> getCookies
    java.util.List getHeaders() -> getHeaders
    java.lang.String getHeader(java.lang.String) -> getHeader
com.androidquery.callback.BitmapAjaxCallback -> com.androidquery.callback.BitmapAjaxCallback:
    int SMALL_MAX -> SMALL_MAX
    int BIG_MAX -> BIG_MAX
    int SMALL_PIXELS -> SMALL_PIXELS
    int BIG_PIXELS -> BIG_PIXELS
    int BIG_TPIXELS -> BIG_TPIXELS
    boolean DELAY_WRITE -> DELAY_WRITE
    java.util.Map smallCache -> smallCache
    java.util.Map bigCache -> bigCache
    java.util.Map invalidCache -> invalidCache
    java.util.HashMap queueMap -> queueMap
    java.lang.ref.WeakReference v -> v
    int targetWidth -> targetWidth
    int fallback -> fallback
    java.io.File imageFile -> imageFile
    android.graphics.Bitmap bm -> bm
    int animation -> animation
    android.graphics.Bitmap preset -> preset
    float ratio -> ratio
    int round -> round
    boolean targetDim -> targetDim
    float anchor -> anchor
    boolean invalid -> invalid
    boolean rotate -> rotate
    android.graphics.Bitmap empty -> empty
    android.graphics.Bitmap dummy -> dummy
    int FADE_DUR -> FADE_DUR
    com.androidquery.callback.BitmapAjaxCallback imageView(android.widget.ImageView) -> imageView
    com.androidquery.callback.BitmapAjaxCallback targetWidth(int) -> targetWidth
    com.androidquery.callback.BitmapAjaxCallback file(java.io.File) -> file
    com.androidquery.callback.BitmapAjaxCallback preset(android.graphics.Bitmap) -> preset
    com.androidquery.callback.BitmapAjaxCallback bitmap(android.graphics.Bitmap) -> bitmap
    com.androidquery.callback.BitmapAjaxCallback fallback(int) -> fallback
    com.androidquery.callback.BitmapAjaxCallback animation(int) -> animation
    com.androidquery.callback.BitmapAjaxCallback ratio(float) -> ratio
    com.androidquery.callback.BitmapAjaxCallback rotate(boolean) -> rotate
    com.androidquery.callback.BitmapAjaxCallback anchor(float) -> anchor
    com.androidquery.callback.BitmapAjaxCallback round(int) -> round
    android.graphics.Bitmap decode(java.lang.String,byte[],android.graphics.BitmapFactory$Options,boolean) -> decode
    boolean isInputSharable() -> isInputSharable
    android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options,boolean) -> decodeFile
    android.graphics.Bitmap rotate(java.lang.String,android.graphics.Bitmap) -> rotate
    android.graphics.Matrix getRotateMatrix(int) -> getRotateMatrix
    android.graphics.Bitmap getResizedImage(java.lang.String,byte[],int,boolean,int) -> getResizedImage
    android.graphics.Bitmap getResizedImage(java.lang.String,byte[],int,boolean,int,boolean) -> getResizedImage
    int sampleSize(int,int) -> sampleSize
    android.graphics.Bitmap bmGet(java.lang.String,byte[]) -> bmGet
    java.io.File accessFile(java.io.File,java.lang.String) -> accessFile
    android.graphics.Bitmap fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
    android.graphics.Bitmap transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    android.graphics.Bitmap getFallback() -> getFallback
    android.graphics.Bitmap getMemoryCached(android.content.Context,int) -> getMemoryCached
    android.graphics.Bitmap getEmptyBitmap() -> getEmptyBitmap
    void callback(java.lang.String,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> callback
    void skip(java.lang.String,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> skip
    void checkCb(com.androidquery.callback.BitmapAjaxCallback,java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> checkCb
    void callback(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,com.androidquery.callback.AjaxStatus) -> callback
    void setIconCacheLimit(int) -> setIconCacheLimit
    void setCacheLimit(int) -> setCacheLimit
    void setDelayWrite(boolean) -> setDelayWrite
    void setPixelLimit(int) -> setPixelLimit
    void setSmallPixel(int) -> setSmallPixel
    void setMaxPixelLimit(int) -> setMaxPixelLimit
    void clearCache() -> clearCache
    void clearTasks() -> clearTasks
    java.util.Map getBCache() -> getBCache
    java.util.Map getSCache() -> getSCache
    java.util.Map getICache() -> getICache
    android.graphics.Bitmap memGet(java.lang.String) -> memGet
    boolean isMemoryCached(java.lang.String) -> isMemoryCached
    android.graphics.Bitmap getMemoryCached(java.lang.String,int) -> getMemoryCached
    android.graphics.Bitmap memGet(java.lang.String,int,int) -> memGet
    java.lang.String getKey(java.lang.String,int,int) -> getKey
    void memPut(java.lang.String,int,int,android.graphics.Bitmap,boolean) -> memPut
    void memPut(java.lang.String,android.graphics.Bitmap) -> memPut
    android.graphics.Bitmap filter(android.view.View,android.graphics.Bitmap,int) -> filter
    void presetBitmap(java.lang.String,android.widget.ImageView) -> presetBitmap
    void setBitmap(java.lang.String,android.widget.ImageView,android.graphics.Bitmap,boolean) -> setBitmap
    android.graphics.drawable.Drawable makeDrawable(android.widget.ImageView,android.graphics.Bitmap,float,float) -> makeDrawable
    void setBmAnimate(android.widget.ImageView,android.graphics.Bitmap,android.graphics.Bitmap,int,int,float,float,int) -> setBmAnimate
    boolean fadeIn(int,int) -> fadeIn
    void async(android.app.Activity,android.content.Context,android.widget.ImageView,java.lang.String,java.lang.Object,com.androidquery.auth.AccountHandle,com.androidquery.callback.ImageOptions,org.apache.http.HttpHost,java.lang.String) -> async
    void async(android.app.Activity,android.content.Context,android.widget.ImageView,java.lang.String,boolean,boolean,int,int,android.graphics.Bitmap,int,float,float,java.lang.Object,com.androidquery.auth.AccountHandle,int,int,org.apache.http.HttpHost,java.lang.String) -> async
    void async(android.content.Context) -> async
    boolean isStreamingContent() -> isStreamingContent
    void addQueue(java.lang.String,android.widget.ImageView) -> addQueue
    android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,int) -> getRoundedCornerBitmap
    void memPut(java.lang.String,java.lang.Object) -> memPut
    java.lang.Object transform(java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
    void skip(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> skip
    java.lang.Object memGet(java.lang.String) -> memGet
    void callback(java.lang.String,java.lang.Object,com.androidquery.callback.AjaxStatus) -> callback
    java.lang.Object fileGet(java.lang.String,java.io.File,com.androidquery.callback.AjaxStatus) -> fileGet
com.androidquery.callback.ImageOptions -> com.androidquery.callback.ImageOptions:
    boolean memCache -> memCache
    boolean fileCache -> fileCache
    android.graphics.Bitmap preset -> preset
    int policy -> policy
    int targetWidth -> targetWidth
    int fallback -> fallback
    int animation -> animation
    float ratio -> ratio
    int round -> round
    float anchor -> anchor
com.androidquery.callback.LocationAjaxCallback -> com.androidquery.callback.LocationAjaxCallback:
    android.location.LocationManager lm -> lm
    long timeout -> timeout
    long interval -> interval
    float tolerance -> tolerance
    float accuracy -> accuracy
    int iteration -> iteration
    int n -> n
    boolean networkEnabled -> networkEnabled
    boolean gpsEnabled -> gpsEnabled
    com.androidquery.callback.LocationAjaxCallback$Listener networkListener -> networkListener
    com.androidquery.callback.LocationAjaxCallback$Listener gpsListener -> gpsListener
    long initTime -> initTime
    void async(android.content.Context) -> async
    com.androidquery.callback.LocationAjaxCallback timeout(long) -> timeout
    com.androidquery.callback.LocationAjaxCallback accuracy(float) -> accuracy
    com.androidquery.callback.LocationAjaxCallback tolerance(float) -> tolerance
    com.androidquery.callback.LocationAjaxCallback iteration(int) -> iteration
    void check(android.location.Location) -> check
    void callback(android.location.Location) -> callback
    void status(android.location.Location,int) -> status
    boolean isAccurate(android.location.Location) -> isAccurate
    boolean isDiff(android.location.Location) -> isDiff
    boolean isBetter(android.location.Location) -> isBetter
    void failure() -> failure
    void stop() -> stop
    void work() -> work
    android.location.Location getBestLocation() -> getBestLocation
    float distFrom(double,double,double,double) -> distFrom
    void access$0(com.androidquery.callback.LocationAjaxCallback,android.location.Location) -> access$0
    android.location.Location access$1(com.androidquery.callback.LocationAjaxCallback) -> access$1
    android.location.LocationManager access$2(com.androidquery.callback.LocationAjaxCallback) -> access$2
    void access$3(com.androidquery.callback.LocationAjaxCallback) -> access$3
com.androidquery.callback.LocationAjaxCallback$Listener -> com.androidquery.callback.LocationAjaxCallback$Listener:
    com.androidquery.callback.LocationAjaxCallback this$0 -> this$0
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void run() -> run
com.androidquery.callback.ProxyHandle -> com.androidquery.callback.ProxyHandle:
    void applyProxy(com.androidquery.callback.AbstractAjaxCallback,org.apache.http.HttpRequest,org.apache.http.impl.client.DefaultHttpClient) -> applyProxy
    java.net.Proxy makeProxy(com.androidquery.callback.AbstractAjaxCallback) -> makeProxy
com.androidquery.callback.Transformer -> com.androidquery.callback.Transformer:
    java.lang.Object transform(java.lang.String,java.lang.Class,java.lang.String,byte[],com.androidquery.callback.AjaxStatus) -> transform
com.androidquery.service.MarketService -> com.androidquery.service.MarketService:
    android.app.Activity act -> act
    com.androidquery.AQuery aq -> aq
    com.androidquery.service.MarketService$Handler handler -> handler
    java.lang.String locale -> locale
    java.lang.String rateUrl -> rateUrl
    java.lang.String updateUrl -> updateUrl
    boolean force -> force
    int progress -> progress
    long expire -> expire
    java.lang.String version -> version
    boolean fetch -> fetch
    boolean completed -> completed
    int level -> level
    int REVISION -> REVISION
    int MINOR -> MINOR
    int MAJOR -> MAJOR
    android.content.pm.ApplicationInfo ai -> ai
    android.content.pm.PackageInfo pi -> pi
    java.lang.String SKIP_VERSION -> SKIP_VERSION
    java.lang.String BULLET -> BULLET
    com.androidquery.service.MarketService rateUrl(java.lang.String) -> rateUrl
    com.androidquery.service.MarketService level(int) -> level
    com.androidquery.service.MarketService updateUrl(java.lang.String) -> updateUrl
    com.androidquery.service.MarketService locale(java.lang.String) -> locale
    com.androidquery.service.MarketService progress(int) -> progress
    com.androidquery.service.MarketService force(boolean) -> force
    com.androidquery.service.MarketService expire(long) -> expire
    android.content.pm.ApplicationInfo getApplicationInfo() -> getApplicationInfo
    android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
    java.lang.String getHost() -> getHost
    java.lang.String getQueryUrl() -> getQueryUrl
    java.lang.String getAppId() -> getAppId
    android.graphics.drawable.Drawable getAppIcon() -> getAppIcon
    java.lang.String getVersion() -> getVersion
    int getVersionCode() -> getVersionCode
    void checkVersion() -> checkVersion
    boolean openUrl(android.app.Activity,java.lang.String) -> openUrl
    java.lang.String getMarketUrl() -> getMarketUrl
    void callback(java.lang.String,org.json.JSONObject,com.androidquery.callback.AjaxStatus) -> callback
    boolean outdated(java.lang.String,int) -> outdated
    boolean requireUpdate(java.lang.String,java.lang.String,int) -> requireUpdate
    void showUpdateDialog(org.json.JSONObject) -> showUpdateDialog
    java.lang.String patchBody(java.lang.String) -> patchBody
    void setSkipVersion(android.content.Context,java.lang.String) -> setSkipVersion
    java.lang.String getSkipVersion(android.content.Context) -> getSkipVersion
    boolean isActive() -> isActive
    android.app.Activity access$0(com.androidquery.service.MarketService) -> access$0
    boolean access$1(com.androidquery.service.MarketService) -> access$1
    void access$2(com.androidquery.service.MarketService,boolean) -> access$2
    com.androidquery.AQuery access$3(com.androidquery.service.MarketService) -> access$3
    int access$4(com.androidquery.service.MarketService) -> access$4
    boolean access$5(com.androidquery.service.MarketService) -> access$5
    void access$6(com.androidquery.service.MarketService,boolean) -> access$6
    void access$7(com.androidquery.service.MarketService,int) -> access$7
    java.lang.String access$8(com.androidquery.service.MarketService) -> access$8
    java.lang.String access$9(com.androidquery.service.MarketService) -> access$9
    boolean access$10(android.app.Activity,java.lang.String) -> access$10
    java.lang.String access$11(com.androidquery.service.MarketService) -> access$11
    java.lang.String access$12(com.androidquery.service.MarketService) -> access$12
    void access$13(android.content.Context,java.lang.String) -> access$13
com.androidquery.service.MarketService$Handler -> com.androidquery.service.MarketService$Handler:
    com.androidquery.service.MarketService this$0 -> this$0
    void marketCb(java.lang.String,org.json.JSONObject,com.androidquery.callback.AjaxStatus) -> marketCb
    void cb(java.lang.String,org.json.JSONObject,com.androidquery.callback.AjaxStatus) -> cb
    void detailCb(java.lang.String,java.lang.String,com.androidquery.callback.AjaxStatus) -> detailCb
    void onClick(android.content.DialogInterface,int) -> onClick
    void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader) -> handleTag
com.androidquery.util.AQUtility -> com.androidquery.util.AQUtility:
    boolean debug -> debug
    java.lang.Object wait -> wait
    java.lang.Thread$UncaughtExceptionHandler eh -> eh
    java.util.Map times -> times
    android.os.Handler handler -> handler
    int IO_BUFFER_SIZE -> IO_BUFFER_SIZE
    boolean TEST_IO_EXCEPTION -> TEST_IO_EXCEPTION
    java.util.concurrent.ScheduledExecutorService storeExe -> storeExe
    java.io.File cacheDir -> cacheDir
    java.io.File pcacheDir -> pcacheDir
    android.content.Context context -> context
    char[] map1 -> map1
    byte[] map2 -> map2
    void setDebug(boolean) -> setDebug
    boolean isDebug() -> isDebug
    void debugWait(long) -> debugWait
    void debugNotify() -> debugNotify
    void debug(java.lang.Object) -> debug
    void warn(java.lang.Object,java.lang.Object) -> warn
    void debug(java.lang.Object,java.lang.Object) -> debug
    void debug(java.lang.Throwable) -> debug
    void report(java.lang.Throwable) -> report
    void setExceptionHandler(java.lang.Thread$UncaughtExceptionHandler) -> setExceptionHandler
    void time(java.lang.String) -> time
    long timeEnd(java.lang.String,long) -> timeEnd
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Object[]) -> invokeHandler
    java.lang.Object invokeHandler(java.lang.Object,java.lang.String,boolean,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> invokeHandler
    java.lang.Object invokeMethod(java.lang.Object,java.lang.String,boolean,java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> invokeMethod
    void transparent(android.view.View,boolean) -> transparent
    void setAlpha(android.view.View,float) -> setAlpha
    void ensureUIThread() -> ensureUIThread
    boolean isUIThread() -> isUIThread
    android.os.Handler getHandler() -> getHandler
    void post(java.lang.Runnable) -> post
    void post(java.lang.Object,java.lang.String) -> post
    void post(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> post
    void postAsync(java.lang.Runnable) -> postAsync
    void postAsync(java.lang.Object,java.lang.String) -> postAsync
    void postAsync(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> postAsync
    void removePost(java.lang.Runnable) -> removePost
    void postDelayed(java.lang.Runnable,long) -> postDelayed
    void apply(android.content.SharedPreferences$Editor) -> apply
    java.lang.String getMD5Hex(java.lang.String) -> getMD5Hex
    byte[] getMD5(byte[]) -> getMD5
    void copy(java.io.InputStream,java.io.OutputStream) -> copy
    void copy(java.io.InputStream,java.io.OutputStream,int,com.androidquery.util.Progress) -> copy
    byte[] toBytes(java.io.InputStream) -> toBytes
    void write(java.io.File,byte[]) -> write
    void close(java.io.Closeable) -> close
    java.util.concurrent.ScheduledExecutorService getFileStoreExecutor() -> getFileStoreExecutor
    void storeAsync(java.io.File,byte[],long) -> storeAsync
    java.io.File getCacheDir(android.content.Context,int) -> getCacheDir
    java.io.File getCacheDir(android.content.Context) -> getCacheDir
    void setCacheDir(java.io.File) -> setCacheDir
    java.io.File makeCacheFile(java.io.File,java.lang.String) -> makeCacheFile
    java.lang.String getCacheFileName(java.lang.String) -> getCacheFileName
    java.io.File getCacheFile(java.io.File,java.lang.String) -> getCacheFile
    java.io.File getExistedCacheByUrl(java.io.File,java.lang.String) -> getExistedCacheByUrl
    java.io.File getExistedCacheByUrlSetAccess(java.io.File,java.lang.String) -> getExistedCacheByUrlSetAccess
    void lastAccess(java.io.File) -> lastAccess
    void store(java.io.File,byte[]) -> store
    void cleanCacheAsync(android.content.Context) -> cleanCacheAsync
    void cleanCacheAsync(android.content.Context,long,long) -> cleanCacheAsync
    void cleanCache(java.io.File,long,long) -> cleanCache
    java.io.File getTempDir() -> getTempDir
    boolean testCleanNeeded(java.io.File[],long) -> testCleanNeeded
    void cleanCache(java.io.File[],long) -> cleanCache
    int dip2pixel(android.content.Context,float) -> dip2pixel
    float pixel2dip(android.content.Context,float) -> pixel2dip
    void setContext(android.app.Application) -> setContext
    android.content.Context getContext() -> getContext
    char[] encode64(byte[],int,int) -> encode64
com.androidquery.util.AQUtility$1 -> com.androidquery.util.AQUtility$1:
    java.lang.Object val$handler -> val$handler
    java.lang.String val$method -> val$method
    java.lang.Class[] val$sig -> val$sig
    java.lang.Object[] val$params -> val$params
    void run() -> run
com.androidquery.util.AQUtility$2 -> com.androidquery.util.AQUtility$2:
    java.lang.Runnable val$run -> val$run
    java.lang.String doInBackground(java.lang.Void[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.androidquery.util.AQUtility$3 -> com.androidquery.util.AQUtility$3:
    java.lang.Object val$handler -> val$handler
    java.lang.String val$method -> val$method
    java.lang.Class[] val$sig -> val$sig
    java.lang.Object[] val$params -> val$params
    void run() -> run
com.androidquery.util.BitmapCache -> com.androidquery.util.BitmapCache:
    long serialVersionUID -> serialVersionUID
    int maxCount -> maxCount
    int maxPixels -> maxPixels
    int maxTotalPixels -> maxTotalPixels
    int pixels -> pixels
    android.graphics.Bitmap put(java.lang.String,android.graphics.Bitmap) -> put
    android.graphics.Bitmap remove(java.lang.Object) -> remove
    void clear() -> clear
    int pixels(android.graphics.Bitmap) -> pixels
    void shrink() -> shrink
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.androidquery.util.Common -> com.androidquery.util.Common:
    java.lang.Object handler -> handler
    java.lang.String method -> method
    java.lang.Object[] params -> params
    boolean fallback -> fallback
    java.lang.Class[] sig -> sig
    int methodId -> methodId
    int STORE_FILE -> STORE_FILE
    int CLEAN_CACHE -> CLEAN_CACHE
    int scrollState -> scrollState
    android.widget.AbsListView$OnScrollListener osl -> osl
    int lastBottom -> lastBottom
    android.widget.AdapterView$OnItemSelectedListener galleryListener -> galleryListener
    boolean galleryListen -> galleryListen
    com.androidquery.util.Common forward(java.lang.Object,java.lang.String,boolean,java.lang.Class[]) -> forward
    com.androidquery.util.Common method(int,java.lang.Object[]) -> method
    java.lang.Object invoke(java.lang.Object[]) -> invoke
    int compare(java.io.File,java.io.File) -> compare
    void run() -> run
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    int getScrollState() -> getScrollState
    void forward(android.widget.AbsListView$OnScrollListener) -> forward
    void checkScrolledBottom(android.widget.AbsListView,int) -> checkScrolledBottom
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScrollStateChanged(android.widget.ExpandableListView,int) -> onScrollStateChanged
    void onScrollStateChanged2(android.widget.AbsListView,int) -> onScrollStateChanged2
    boolean shouldDelay(int,int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelay
    boolean shouldDelay(android.view.View,android.view.ViewGroup,java.lang.String,float,boolean) -> shouldDelay
    boolean shouldDelayGallery(int,android.view.View,android.view.ViewGroup,java.lang.String) -> shouldDelayGallery
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void listen(android.widget.Gallery) -> listen
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    void showProgress(java.lang.Object,java.lang.String,boolean) -> showProgress
    int compare(java.lang.Object,java.lang.Object) -> compare
com.androidquery.util.Constants -> com.androidquery.util.Constants:
    java.lang.String VERSION -> VERSION
    int LAYER_TYPE_SOFTWARE -> LAYER_TYPE_SOFTWARE
    int LAYER_TYPE_HARDWARE -> LAYER_TYPE_HARDWARE
    int FLAG_HARDWARE_ACCELERATED -> FLAG_HARDWARE_ACCELERATED
    int FLAG_ACTIVITY_NO_ANIMATION -> FLAG_ACTIVITY_NO_ANIMATION
    int OVER_SCROLL_ALWAYS -> OVER_SCROLL_ALWAYS
    int OVER_SCROLL_IF_CONTENT_SCROLLS -> OVER_SCROLL_IF_CONTENT_SCROLLS
    int OVER_SCROLL_NEVER -> OVER_SCROLL_NEVER
    int INVISIBLE -> INVISIBLE
    int GONE -> GONE
    int PRESET -> PRESET
    int FADE_IN -> FADE_IN
    int FADE_IN_NETWORK -> FADE_IN_NETWORK
    int FADE_IN_FILE -> FADE_IN_FILE
    int CACHE_DEFAULT -> CACHE_DEFAULT
    int CACHE_PERSISTENT -> CACHE_PERSISTENT
    int METHOD_GET -> METHOD_GET
    int METHOD_POST -> METHOD_POST
    int METHOD_DELETE -> METHOD_DELETE
    int METHOD_PUT -> METHOD_PUT
    int METHOD_DETECT -> METHOD_DETECT
    int TAG_URL -> TAG_URL
    int TAG_SCROLL_LISTENER -> TAG_SCROLL_LISTENER
    int TAG_LAYOUT -> TAG_LAYOUT
    int TAG_NUM -> TAG_NUM
    int TAG_1 -> TAG_1
    int TAG_2 -> TAG_2
    int TAG_3 -> TAG_3
    int TAG_4 -> TAG_4
    int TAG_5 -> TAG_5
    float RATIO_PRESERVE -> RATIO_PRESERVE
    float ANCHOR_DYNAMIC -> ANCHOR_DYNAMIC
    java.lang.String ACTIVE_ACCOUNT -> ACTIVE_ACCOUNT
    java.lang.String AUTH_READER -> AUTH_READER
    java.lang.String AUTH_PICASA -> AUTH_PICASA
    java.lang.String AUTH_SPREADSHEETS -> AUTH_SPREADSHEETS
    java.lang.String AUTH_DOC_LIST -> AUTH_DOC_LIST
    java.lang.String AUTH_YOUTUBE -> AUTH_YOUTUBE
    java.lang.String AUTH_ANALYTICS -> AUTH_ANALYTICS
    java.lang.String AUTH_BLOGGER -> AUTH_BLOGGER
    java.lang.String AUTH_CALENDAR -> AUTH_CALENDAR
    java.lang.String AUTH_CONTACTS -> AUTH_CONTACTS
    java.lang.String AUTH_MAPS -> AUTH_MAPS
    java.lang.String POST_ENTITY -> POST_ENTITY
    int SDK_INT -> SDK_INT
com.androidquery.util.PredefinedBAOS -> com.androidquery.util.PredefinedBAOS:
    byte[] toByteArray() -> toByteArray
com.androidquery.util.Progress -> com.androidquery.util.Progress:
    android.widget.ProgressBar pb -> pb
    android.app.ProgressDialog pd -> pd
    android.app.Activity act -> act
    android.view.View view -> view
    boolean unknown -> unknown
    int bytes -> bytes
    int current -> current
    java.lang.String url -> url
    void reset() -> reset
    void setBytes(int) -> setBytes
    void increment(int) -> increment
    void done() -> done
    void run() -> run
    void show(java.lang.String) -> show
    void hide(java.lang.String) -> hide
    void dismiss(java.lang.String) -> dismiss
    void showProgress(java.lang.Object,java.lang.String,boolean) -> showProgress
com.androidquery.util.RatioDrawable -> com.androidquery.util.RatioDrawable:
    float ratio -> ratio
    java.lang.ref.WeakReference ref -> ref
    boolean adjusted -> adjusted
    android.graphics.Matrix m -> m
    int w -> w
    float anchor -> anchor
    int getWidth(android.widget.ImageView) -> getWidth
    void draw(android.graphics.Canvas) -> draw
    void draw(android.graphics.Canvas,android.widget.ImageView,android.graphics.Bitmap) -> draw
    void adjust(android.widget.ImageView,android.graphics.Bitmap,boolean) -> adjust
    int targetHeight(int,int,int) -> targetHeight
    android.graphics.Matrix getMatrix(android.widget.ImageView,android.graphics.Bitmap) -> getMatrix
    float getYOffset(int,int) -> getYOffset
com.androidquery.util.WebImage -> com.androidquery.util.WebImage:
    java.lang.Object progress -> progress
    android.webkit.WebView wv -> wv
    java.lang.String url -> url
    boolean zoom -> zoom
    boolean control -> control
    int color -> color
    java.lang.String template -> template
    java.lang.String PREF_FILE -> PREF_FILE
    java.lang.String DOUBLE_TAP_TOAST_COUNT -> DOUBLE_TAP_TOAST_COUNT
    java.lang.String getSource(android.content.Context) -> getSource
    void fixWebviewTip(android.content.Context) -> fixWebviewTip
    void load() -> load
    void delaySetup() -> delaySetup
    void setup() -> setup
    void done(android.webkit.WebView) -> done
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onScaleChanged(android.webkit.WebView,float,float) -> onScaleChanged
    void disableZoomControl(android.webkit.WebView) -> disableZoomControl
    android.webkit.WebView access$0(com.androidquery.util.WebImage) -> access$0
    void access$1(com.androidquery.util.WebImage) -> access$1
com.androidquery.util.WebImage$1 -> com.androidquery.util.WebImage$1:
    com.androidquery.util.WebImage this$0 -> this$0
    void onNewPicture(android.webkit.WebView,android.graphics.Picture) -> onNewPicture
com.androidquery.util.XmlDom -> com.androidquery.util.XmlDom:
    org.w3c.dom.Element root -> root
    org.w3c.dom.Element getElement() -> getElement
    com.androidquery.util.XmlDom tag(java.lang.String) -> tag
    com.androidquery.util.XmlDom tag(java.lang.String,java.lang.String,java.lang.String) -> tag
    java.util.List tags(java.lang.String) -> tags
    com.androidquery.util.XmlDom child(java.lang.String) -> child
    com.androidquery.util.XmlDom child(java.lang.String,java.lang.String,java.lang.String) -> child
    java.util.List children(java.lang.String) -> children
    java.util.List children(java.lang.String,java.lang.String,java.lang.String) -> children
    java.util.List tags(java.lang.String,java.lang.String,java.lang.String) -> tags
    java.util.List convert(org.w3c.dom.NodeList,java.lang.String,java.lang.String,java.lang.String) -> convert
    com.androidquery.util.XmlDom convert(org.w3c.dom.Node,java.lang.String,java.lang.String,java.lang.String) -> convert
    java.lang.String text(java.lang.String) -> text
    java.lang.String attr(java.lang.String) -> attr
    java.lang.String toString() -> toString
    java.lang.String toString(int) -> toString
    java.lang.String serialize(org.w3c.dom.Element,int) -> serialize
    void writeSpace(org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> writeSpace
    java.lang.String text() -> text
    java.lang.String text(org.w3c.dom.Node) -> text
    void serialize(org.w3c.dom.Element,org.xmlpull.v1.XmlSerializer,int,java.lang.String) -> serialize
com.avos.avoscloud.AVACL -> com.avos.avoscloud.AVACL:
    java.util.Map permissionsById -> permissionsById
    java.lang.String readTag -> readTag
    java.lang.String writeTag -> writeTag
    java.lang.String publicTag -> publicTag
    java.lang.String rolePrefix -> rolePrefix
    java.util.Map mapForKey(java.lang.String,boolean) -> mapForKey
    void allowRead(boolean,java.lang.String) -> allowRead
    boolean isReadAllowed(java.lang.String) -> isReadAllowed
    void allowWrite(boolean,java.lang.String) -> allowWrite
    boolean isWriteAllowed(java.lang.String) -> isWriteAllowed
    boolean getPublicReadAccess() -> getPublicReadAccess
    boolean getPublicWriteAccess() -> getPublicWriteAccess
    boolean getReadAccess(com.avos.avoscloud.AVUser) -> getReadAccess
    boolean getReadAccess(java.lang.String) -> getReadAccess
    java.lang.String roleName(java.lang.String) -> roleName
    boolean getRoleReadAccess(com.avos.avoscloud.AVRole) -> getRoleReadAccess
    boolean getRoleReadAccess(java.lang.String) -> getRoleReadAccess
    boolean getRoleWriteAccess(com.avos.avoscloud.AVRole) -> getRoleWriteAccess
    boolean getRoleWriteAccess(java.lang.String) -> getRoleWriteAccess
    boolean getWriteAccess(com.avos.avoscloud.AVUser) -> getWriteAccess
    boolean getWriteAccess(java.lang.String) -> getWriteAccess
    void setDefaultACL(com.avos.avoscloud.AVACL,boolean) -> setDefaultACL
    com.avos.avoscloud.AVACL parseACLWithPublicAccess(boolean,boolean) -> parseACLWithPublicAccess
    void setPublicReadAccess(boolean) -> setPublicReadAccess
    void setPublicWriteAccess(boolean) -> setPublicWriteAccess
    void setReadAccess(com.avos.avoscloud.AVUser,boolean) -> setReadAccess
    void setReadAccess(java.lang.String,boolean) -> setReadAccess
    void setRoleReadAccess(com.avos.avoscloud.AVRole,boolean) -> setRoleReadAccess
    void setRoleReadAccess(java.lang.String,boolean) -> setRoleReadAccess
    void setRoleWriteAccess(com.avos.avoscloud.AVRole,boolean) -> setRoleWriteAccess
    void setRoleWriteAccess(java.lang.String,boolean) -> setRoleWriteAccess
    void setWriteAccess(com.avos.avoscloud.AVUser,boolean) -> setWriteAccess
    void setWriteAccess(java.lang.String,boolean) -> setWriteAccess
    java.util.Map getPermissionsById() -> getPermissionsById
    java.util.Map getACLMap() -> getACLMap
    java.lang.String getRoleTagKey(java.lang.String) -> getRoleTagKey
com.avos.avoscloud.AVAnalytics -> com.avos.avoscloud.AVAnalytics:
    java.lang.String NEW_CHANNEL_ID -> NEW_CHANNEL_ID
    java.lang.String OLD_CHANNEL_ID -> OLD_CHANNEL_ID
    java.lang.String TAG -> TAG
    java.lang.String endPoint -> endPoint
    java.lang.String appOpen -> appOpen
    java.lang.String appOpenWithPush -> appOpenWithPush
    java.lang.String defaultChannel -> defaultChannel
    com.avos.avoscloud.AnalyticsImpl impl -> impl
    void trackAppOpened(android.content.Intent) -> trackAppOpened
    void setDefaultReportPolicy(android.content.Context,com.avos.avoscloud.ReportPolicy) -> setDefaultReportPolicy
    void trackPushOpened(android.content.Intent) -> trackPushOpened
    void setAppChannel(java.lang.String) -> setAppChannel
    java.lang.String getAppChannel() -> getAppChannel
    void SetCustomInfo(java.util.Map) -> SetCustomInfo
    void setCustomInfo(java.util.Map) -> setCustomInfo
    java.util.Map getCustomInfo() -> getCustomInfo
    java.util.Map statisticsDictionary(java.lang.String) -> statisticsDictionary
    void postAnalytics(java.util.Map) -> postAnalytics
    void start(android.content.Context) -> start
    void onFragmentStart(java.lang.String) -> onFragmentStart
    void onFragmentEnd(java.lang.String) -> onFragmentEnd
    void setAutoLocation(boolean) -> setAutoLocation
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setDebugMode(boolean) -> setDebugMode
    void enableCrashReport(android.content.Context,boolean) -> enableCrashReport
    void onPause(android.content.Context) -> onPause
    void onResume(android.content.Context) -> onResume
    void onResume(android.content.Context,java.lang.String,java.lang.String) -> onResume
    void onError(android.content.Context) -> onError
    void onError(android.content.Context,java.lang.String) -> onError
    void reportError(android.content.Context,java.lang.String) -> reportError
    void reportError(android.content.Context,java.lang.Throwable) -> reportError
    void reportError(android.content.Context,java.util.Map,com.avos.avoscloud.SaveCallback) -> reportError
    void flush(android.content.Context) -> flush
    void debugDump(android.content.Context) -> debugDump
    void onEvent(android.content.Context,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.lang.String,int) -> onEvent
    void onEvent(android.content.Context,java.lang.String,java.util.Map) -> onEvent
    void onEventDuration(android.content.Context,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.util.Map,long) -> onEventDuration
    void onEventDuration(android.content.Context,java.lang.String,java.lang.String,java.util.Map,long) -> onEventDuration
    void onEventBegin(android.content.Context,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String) -> onEventEnd
    void onEventBegin(android.content.Context,java.lang.String,java.lang.String) -> onEventBegin
    void onEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onEventEnd
    void onKVEventBegin(android.content.Context,java.lang.String,java.util.HashMap,java.lang.String) -> onKVEventBegin
    void onKVEventEnd(android.content.Context,java.lang.String,java.lang.String) -> onKVEventEnd
    java.lang.String getConfigParams(android.content.Context,java.lang.String) -> getConfigParams
    java.lang.String getConfigParams(android.content.Context,java.lang.String,java.lang.String) -> getConfigParams
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    void setGender(android.content.Context,java.lang.String) -> setGender
    void setAge(android.content.Context,int) -> setAge
    void setUserID(android.content.Context,java.lang.String,java.lang.String) -> setUserID
    void onKillProcess(android.content.Context) -> onKillProcess
    void setReportPolicy(android.content.Context,com.avos.avoscloud.ReportPolicy) -> setReportPolicy
    void setOnlineConfigureListener(com.avos.avoscloud.AVOnlineConfigureListener) -> setOnlineConfigureListener
    void setAnalyticsEnabled(boolean) -> setAnalyticsEnabled
com.avos.avoscloud.AVAnalytics$1 -> com.avos.avoscloud.AVAnalytics$1:
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVAnalytics$2 -> com.avos.avoscloud.AVAnalytics$2:
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVAnonymousUtils -> com.avos.avoscloud.AVAnonymousUtils:
    java.lang.String anonymousAuthData() -> anonymousAuthData
    boolean isLinked(com.avos.avoscloud.AVUser) -> isLinked
    void logIn(com.avos.avoscloud.LogInCallback) -> logIn
com.avos.avoscloud.AVAnonymousUtils$1 -> com.avos.avoscloud.AVAnonymousUtils$1:
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVBroadcastReceiver -> com.avos.avoscloud.AVBroadcastReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.avos.avoscloud.AVCacheManager -> com.avos.avoscloud.AVCacheManager:
    com.avos.avoscloud.AVCacheManager instance -> instance
    java.io.File keyValueCacheDir() -> keyValueCacheDir
    java.io.File getCacheFile(java.lang.String) -> getCacheFile
    com.avos.avoscloud.AVCacheManager sharedInstance() -> sharedInstance
    java.lang.String fileCacheKey(java.lang.String,java.lang.String) -> fileCacheKey
    boolean hasCache(java.lang.String) -> hasCache
    boolean hasCache(java.lang.String,java.lang.String) -> hasCache
    java.io.File getCacheFile(java.lang.String,java.lang.String) -> getCacheFile
    void get(java.lang.String,long,java.lang.String,com.avos.avoscloud.GenericObjectCallback) -> get
    void delete(java.lang.String) -> delete
    boolean save(java.lang.String,java.lang.String,java.lang.String) -> save
    void remove(java.lang.String,java.lang.String) -> remove
    boolean haveCache(java.lang.String) -> haveCache
    boolean clearAllCache() -> clearAllCache
    boolean clearCacheMoreThanOneDay() -> clearCacheMoreThanOneDay
    boolean clearCacheMoreThanDays(int) -> clearCacheMoreThanDays
    boolean clearFileCacheMoreThanDays(int) -> clearFileCacheMoreThanDays
com.avos.avoscloud.AVCallback -> com.avos.avoscloud.AVCallback:
    void internalDone(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone
    boolean mustRunOnUIThread() -> mustRunOnUIThread
    void internalDone(com.avos.avoscloud.AVException) -> internalDone
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.AVCallback$1 -> com.avos.avoscloud.AVCallback$1:
    java.lang.Object val$t -> val$t
    com.avos.avoscloud.AVException val$parseException -> val$parseException
    com.avos.avoscloud.AVCallback this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AVClassName -> com.avos.avoscloud.AVClassName:
    java.lang.String value() -> value
com.avos.avoscloud.AVCloud -> com.avos.avoscloud.AVCloud:
    void setProductionMode(boolean) -> setProductionMode
    java.lang.Object callFunction(java.lang.String,java.util.Map) -> callFunction
    void callFunctionInBackground(java.lang.String,java.util.Map,com.avos.avoscloud.FunctionCallback) -> callFunctionInBackground
    java.lang.Object convertCloudResponse(java.lang.String) -> convertCloudResponse
com.avos.avoscloud.AVCloud$1 -> com.avos.avoscloud.AVCloud$1:
    java.util.concurrent.atomic.AtomicReference val$reference -> val$reference
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVCloud$2 -> com.avos.avoscloud.AVCloud$2:
    com.avos.avoscloud.FunctionCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVCloudQueryResult -> com.avos.avoscloud.AVCloudQueryResult:
    java.util.List results -> results
    int count -> count
    java.util.List getResults() -> getResults
    void setResults(java.util.List) -> setResults
    int getCount() -> getCount
    void setCount(int) -> setCount
com.avos.avoscloud.AVConstants -> com.avos.avoscloud.AVConstants:
    java.lang.String AV_PUSH_SERVICE_NOTIFICATION_MSG -> AV_PUSH_SERVICE_NOTIFICATION_MSG
    java.lang.String AV_PUSH_SERVICE_APPLICATION_ID -> AV_PUSH_SERVICE_APPLICATION_ID
    java.lang.String AV_PUSH_SERVICE_DEFAULT_CALLBACK -> AV_PUSH_SERVICE_DEFAULT_CALLBACK
    java.lang.String AV_PUSH_SERVICE_ACTION_MESSAGE -> AV_PUSH_SERVICE_ACTION_MESSAGE
    java.lang.String AV_PUSH_SERVICE_SETTINGS_KEY -> AV_PUSH_SERVICE_SETTINGS_KEY
    java.lang.String PUSH_INTENT_KEY -> PUSH_INTENT_KEY
    java.lang.String AVSEARCH_HIGHTLIGHT -> AVSEARCH_HIGHTLIGHT
    java.lang.String AVSEARCH_APP_URL -> AVSEARCH_APP_URL
    java.lang.String AVSEARCH_DEEP_LINK -> AVSEARCH_DEEP_LINK
com.avos.avoscloud.AVDefaultSessionListener -> com.avos.avoscloud.AVDefaultSessionListener:
    com.avos.avoscloud.AVPushConnectionManager manager -> manager
    void onSessionOpen(android.content.Context,com.avos.avoscloud.Session,int) -> onSessionOpen
    void onSessionPaused(android.content.Context,com.avos.avoscloud.Session) -> onSessionPaused
    void onSessionResumed(android.content.Context,com.avos.avoscloud.Session) -> onSessionResumed
    void onMessage(android.content.Context,com.avos.avoscloud.Session,com.avos.avoscloud.AVMessage) -> onMessage
    void onMessageSent(android.content.Context,com.avos.avoscloud.Session,com.avos.avoscloud.AVMessage) -> onMessageSent
    void onMessageFailure(android.content.Context,com.avos.avoscloud.Session,com.avos.avoscloud.AVMessage) -> onMessageFailure
    void onStatusOnline(android.content.Context,com.avos.avoscloud.Session,java.util.List) -> onStatusOnline
    void onStatusOffline(android.content.Context,com.avos.avoscloud.Session,java.util.List) -> onStatusOffline
    void onError(android.content.Context,com.avos.avoscloud.Session,java.lang.Throwable,int,int) -> onError
    void onPeersWatched(android.content.Context,com.avos.avoscloud.Session,java.util.List) -> onPeersWatched
    void onPeersUnwatched(android.content.Context,com.avos.avoscloud.Session,java.util.List) -> onPeersUnwatched
    void onMessageDelivered(android.content.Context,com.avos.avoscloud.Session,com.avos.avoscloud.AVMessage) -> onMessageDelivered
    void onSessionClose(android.content.Context,com.avos.avoscloud.Session,int) -> onSessionClose
com.avos.avoscloud.AVDuration -> com.avos.avoscloud.AVDuration:
    long createTimeStamp -> createTimeStamp
    long resumeTimeStamp -> resumeTimeStamp
    long pausedTimeStamp -> pausedTimeStamp
    long duration -> duration
    boolean stopped -> stopped
    android.os.Parcelable$Creator CREATOR -> CREATOR
    long getCreateTimeStamp() -> getCreateTimeStamp
    long getActualDuration() -> getActualDuration
    long getDuration() -> getDuration
    void start() -> start
    void stop() -> stop
    boolean isStopped() -> isStopped
    void resume() -> resume
    void pause() -> pause
    void setDuration(long) -> setDuration
    void addDuration(long) -> addDuration
    void sync() -> sync
    long getLastTimeInterval() -> getLastTimeInterval
    long currentTS() -> currentTS
    long getResumeTimeStamp() -> getResumeTimeStamp
    void setResumeTimeStamp(long) -> setResumeTimeStamp
    void setCreateTimeStamp(long) -> setCreateTimeStamp
    void setStopped(boolean) -> setStopped
    long getPausedTimeStamp() -> getPausedTimeStamp
    void setPausedTimeStamp(long) -> setPausedTimeStamp
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.avos.avoscloud.AVDuration$1 -> com.avos.avoscloud.AVDuration$1:
    com.avos.avoscloud.AVDuration createFromParcel(android.os.Parcel) -> createFromParcel
    com.avos.avoscloud.AVDuration[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.avos.avoscloud.AVErrorUtils -> com.avos.avoscloud.AVErrorUtils:
    int CIRCLE_REFERENCE -> CIRCLE_REFERENCE
    int MISSING_OBJECTID -> MISSING_OBJECTID
    com.avos.avoscloud.AVException createException(java.lang.String) -> createException
    com.avos.avoscloud.AVException createException(java.lang.Throwable,java.lang.String) -> createException
    int errorCode(java.lang.String) -> errorCode
    com.avos.avoscloud.AVException createException(int,java.lang.String) -> createException
    com.avos.avoscloud.AVException invalidObjectIdException() -> invalidObjectIdException
    com.avos.avoscloud.AVException invalidQueryException() -> invalidQueryException
    com.avos.avoscloud.AVException sessionMissingException() -> sessionMissingException
    com.avos.avoscloud.AVException fileDownloadInConsistentFailureException() -> fileDownloadInConsistentFailureException
    com.avos.avoscloud.AVException circleException() -> circleException
com.avos.avoscloud.AVException -> com.avos.avoscloud.AVException:
    long serialVersionUID -> serialVersionUID
    int code -> code
    int OTHER_CAUSE -> OTHER_CAUSE
    int INTERNAL_SERVER_ERROR -> INTERNAL_SERVER_ERROR
    int CONNECTION_FAILED -> CONNECTION_FAILED
    int OBJECT_NOT_FOUND -> OBJECT_NOT_FOUND
    int INVALID_QUERY -> INVALID_QUERY
    int INVALID_CLASS_NAME -> INVALID_CLASS_NAME
    int MISSING_OBJECT_ID -> MISSING_OBJECT_ID
    int INVALID_KEY_NAME -> INVALID_KEY_NAME
    int INVALID_POINTER -> INVALID_POINTER
    int INVALID_JSON -> INVALID_JSON
    int COMMAND_UNAVAILABLE -> COMMAND_UNAVAILABLE
    int NOT_INITIALIZED -> NOT_INITIALIZED
    int INCORRECT_TYPE -> INCORRECT_TYPE
    int INVALID_CHANNEL_NAME -> INVALID_CHANNEL_NAME
    int PUSH_MISCONFIGURED -> PUSH_MISCONFIGURED
    int OBJECT_TOO_LARGE -> OBJECT_TOO_LARGE
    int OPERATION_FORBIDDEN -> OPERATION_FORBIDDEN
    int CACHE_MISS -> CACHE_MISS
    int INVALID_NESTED_KEY -> INVALID_NESTED_KEY
    int INVALID_FILE_NAME -> INVALID_FILE_NAME
    int INVALID_ACL -> INVALID_ACL
    int TIMEOUT -> TIMEOUT
    int INVALID_EMAIL_ADDRESS -> INVALID_EMAIL_ADDRESS
    int INVALID_FILE_URL -> INVALID_FILE_URL
    int INVALID_PHONE_NUMBER -> INVALID_PHONE_NUMBER
    int DUPLICATE_VALUE -> DUPLICATE_VALUE
    int INVALID_ROLE_NAME -> INVALID_ROLE_NAME
    int EXCEEDED_QUOTA -> EXCEEDED_QUOTA
    int SCRIPT_ERROR -> SCRIPT_ERROR
    int VALIDATION_ERROR -> VALIDATION_ERROR
    int FILE_DELETE_ERROR -> FILE_DELETE_ERROR
    int USERNAME_MISSING -> USERNAME_MISSING
    int PASSWORD_MISSING -> PASSWORD_MISSING
    int USERNAME_TAKEN -> USERNAME_TAKEN
    int EMAIL_TAKEN -> EMAIL_TAKEN
    int EMAIL_MISSING -> EMAIL_MISSING
    int EMAIL_NOT_FOUND -> EMAIL_NOT_FOUND
    int SESSION_MISSING -> SESSION_MISSING
    int MUST_CREATE_USER_THROUGH_SIGNUP -> MUST_CREATE_USER_THROUGH_SIGNUP
    int ACCOUNT_ALREADY_LINKED -> ACCOUNT_ALREADY_LINKED
    int USER_ID_MISMATCH -> USER_ID_MISMATCH
    int USERNAME_PASSWORD_MISMATCH -> USERNAME_PASSWORD_MISMATCH
    int USER_DOESNOT_EXIST -> USER_DOESNOT_EXIST
    int USER_MOBILEPHONE_MISSING -> USER_MOBILEPHONE_MISSING
    int USER_WITH_MOBILEPHONE_NOT_FOUND -> USER_WITH_MOBILEPHONE_NOT_FOUND
    int USER_MOBILE_PHONENUMBER_TAKEN -> USER_MOBILE_PHONENUMBER_TAKEN
    int USER_MOBILEPHONE_NOT_VERIFIED -> USER_MOBILEPHONE_NOT_VERIFIED
    int LINKED_ID_MISSING -> LINKED_ID_MISSING
    int INVALID_LINKED_SESSION -> INVALID_LINKED_SESSION
    int UNSUPPORTED_SERVICE -> UNSUPPORTED_SERVICE
    int RATE_LIMITED -> RATE_LIMITED
    int UNKNOWN -> UNKNOWN
    java.lang.String cacheMissingErrorString -> cacheMissingErrorString
    int FILE_DOWNLOAD_INCONSISTENT_FAILURE -> FILE_DOWNLOAD_INCONSISTENT_FAILURE
    int getCode() -> getCode
com.avos.avoscloud.AVExceptionHolder -> com.avos.avoscloud.AVExceptionHolder:
    java.lang.ThreadLocal local -> local
    void add(com.avos.avoscloud.AVException) -> add
    boolean exists() -> exists
    com.avos.avoscloud.AVException remove() -> remove
com.avos.avoscloud.AVExceptionHolder$1 -> com.avos.avoscloud.AVExceptionHolder$1:
    com.avos.avoscloud.AVException initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.avos.avoscloud.AVFile -> com.avos.avoscloud.AVFile:
    boolean dirty -> dirty
    java.lang.String name -> name
    java.lang.String url -> url
    byte[] data -> data
    com.avos.avoscloud.AVUploader uploader -> uploader
    com.avos.avoscloud.AVFile$AVDownloader downloader -> downloader
    java.util.HashMap metaData -> metaData
    java.lang.String defaultMimeType -> defaultMimeType
    java.lang.String FILE_SUM_KEY -> FILE_SUM_KEY
    java.lang.String FILE_NAME_KEY -> FILE_NAME_KEY
    java.lang.String objectId -> objectId
    com.avos.avoscloud.AVObject fileObject -> fileObject
    java.lang.String bucket -> bucket
    java.lang.String ELDERMETADATAKEYFORIOSFIX -> ELDERMETADATAKEYFORIOSFIX
    com.avos.avoscloud.AVACL acl -> acl
    java.lang.String THUMBNAIL_FMT -> THUMBNAIL_FMT
    java.lang.String ETAG_FILE_EXTENSION -> ETAG_FILE_EXTENSION
    com.avos.avoscloud.AVObject getFileObject() -> getFileObject
    java.lang.String getObjectId() -> getObjectId
    void setObjectId(java.lang.String) -> setObjectId
    void parseFileWithObjectIdInBackground(java.lang.String,com.avos.avoscloud.GetFileCallback) -> parseFileWithObjectIdInBackground
    void withObjectIdInBackground(java.lang.String,com.avos.avoscloud.GetFileCallback) -> withObjectIdInBackground
    com.avos.avoscloud.AVFile parseFileWithObjectId(java.lang.String) -> parseFileWithObjectId
    com.avos.avoscloud.AVFile withObjectId(java.lang.String) -> withObjectId
    com.avos.avoscloud.AVFile parseFileWithAVObject(com.avos.avoscloud.AVObject) -> parseFileWithAVObject
    com.avos.avoscloud.AVFile withAVObject(com.avos.avoscloud.AVObject) -> withAVObject
    com.avos.avoscloud.AVFile createFileFromAVObject(com.avos.avoscloud.AVObject) -> createFileFromAVObject
    com.avos.avoscloud.AVFile parseFileWithAbsoluteLocalPath(java.lang.String,java.lang.String) -> parseFileWithAbsoluteLocalPath
    com.avos.avoscloud.AVFile withAbsoluteLocalPath(java.lang.String,java.lang.String) -> withAbsoluteLocalPath
    com.avos.avoscloud.AVFile parseFileWithFile(java.lang.String,java.io.File) -> parseFileWithFile
    com.avos.avoscloud.AVFile withFile(java.lang.String,java.io.File) -> withFile
    java.util.HashMap getMetaData() -> getMetaData
    java.lang.Object addMetaData(java.lang.String,java.lang.Object) -> addMetaData
    java.lang.Object getMetaData(java.lang.String) -> getMetaData
    int getSize() -> getSize
    java.lang.String getOwnerObjectId() -> getOwnerObjectId
    java.lang.Object removeMetaData(java.lang.String) -> removeMetaData
    void clearMetaData() -> clearMetaData
    java.lang.String getName() -> getName
    java.lang.String getOriginalName() -> getOriginalName
    void setName(java.lang.String) -> setName
    java.lang.String getMimeType(java.lang.String) -> getMimeType
    boolean isDirty() -> isDirty
    boolean isDataAvailable() -> isDataAvailable
    java.lang.String getUrl() -> getUrl
    java.lang.String getThumbnailUrl(boolean,int,int) -> getThumbnailUrl
    java.lang.String getThumbnailUrl(boolean,int,int,int,java.lang.String) -> getThumbnailUrl
    void setUrl(java.lang.String) -> setUrl
    void save() -> save
    void saveInBackground(com.avos.avoscloud.SaveCallback,com.avos.avoscloud.ProgressCallback) -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback) -> saveInBackground
    void saveInBackground() -> saveInBackground
    byte[] getData() -> getData
    void getDataInBackground(com.avos.avoscloud.GetDataCallback,com.avos.avoscloud.ProgressCallback) -> getDataInBackground
    void getDataInBackground(com.avos.avoscloud.GetDataCallback) -> getDataInBackground
    void cancel() -> cancel
    void cancelDownloadIfNeed() -> cancelDownloadIfNeed
    void cancelUploadIfNeed() -> cancelUploadIfNeed
    void handleUploadedResponse(java.lang.String,java.lang.String,java.lang.String) -> handleUploadedResponse
    void delete() -> delete
    void deleteEventually() -> deleteEventually
    void deleteEventually(com.avos.avoscloud.DeleteCallback) -> deleteEventually
    void deleteInBackground() -> deleteInBackground
    void deleteInBackground(com.avos.avoscloud.DeleteCallback) -> deleteInBackground
    java.lang.String mimeType() -> mimeType
    java.lang.String className() -> className
    java.io.File localPath() -> localPath
    com.avos.avoscloud.AVUploader getUploader(com.avos.avoscloud.SaveCallback,com.avos.avoscloud.ProgressCallback) -> getUploader
    java.lang.String getBucket() -> getBucket
    void setBucket(java.lang.String) -> setBucket
    void cacheFile(byte[],java.lang.String) -> cacheFile
    byte[] fetchCacheData() -> fetchCacheData
    java.lang.String fetchCacheTag() -> fetchCacheTag
    boolean removeCacheTag() -> removeCacheTag
    com.avos.avoscloud.AVACL getACL() -> getACL
    void setACL(com.avos.avoscloud.AVACL) -> setACL
    java.lang.String getFileSum() -> getFileSum
    org.json.JSONObject toJSONObject() -> toJSONObject
    com.avos.avoscloud.AVFile access$000(com.avos.avoscloud.AVObject) -> access$000
    java.lang.String access$100(com.avos.avoscloud.AVFile) -> access$100
    java.lang.String access$300(com.avos.avoscloud.AVFile) -> access$300
    byte[] access$400(com.avos.avoscloud.AVFile) -> access$400
    byte[] access$502(com.avos.avoscloud.AVFile,byte[]) -> access$502
    boolean access$700(com.avos.avoscloud.AVFile) -> access$700
    byte[] access$500(com.avos.avoscloud.AVFile) -> access$500
    void access$800(com.avos.avoscloud.AVFile,byte[],java.lang.String) -> access$800
    java.io.File access$1000(com.avos.avoscloud.AVFile) -> access$1000
com.avos.avoscloud.AVFile$1 -> com.avos.avoscloud.AVFile$1:
    com.avos.avoscloud.GetFileCallback val$cb -> val$cb
    java.lang.String val$objectId -> val$objectId
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVFile$2 -> com.avos.avoscloud.AVFile$2:
    int[] $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType -> $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType
com.avos.avoscloud.AVFile$AVDownloader -> com.avos.avoscloud.AVFile$AVDownloader:
    com.loopj.android.http.AsyncHttpClient client -> client
    com.avos.avoscloud.GetDataCallback dataCallback -> dataCallback
    com.avos.avoscloud.ProgressCallback progressCallback -> progressCallback
    com.avos.avoscloud.AVFile parseFile -> parseFile
    java.lang.String etag -> etag
    java.util.concurrent.atomic.AtomicInteger retries -> retries
    com.avos.avoscloud.AVException doWork(java.lang.String) -> doWork
    com.avos.avoscloud.AVException doInBackground(java.lang.String[]) -> doInBackground
    void onProgressUpdate(java.lang.Integer[]) -> onProgressUpdate
    void onPostExecute(com.avos.avoscloud.AVException) -> onPostExecute
    void onPreExecute() -> onPreExecute
    void onCancelled() -> onCancelled
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.avos.avoscloud.AVFile access$200(com.avos.avoscloud.AVFile$AVDownloader) -> access$200
    java.util.concurrent.atomic.AtomicInteger access$600(com.avos.avoscloud.AVFile$AVDownloader) -> access$600
    void access$900(com.avos.avoscloud.AVFile$AVDownloader,java.lang.Object[]) -> access$900
com.avos.avoscloud.AVFile$AVDownloader$1 -> com.avos.avoscloud.AVFile$AVDownloader$1:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    java.lang.String val$urlStr -> val$urlStr
    java.lang.String val$etag -> val$etag
    com.avos.avoscloud.AVFile$AVDownloader this$0 -> this$0
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onProgress(int,int) -> onProgress
com.avos.avoscloud.AVFollowResponse -> com.avos.avoscloud.AVFollowResponse:
    java.util.Map[] results -> results
    java.util.Map[] followers -> followers
    java.util.Map[] followees -> followees
com.avos.avoscloud.AVFriendshipQuery -> com.avos.avoscloud.AVFriendshipQuery:
    java.lang.String friendshipTag -> friendshipTag
    void setFriendshipTag(java.lang.String) -> setFriendshipTag
    java.lang.String getFriendshipTag() -> getFriendshipTag
    void processResultList(java.util.Map[],java.util.List,java.lang.String) -> processResultList
    java.util.List processResultByTag(java.lang.String,java.lang.String) -> processResultByTag
    java.util.List processResults(java.lang.String) -> processResults
com.avos.avoscloud.AVGeoPoint -> com.avos.avoscloud.AVGeoPoint:
    double EARTH_MEAN_RADIUS_KM -> EARTH_MEAN_RADIUS_KM
    double ONE_KM_TO_MILES -> ONE_KM_TO_MILES
    double latitude -> latitude
    double longitude -> longitude
    double distanceInKilometersTo(com.avos.avoscloud.AVGeoPoint) -> distanceInKilometersTo
    double distanceInMilesTo(com.avos.avoscloud.AVGeoPoint) -> distanceInMilesTo
    double distanceInRadiansTo(com.avos.avoscloud.AVGeoPoint) -> distanceInRadiansTo
    double getLatitude() -> getLatitude
    void setLatitude(double) -> setLatitude
    double getLongitude() -> getLongitude
    void setLongitude(double) -> setLongitude
com.avos.avoscloud.AVGroup -> com.avos.avoscloud.AVGroup:
    java.lang.String roomId -> roomId
    java.lang.String selfId -> selfId
    com.avos.avoscloud.SessionManager session -> session
    java.lang.String GROUP_TABLE_NAME -> GROUP_TABLE_NAME
    com.avos.avoscloud.AVGroup getInstance(java.lang.String,java.lang.String) -> getInstance
    void join() -> join
    void sendMessage(com.avos.avoscloud.AVMessage) -> sendMessage
    void kickMember(java.util.List) -> kickMember
    void inviteMember(java.util.List) -> inviteMember
    void quit() -> quit
    boolean validatePeerIds(java.util.List) -> validatePeerIds
    void sendErrorBroadcast(java.lang.Exception) -> sendErrorBroadcast
    java.lang.String getGroupId() -> getGroupId
    java.lang.String getSelfId() -> getSelfId
    com.avos.avoscloud.AVHistoryMessageQuery getHistoryMessageQuery() -> getHistoryMessageQuery
    java.util.List getMembers() -> getMembers
    void getMembersInBackground(com.avos.avoscloud.GroupMemberQueryCallback) -> getMembersInBackground
com.avos.avoscloud.AVGroup$1 -> com.avos.avoscloud.AVGroup$1:
    com.avos.avoscloud.GroupMemberQueryCallback val$callback -> val$callback
    com.avos.avoscloud.AVGroup this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVGroupMessageReceiver -> com.avos.avoscloud.AVGroupMessageReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    com.avos.avoscloud.AVMessage readMessage(android.content.Context,java.lang.String,com.avos.avoscloud.Group,java.lang.String) -> readMessage
    java.util.Map readInformation(android.content.Context,java.lang.String,com.avos.avoscloud.Group) -> readInformation
com.avos.avoscloud.AVHistoryMessage -> com.avos.avoscloud.AVHistoryMessage:
    java.lang.String convid -> convid
    boolean isRoom -> isRoom
    boolean isRoom() -> isRoom
    void setRoom(boolean) -> setRoom
    java.lang.String getConvid() -> getConvid
    void setConvid(java.lang.String) -> setConvid
com.avos.avoscloud.AVHistoryMessageQuery -> com.avos.avoscloud.AVHistoryMessageQuery:
    int limit -> limit
    java.lang.String convid -> convid
    java.lang.String from -> from
    long timestamp -> timestamp
    int getLimit() -> getLimit
    void setLimit(int) -> setLimit
    java.lang.String getConvid() -> getConvid
    void setConvid(java.lang.String) -> setConvid
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    long getTimestamp() -> getTimestamp
    void setTimestamp(long) -> setTimestamp
    void setPeerIds(java.util.List) -> setPeerIds
    void setGroupId(java.lang.String) -> setGroupId
    java.util.List find() -> find
    void findInBackground(com.avos.avoscloud.AVHistoryMessageQuery$HistoryMessageCallback) -> findInBackground
    void findInBackground(com.avos.avoscloud.AVHistoryMessageQuery$HistoryMessageCallback,boolean) -> findInBackground
    java.util.List processResults(java.lang.String) -> processResults
    java.util.List access$000(com.avos.avoscloud.AVHistoryMessageQuery,java.lang.String) -> access$000
com.avos.avoscloud.AVHistoryMessageQuery$1 -> com.avos.avoscloud.AVHistoryMessageQuery$1:
    java.util.List val$result -> val$result
    com.avos.avoscloud.AVHistoryMessageQuery this$0 -> this$0
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVHistoryMessageQuery$2 -> com.avos.avoscloud.AVHistoryMessageQuery$2:
    com.avos.avoscloud.AVHistoryMessageQuery$HistoryMessageCallback val$callback -> val$callback
    com.avos.avoscloud.AVHistoryMessageQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVHistoryMessageQuery$HistoryMessageCallback -> com.avos.avoscloud.AVHistoryMessageQuery$HistoryMessageCallback:
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVIMEventHandler -> com.avos.avoscloud.AVIMEventHandler:
    void processEvent(int,java.lang.Object,java.lang.Object,java.lang.Object) -> processEvent
    void processEvent0(int,java.lang.Object,java.lang.Object,java.lang.Object) -> processEvent0
com.avos.avoscloud.AVIMEventHandler$1 -> com.avos.avoscloud.AVIMEventHandler$1:
    int val$operation -> val$operation
    java.lang.Object val$operator -> val$operator
    java.lang.Object val$operand -> val$operand
    java.lang.Object val$eventScene -> val$eventScene
    com.avos.avoscloud.AVIMEventHandler this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AVIMOperationQueue -> com.avos.avoscloud.AVIMOperationQueue:
    android.util.SparseArray timeoutCache -> timeoutCache
    android.os.HandlerThread timeoutHandlerThread -> timeoutHandlerThread
    android.os.Handler timeoutHandler -> timeoutHandler
    android.util.SparseArray cache -> cache
    com.avos.avospush.session.MessageQueue operationQueue -> operationQueue
    void setupCache() -> setupCache
    void offer(com.avos.avoscloud.AVIMOperationQueue$Operation) -> offer
    com.avos.avoscloud.AVIMOperationQueue$Operation poll(int) -> poll
    com.avos.avoscloud.AVIMOperationQueue$Operation poll() -> poll
    void clear() -> clear
    boolean isEmpty() -> isEmpty
com.avos.avoscloud.AVIMOperationQueue$1 -> com.avos.avoscloud.AVIMOperationQueue$1:
    com.avos.avoscloud.AVIMOperationQueue$Operation val$op -> val$op
    com.avos.avoscloud.AVIMOperationQueue this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AVIMOperationQueue$Operation -> com.avos.avoscloud.AVIMOperationQueue$Operation:
    int requestId -> requestId
    int operation -> operation
    java.lang.String sessionId -> sessionId
    java.lang.String conversationId -> conversationId
    com.avos.avoscloud.AVIMOperationQueue$Operation getOperation(int,java.lang.String,java.lang.String,int) -> getOperation
com.avos.avoscloud.AVInstallation -> com.avos.avoscloud.AVInstallation:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String INSTALLATION -> INSTALLATION
    java.lang.String DEVICETYPETAG -> DEVICETYPETAG
    java.lang.String CHANNELSTAG -> CHANNELSTAG
    java.lang.String INSTALLATIONIDTAG -> INSTALLATIONIDTAG
    java.lang.String INSTALLATION_AVNAME -> INSTALLATION_AVNAME
    com.avos.avoscloud.AVInstallation currentInstallation -> currentInstallation
    java.lang.String installationId -> installationId
    int UUID_LEN -> UUID_LEN
    com.avos.avoscloud.RelationPropertyFilter filter -> filter
    void setInstallationId(java.lang.String) -> setInstallationId
    com.avos.avoscloud.AVInstallation getCurrentInstallation() -> getCurrentInstallation
    void createNewInstallation() -> createNewInstallation
    java.lang.String genInstallationId() -> genInstallationId
    void saveCurrentInstalationToLocal() -> saveCurrentInstalationToLocal
    void initialize() -> initialize
    java.lang.String timezone() -> timezone
    java.lang.String getInstallationId() -> getInstallationId
    void onSaveSuccess() -> onSaveSuccess
    void onDataSynchronized() -> onDataSynchronized
    void onSaveFailure() -> onSaveFailure
    com.avos.avoscloud.AVInstallation readInstallationFile() -> readInstallationFile
    void writeInstallationFile(com.avos.avoscloud.AVInstallation) -> writeInstallationFile
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    void put(java.lang.String,java.lang.Object) -> put
    void remove(java.lang.String) -> remove
    java.lang.String deviceType() -> deviceType
    boolean alwaysUsePost() -> alwaysUsePost
    boolean alwaysSaveAllKeyValues() -> alwaysSaveAllKeyValues
    void saveEventually(com.avos.avoscloud.SaveCallback) -> saveEventually
    void superSaveEventually(com.avos.avoscloud.SaveCallback) -> superSaveEventually
    void updateCurrentInstallation() -> updateCurrentInstallation
    boolean isDirty() -> isDirty
    void access$000(com.avos.avoscloud.AVInstallation) -> access$000
com.avos.avoscloud.AVInstallation$1 -> com.avos.avoscloud.AVInstallation$1:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVInternalConversation -> com.avos.avoscloud.AVInternalConversation:
    com.avos.avoscloud.AVSession session -> session
    java.lang.String conversationId -> conversationId
    java.lang.String conversationGene -> conversationGene
    void addMembers(java.util.List,int) -> addMembers
    void kickMembers(java.util.List,int) -> kickMembers
    void join(int) -> join
    void updateInfo(java.util.Map,int) -> updateInfo
    void sendMessage(com.avos.avoscloud.im.v2.AVIMMessage,int,int) -> sendMessage
    void quit(int) -> quit
    void queryHistoryMessages(java.lang.String,long,int,int) -> queryHistoryMessages
    void mute(int) -> mute
    void unmute(int) -> unmute
    void getMemberCount(int) -> getMemberCount
    boolean checkSessionStatus(com.avos.avoscloud.im.v2.Conversation$AVIMOperation,int) -> checkSessionStatus
    void processConversationCommandFromClient(int,java.util.Map,int) -> processConversationCommandFromClient
    void processConversationCommandFromServer(com.avos.avoscloud.im.v2.Conversation$AVIMOperation,int,java.util.Map) -> processConversationCommandFromServer
    void onConversationCreated(int) -> onConversationCreated
    void onJoined(int) -> onJoined
    void onInvited(int) -> onInvited
    void onKicked(int) -> onKicked
    void onQuit(int) -> onQuit
    void onInfoUpdated(int) -> onInfoUpdated
    void onMuted(int) -> onMuted
    void onUnmuted(int) -> onUnmuted
    void onMemberCount(int,int) -> onMemberCount
    void onMessageSent(int,java.lang.String,long) -> onMessageSent
    void onHistoryMessageQuery(java.util.ArrayList,int) -> onHistoryMessageQuery
    void onInvitedToConversation(java.lang.String) -> onInvitedToConversation
    void onKickedFromConversation(java.lang.String) -> onKickedFromConversation
    void onMembersJoined(java.util.List,java.lang.String) -> onMembersJoined
    void onMembersLeft(java.util.List,java.lang.String) -> onMembersLeft
    void onMessage(com.avos.avoscloud.im.v2.AVIMMessage) -> onMessage
    void onMessageReceipt(com.avos.avoscloud.im.v2.AVIMMessage) -> onMessageReceipt
    java.lang.String getConversationGeneString() -> getConversationGeneString
com.avos.avoscloud.AVInternalConversation$1 -> com.avos.avoscloud.AVInternalConversation$1:
    java.util.List val$members -> val$members
    int val$requestId -> val$requestId
    com.avos.avoscloud.AVInternalConversation this$0 -> this$0
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
com.avos.avoscloud.AVInternalConversation$2 -> com.avos.avoscloud.AVInternalConversation$2:
    java.util.List val$members -> val$members
    int val$requestId -> val$requestId
    com.avos.avoscloud.AVInternalConversation this$0 -> this$0
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
com.avos.avoscloud.AVInternalConversation$3 -> com.avos.avoscloud.AVInternalConversation$3:
    int val$requestId -> val$requestId
    com.avos.avoscloud.AVInternalConversation this$0 -> this$0
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
com.avos.avoscloud.AVInternalGroup -> com.avos.avoscloud.AVInternalGroup:
    com.avos.avoscloud.AVSession session -> session
    java.lang.String roomId -> roomId
    java.util.List roomIdAsList -> roomIdAsList
    java.lang.String selfId -> selfId
    com.avos.avoscloud.PendingMessageCache pendingCommand -> pendingCommand
    void join() -> join
    void sendMessage(com.avos.avoscloud.AVMessage) -> sendMessage
    void kickMember(java.util.List) -> kickMember
    void inviteMember(java.util.List) -> inviteMember
    void quit() -> quit
    void checkSessionStatus(int,java.util.List,java.lang.String) -> checkSessionStatus
    java.lang.String getGroupId() -> getGroupId
    java.lang.String getSelfId() -> getSelfId
    java.lang.String getGroupGeneString() -> getGroupGeneString
    void processGroupCommand(java.util.Map) -> processGroupCommand
    void onJoined(android.content.Context,com.avos.avoscloud.Group) -> onJoined
    void onInvited(android.content.Context,com.avos.avoscloud.Group,java.util.List) -> onInvited
    void onInviteToGroup(android.content.Context,com.avos.avoscloud.Group,java.lang.String) -> onInviteToGroup
    void onKicked(android.content.Context,com.avos.avoscloud.Group,java.util.List) -> onKicked
    void onMessageSent(android.content.Context,com.avos.avoscloud.Group,com.avos.avoscloud.AVMessage) -> onMessageSent
    void onMessageFailure(android.content.Context,com.avos.avoscloud.Group,com.avos.avoscloud.AVMessage) -> onMessageFailure
    void onMessage(android.content.Context,com.avos.avoscloud.Group,com.avos.avoscloud.AVMessage) -> onMessage
    void onQuit(android.content.Context,com.avos.avoscloud.Group) -> onQuit
    void onReject(android.content.Context,com.avos.avoscloud.Group,java.lang.String,java.util.List) -> onReject
    void onError(android.content.Context,com.avos.avoscloud.Group,java.lang.Throwable) -> onError
    void onMemberJoin(android.content.Context,com.avos.avoscloud.Group,java.util.List) -> onMemberJoin
    void onMemberLeft(android.content.Context,com.avos.avoscloud.Group,java.util.List) -> onMemberLeft
    com.avos.avoscloud.AVHistoryMessageQuery getHistoryMessageQuery() -> getHistoryMessageQuery
    java.util.List getMembers() -> getMembers
    void getMembersInBackground(com.avos.avoscloud.GroupMemberQueryCallback) -> getMembersInBackground
com.avos.avoscloud.AVInternalGroup$1 -> com.avos.avoscloud.AVInternalGroup$1:
    com.avos.avoscloud.AVInternalGroup this$0 -> this$0
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
com.avos.avoscloud.AVInternalGroup$2 -> com.avos.avoscloud.AVInternalGroup$2:
    java.util.List val$peerIds -> val$peerIds
    com.avos.avoscloud.AVInternalGroup this$0 -> this$0
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
com.avos.avoscloud.AVInternalGroup$3 -> com.avos.avoscloud.AVInternalGroup$3:
    java.util.List val$peerIds -> val$peerIds
    com.avos.avoscloud.AVInternalGroup this$0 -> this$0
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
com.avos.avoscloud.AVInternalSessionListener -> com.avos.avoscloud.AVInternalSessionListener:
    void onError(android.content.Context,com.avos.avoscloud.Session,java.lang.Throwable,int,int) -> onError
    void onError(android.content.Context,com.avos.avoscloud.Session,java.lang.Throwable) -> onError
    void onSessionOpen(android.content.Context,com.avos.avoscloud.Session) -> onSessionOpen
    void onSessionOpen(android.content.Context,com.avos.avoscloud.Session,int) -> onSessionOpen
    void onSessionClose(android.content.Context,com.avos.avoscloud.Session) -> onSessionClose
    void onSessionClose(android.content.Context,com.avos.avoscloud.Session,int) -> onSessionClose
com.avos.avoscloud.AVKeyValues -> com.avos.avoscloud.AVKeyValues:
    java.lang.Object value -> value
    java.lang.String key -> key
    com.avos.avoscloud.ops.AVOp op -> op
    boolean relationKey -> relationKey
    java.lang.String relationClassName -> relationClassName
    java.lang.String getRelationClassName() -> getRelationClassName
    void setRelationClassName(java.lang.String) -> setRelationClassName
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    com.avos.avoscloud.ops.AVOp getOp() -> getOp
    void setOp(com.avos.avoscloud.ops.AVOp) -> setOp
    boolean isRelationKey() -> isRelationKey
    void setRelationKey(boolean) -> setRelationKey
    void resetOp() -> resetOp
    void setRelationKey(com.avos.avoscloud.ops.AVOp) -> setRelationKey
    void addOp(com.avos.avoscloud.ops.AVOp) -> addOp
    int opSize() -> opSize
    com.avos.avoscloud.ops.AVOp getOp(int) -> getOp
com.avos.avoscloud.AVMessage -> com.avos.avoscloud.AVMessage:
    java.util.List toPeerIds -> toPeerIds
    java.lang.String groupId -> groupId
    java.lang.String message -> message
    long timestamp -> timestamp
    boolean isTransient -> isTransient
    java.lang.String fromPeerId -> fromPeerId
    boolean isRequestReceipt -> isRequestReceipt
    long receiptTimestamp -> receiptTimestamp
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.util.List getToPeerIds() -> getToPeerIds
    void setToPeerIds(java.util.List) -> setToPeerIds
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    long getTimestamp() -> getTimestamp
    void setTimestamp(long) -> setTimestamp
    boolean isTransient() -> isTransient
    void setTransient(boolean) -> setTransient
    java.lang.String getFromPeerId() -> getFromPeerId
    void setFromPeerId(java.lang.String) -> setFromPeerId
    boolean isRequestReceipt() -> isRequestReceipt
    void setRequestReceipt(boolean) -> setRequestReceipt
    long getReceiptTimestamp() -> getReceiptTimestamp
    void setReceiptTimestamp(long) -> setReceiptTimestamp
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.avos.avoscloud.AVMessage$1 -> com.avos.avoscloud.AVMessage$1:
    com.avos.avoscloud.AVMessage createFromParcel(android.os.Parcel) -> createFromParcel
    com.avos.avoscloud.AVMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.avos.avoscloud.AVMessageReceiver -> com.avos.avoscloud.AVMessageReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.util.List readPeerIdsMessage(android.content.Context,com.avos.avoscloud.Session,java.lang.String,boolean) -> readPeerIdsMessage
    com.avos.avoscloud.AVMessage readMessageMap(android.content.Context,com.avos.avoscloud.Session,java.lang.String) -> readMessageMap
com.avos.avoscloud.AVMobilePhoneVerifyCallback -> com.avos.avoscloud.AVMobilePhoneVerifyCallback:
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.AVMultiPartEntity -> com.avos.avoscloud.AVMultiPartEntity:
    com.avos.avoscloud.AVMultiPartEntity$ProgressListener listener -> listener
    void writeTo(java.io.OutputStream) -> writeTo
com.avos.avoscloud.AVMultiPartEntity$CountingOutputStream -> com.avos.avoscloud.AVMultiPartEntity$CountingOutputStream:
    com.avos.avoscloud.AVMultiPartEntity$ProgressListener listener -> listener
    long transferred -> transferred
    void write(byte[],int,int) -> write
    void write(int) -> write
com.avos.avoscloud.AVMultiPartEntity$ProgressListener -> com.avos.avoscloud.AVMultiPartEntity$ProgressListener:
    void transferred(long) -> transferred
com.avos.avoscloud.AVOSCloud -> com.avos.avoscloud.AVOSCloud:
    android.content.Context applicationContext -> applicationContext
    java.lang.String applicationId -> applicationId
    java.lang.String clientKey -> clientKey
    android.os.Handler handler -> handler
    int LOG_LEVEL_VERBOSE -> LOG_LEVEL_VERBOSE
    int LOG_LEVEL_DEBUG -> LOG_LEVEL_DEBUG
    int LOG_LEVEL_INFO -> LOG_LEVEL_INFO
    int LOG_LEVEL_WARNING -> LOG_LEVEL_WARNING
    int LOG_LEVEL_ERROR -> LOG_LEVEL_ERROR
    int LOG_LEVEL_NONE -> LOG_LEVEL_NONE
    java.lang.String AV_CLOUD_CACHE_EXPIRE_AUTO_CLEAN_KEY -> AV_CLOUD_CACHE_EXPIRE_AUTO_CLEAN_KEY
    java.lang.String AV_CLOUD_CACHE_EXPIRE_DATE_KEY -> AV_CLOUD_CACHE_EXPIRE_DATE_KEY
    java.lang.Integer AV_CLOUD_CACHE_DEFAULT_EXPIRE_DATE -> AV_CLOUD_CACHE_DEFAULT_EXPIRE_DATE
    java.lang.String AV_CLOUD_CACHE_EXPIRE_KEY_ZONE -> AV_CLOUD_CACHE_EXPIRE_KEY_ZONE
    java.lang.String AV_CLOUD_API_VERSION_KEY_ZONE -> AV_CLOUD_API_VERSION_KEY_ZONE
    java.lang.String AV_CLOUD_API_VERSION_KEY -> AV_CLOUD_API_VERSION_KEY
    int logLevel -> logLevel
    boolean internalDebugLog -> internalDebugLog
    boolean userInternalDebugLog -> userInternalDebugLog
    int DEFAULT_NETWORK_TIMEOUT -> DEFAULT_NETWORK_TIMEOUT
    int DEFAULT_THREAD_POOL_SIZE -> DEFAULT_THREAD_POOL_SIZE
    int networkTimeoutInMills -> networkTimeoutInMills
    int threadPoolSize -> threadPoolSize
    com.avos.avoscloud.AVOSCloud$ServerHostList hostList -> hostList
    java.lang.String URL_HOST_LIST -> URL_HOST_LIST
    com.avos.avoscloud.AVOSCloud$StorageType storageType -> storageType
    void setNetworkTimeout(int) -> setNetworkTimeout
    int getNetworkTimeout() -> getNetworkTimeout
    int getThreadPoolSize() -> getThreadPoolSize
    void setThreadPoolSize(int) -> setThreadPoolSize
    void initialize(android.content.Context,java.lang.String,java.lang.String) -> initialize
    void useAVCloudUS() -> useAVCloudUS
    void useAVCloudCN() -> useAVCloudCN
    int getLogLevel() -> getLogLevel
    void setLogLevel(int) -> setLogLevel
    void showInternalDebugLog(boolean) -> showInternalDebugLog
    boolean showInternalDebugLog() -> showInternalDebugLog
    void setDebugLogEnabled(boolean) -> setDebugLogEnabled
    boolean isDebugLogEnabled() -> isDebugLogEnabled
    com.avos.avoscloud.AVOSCloud$StorageType getStorageType() -> getStorageType
    void setStorageType(com.avos.avoscloud.AVOSCloud$StorageType) -> setStorageType
    boolean isLastModifyEnabled() -> isLastModifyEnabled
    void setLastModifyEnabled(boolean) -> setLastModifyEnabled
    void clearLastModifyCache() -> clearLastModifyCache
    void enableAutoCacheCleaner() -> enableAutoCacheCleaner
    void disableAutoCacheCleaner() -> disableAutoCacheCleaner
    void setCacheFileAutoExpireDate(int) -> setCacheFileAutoExpireDate
    void setBaseUrl(java.lang.String) -> setBaseUrl
    void requestSMSCode(java.lang.String,java.lang.String,java.lang.String,int) -> requestSMSCode
    java.util.Map getSMSCodeEnv(java.lang.String,java.lang.String,int) -> getSMSCodeEnv
    void requestSMSCodeInBackgroud(java.lang.String,java.lang.String,java.lang.String,int,com.avos.avoscloud.RequestMobileCodeCallback) -> requestSMSCodeInBackgroud
    void requestSMSCode(java.lang.String,java.lang.String,java.util.Map) -> requestSMSCode
    void requestSMSCodeInBackgroud(java.lang.String,java.lang.String,java.util.Map,com.avos.avoscloud.RequestMobileCodeCallback) -> requestSMSCodeInBackgroud
    void requestSMSCodeInBackgroud(java.lang.String,java.lang.String,java.util.Map,boolean,com.avos.avoscloud.RequestMobileCodeCallback) -> requestSMSCodeInBackgroud
    void requestSMSCode(java.lang.String) -> requestSMSCode
    void requestSMSCodeInBackgroud(java.lang.String,com.avos.avoscloud.RequestMobileCodeCallback) -> requestSMSCodeInBackgroud
    void verifySMSCode(java.lang.String,java.lang.String) -> verifySMSCode
    void verifySMSCodeInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.AVMobilePhoneVerifyCallback) -> verifySMSCodeInBackground
    void verifySMSCodeInBackgroud(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.AVMobilePhoneVerifyCallback) -> verifySMSCodeInBackgroud
    void onUpgrade(java.lang.String,java.lang.String) -> onUpgrade
    void startAnalytics(android.content.Context) -> startAnalytics
    boolean access$000() -> access$000
com.avos.avoscloud.AVOSCloud$1 -> com.avos.avoscloud.AVOSCloud$1:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVOSCloud$2 -> com.avos.avoscloud.AVOSCloud$2:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVOSCloud$3 -> com.avos.avoscloud.AVOSCloud$3:
    com.avos.avoscloud.RequestMobileCodeCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVOSCloud$4 -> com.avos.avoscloud.AVOSCloud$4:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVOSCloud$5 -> com.avos.avoscloud.AVOSCloud$5:
    com.avos.avoscloud.AVMobilePhoneVerifyCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVOSCloud$6 -> com.avos.avoscloud.AVOSCloud$6:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVOSCloud$ServerHostFetchTask -> com.avos.avoscloud.AVOSCloud$ServerHostFetchTask:
    java.lang.Void doInBackground(com.avos.avoscloud.AVOSCloud$ServerHostList[]) -> doInBackground
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.avos.avoscloud.AVOSCloud$ServerHostFetchTask$1 -> com.avos.avoscloud.AVOSCloud$ServerHostFetchTask$1:
    com.avos.avoscloud.AVOSCloud$ServerHostList val$hostList -> val$hostList
    com.avos.avoscloud.AVOSCloud$ServerHostFetchTask this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVOSCloud$ServerHostList -> com.avos.avoscloud.AVOSCloud$ServerHostList:
    java.util.List hosts -> hosts
    java.util.List ips -> ips
    java.lang.String selectedHost -> selectedHost
    java.util.Random random -> random
    java.lang.String AVOS_SERVER_HOST_ZONE -> AVOS_SERVER_HOST_ZONE
    java.lang.String AVOS_SERVER_HOST_LIST_KEY -> AVOS_SERVER_HOST_LIST_KEY
    java.lang.String AVOS_SELECTED_SERVER_HOST -> AVOS_SELECTED_SERVER_HOST
    java.lang.String AVOS_SERVER_IP_LIST_KEY -> AVOS_SERVER_IP_LIST_KEY
    java.lang.String getSelectedHost() -> getSelectedHost
    void setSelectedHost(java.lang.String) -> setSelectedHost
    void setIPs(java.util.List) -> setIPs
    java.util.List getIPs() -> getIPs
    java.lang.String getRandomIP() -> getRandomIP
    void setHosts(java.util.List) -> setHosts
    java.util.List getHosts() -> getHosts
    void saveToLocal() -> saveToLocal
    com.avos.avoscloud.AVOSCloud$ServerHostList getLocalInstance() -> getLocalInstance
com.avos.avoscloud.AVOSCloud$StorageType -> com.avos.avoscloud.AVOSCloud$StorageType:
    com.avos.avoscloud.AVOSCloud$StorageType StorageTypeQiniu -> StorageTypeQiniu
    com.avos.avoscloud.AVOSCloud$StorageType StorageTypeAV -> StorageTypeAV
    com.avos.avoscloud.AVOSCloud$StorageType StorageTypeS3 -> StorageTypeS3
    com.avos.avoscloud.AVOSCloud$StorageType[] $VALUES -> $VALUES
    com.avos.avoscloud.AVOSCloud$StorageType[] values() -> values
    com.avos.avoscloud.AVOSCloud$StorageType valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.AVOSSSLSocketFactory -> com.avos.avoscloud.AVOSSSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.avos.avoscloud.AVOSSSLSocketFactory$1 -> com.avos.avoscloud.AVOSSSLSocketFactory$1:
    com.avos.avoscloud.AVOSSSLSocketFactory this$0 -> this$0
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.avos.avoscloud.AVOSServices -> com.avos.avoscloud.AVOSServices:
    com.avos.avoscloud.AVOSServices STORAGE_SERVICE -> STORAGE_SERVICE
    com.avos.avoscloud.AVOSServices STATISTICS_SERVICE -> STATISTICS_SERVICE
    com.avos.avoscloud.AVOSServices FUNCTION_SERVICE -> FUNCTION_SERVICE
    java.lang.String service -> service
    com.avos.avoscloud.AVOSServices[] $VALUES -> $VALUES
    com.avos.avoscloud.AVOSServices[] values() -> values
    com.avos.avoscloud.AVOSServices valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.avos.avoscloud.AVObject -> com.avos.avoscloud.AVObject:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String className -> className
    java.lang.String objectId -> objectId
    java.lang.String updatedAt -> updatedAt
    java.lang.String createdAt -> createdAt
    java.lang.String uuid -> uuid
    boolean fetchWhenSave -> fetchWhenSave
    java.util.Map keyValues -> keyValues
    java.util.Set pendingKeys -> pendingKeys
    boolean isDataReady -> isDataReady
    com.avos.avoscloud.AVACL acl -> acl
    boolean running -> running
    com.avos.avoscloud.AVOperationQueue queue -> queue
    java.util.Map SUB_CLASSES_MAP -> SUB_CLASSES_MAP
    java.util.Map SUB_CLASSES_REVERSE_MAP -> SUB_CLASSES_REVERSE_MAP
    java.util.Set INVALID_KEYS -> INVALID_KEYS
    java.lang.ThreadLocal deserializing -> deserializing
    java.lang.String toString() -> toString
    org.json.JSONObject toJSONObject() -> toJSONObject
    java.lang.Object parseObject(java.lang.Object) -> parseObject
    java.util.List getParsedList(java.util.Collection) -> getParsedList
    java.util.Map getParsedMap(java.util.Map) -> getParsedMap
    java.util.Map getKeyValues() -> getKeyValues
    void setKeyValues(java.util.Map) -> setKeyValues
    java.util.Set getPendingKeys() -> getPendingKeys
    void setPendingKeys(java.util.Set) -> setPendingKeys
    boolean isDataReady() -> isDataReady
    void setDataReady(boolean) -> setDataReady
    void setUpdatedAt(java.lang.String) -> setUpdatedAt
    void setCreatedAt(java.lang.String) -> setCreatedAt
    void setUuid(java.lang.String) -> setUuid
    boolean isFetchWhenSave() -> isFetchWhenSave
    void setFetchWhenSave(boolean) -> setFetchWhenSave
    java.lang.String getUuid() -> getUuid
    java.lang.Class getSubClass(java.lang.String) -> getSubClass
    java.lang.String getSubClassName(java.lang.Class) -> getSubClassName
    void registerSubclass(java.lang.Class) -> registerSubclass
    void init() -> init
    void add(java.lang.String,java.lang.Object) -> add
    void addAll(java.lang.String,java.util.Collection) -> addAll
    com.avos.avoscloud.AVQuery getQuery(java.lang.Class) -> getQuery
    void addAllUnique(java.lang.String,java.util.Collection) -> addAllUnique
    void addUnique(java.lang.String,java.lang.Object) -> addUnique
    boolean containsKey(java.lang.String) -> containsKey
    com.avos.avoscloud.AVObject create(java.lang.String) -> create
    com.avos.avoscloud.AVObject createWithoutData(java.lang.String,java.lang.String) -> createWithoutData
    void setClassName(java.lang.String) -> setClassName
    com.avos.avoscloud.AVObject createWithoutData(java.lang.Class,java.lang.String) -> createWithoutData
    void delete() -> delete
    void deleteAll(java.util.Collection) -> deleteAll
    void deleteAllInBackground(java.util.Collection,com.avos.avoscloud.DeleteCallback) -> deleteAllInBackground
    void deleteAll(boolean,boolean,java.util.Collection,com.avos.avoscloud.DeleteCallback) -> deleteAll
    void deleteEventually() -> deleteEventually
    void deleteEventually(com.avos.avoscloud.DeleteCallback) -> deleteEventually
    void deleteInBackground() -> deleteInBackground
    void deleteInBackground(com.avos.avoscloud.DeleteCallback) -> deleteInBackground
    void delete(boolean,boolean,com.avos.avoscloud.DeleteCallback) -> delete
    com.avos.avoscloud.AVObject fetch() -> fetch
    com.avos.avoscloud.AVObject fetch(java.lang.String) -> fetch
    java.util.List fetchAll(java.util.List) -> fetchAll
    java.util.List fetchAllIfNeeded(java.util.List) -> fetchAllIfNeeded
    void fetchAllIfNeededInBackground(java.util.List,com.avos.avoscloud.FindCallback) -> fetchAllIfNeededInBackground
    void fetchAllInBackground(java.util.List,com.avos.avoscloud.FindCallback) -> fetchAllInBackground
    void fetchAllInBackground(boolean,java.util.List,com.avos.avoscloud.GenericObjectCallback) -> fetchAllInBackground
    com.avos.avoscloud.AVObject fetchIfNeeded() -> fetchIfNeeded
    com.avos.avoscloud.AVObject fetchIfNeeded(java.lang.String) -> fetchIfNeeded
    void fetchIfNeededInBackground(com.avos.avoscloud.GetCallback) -> fetchIfNeededInBackground
    void fetchIfNeededInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> fetchIfNeededInBackground
    void fetchInBackground(com.avos.avoscloud.GetCallback) -> fetchInBackground
    void fetchInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> fetchInBackground
    void fetchInBackground(boolean,java.lang.String,com.avos.avoscloud.GetCallback) -> fetchInBackground
    java.lang.Object get(java.lang.String) -> get
    com.avos.avoscloud.AVACL getACL() -> getACL
    boolean getBoolean(java.lang.String) -> getBoolean
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.String getClassName() -> getClassName
    java.util.Date getCreatedAt() -> getCreatedAt
    java.util.Date getDate(java.lang.String) -> getDate
    double getDouble(java.lang.String) -> getDouble
    int getInt(java.lang.String) -> getInt
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    java.util.List getList(java.lang.String) -> getList
    java.util.List getList(java.lang.String,java.lang.Class) -> getList
    long getLong(java.lang.String) -> getLong
    java.util.Map getMap(java.lang.String) -> getMap
    java.lang.Number getNumber(java.lang.String) -> getNumber
    java.lang.String getObjectId() -> getObjectId
    com.avos.avoscloud.AVFile getAVFile(java.lang.String) -> getAVFile
    com.avos.avoscloud.AVGeoPoint getAVGeoPoint(java.lang.String) -> getAVGeoPoint
    com.avos.avoscloud.AVObject getAVObject(java.lang.String) -> getAVObject
    com.avos.avoscloud.AVObject getAVObject(java.lang.String,java.lang.Class) -> getAVObject
    com.avos.avoscloud.AVUser getAVUser(java.lang.String) -> getAVUser
    com.avos.avoscloud.AVUser getAVUser(java.lang.String,java.lang.Class) -> getAVUser
    com.avos.avoscloud.AVRelation getRelation(java.lang.String) -> getRelation
    java.lang.String getString(java.lang.String) -> getString
    java.util.Date getUpdatedAt() -> getUpdatedAt
    boolean has(java.lang.String) -> has
    boolean hasSameId(com.avos.avoscloud.AVObject) -> hasSameId
    void increment(java.lang.String) -> increment
    void increment(java.lang.String,java.lang.Number) -> increment
    boolean isDataAvailable() -> isDataAvailable
    java.util.Set keySet() -> keySet
    boolean checkKey(java.lang.String) -> checkKey
    void beginDeserialize() -> beginDeserialize
    void endDeserialize() -> endDeserialize
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,java.lang.Object,boolean) -> put
    void refresh() -> refresh
    void refresh(java.lang.String) -> refresh
    void refreshInBackground(com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void refreshInBackground(java.lang.String,com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void refreshInBackground(boolean,java.lang.String,com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void remove(java.lang.String) -> remove
    void removeAll(java.lang.String,java.util.Collection) -> removeAll
    void save() -> save
    void saveAll(java.util.List) -> saveAll
    void saveAllInBackground(java.util.List) -> saveAllInBackground
    void saveAllInBackground(java.util.List,com.avos.avoscloud.SaveCallback) -> saveAllInBackground
    void _saveAll(boolean,java.util.List,com.avos.avoscloud.SaveCallback) -> _saveAll
    void saveEventually() -> saveEventually
    void saveEventually(com.avos.avoscloud.SaveCallback) -> saveEventually
    void onSaveSuccess() -> onSaveSuccess
    void onDataSynchronized() -> onDataSynchronized
    void onSaveFailure() -> onSaveFailure
    java.util.Map headerMap() -> headerMap
    void saveObject(boolean,boolean,com.avos.avoscloud.SaveCallback) -> saveObject
    void _saveObject(java.util.List,boolean,boolean,com.avos.avoscloud.SaveCallback) -> _saveObject
    void saveObjectToAVOSCloud(boolean,boolean,com.avos.avoscloud.SaveCallback) -> saveObjectToAVOSCloud
    com.avos.avoscloud.AVException copyFromJsonArray(java.lang.String) -> copyFromJsonArray
    void copyFromJson(java.lang.String) -> copyFromJson
    void copyFromMap(java.util.Map) -> copyFromMap
    boolean alwaysUsePost() -> alwaysUsePost
    java.util.List batchRequestFromPendingKeys() -> batchRequestFromPendingKeys
    java.lang.String internalId() -> internalId
    boolean alwaysSaveAllKeyValues() -> alwaysSaveAllKeyValues
    java.util.Map batchRequestFromKeyValues() -> batchRequestFromKeyValues
    java.util.Map getBatchParams() -> getBatchParams
    java.util.List addBatchSaveRequest(java.util.LinkedList,boolean) -> addBatchSaveRequest
    void addPendingBatchRequest(java.util.LinkedList) -> addPendingBatchRequest
    boolean checkCircleReference() -> checkCircleReference
    boolean checkCircleReference(java.util.Map) -> checkCircleReference
    void saveInBackground() -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback) -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback,boolean) -> saveInBackground
    void setACL(com.avos.avoscloud.AVACL) -> setACL
    void setObjectId(java.lang.String) -> setObjectId
    java.util.List findArray(java.util.Map,java.lang.String,boolean) -> findArray
    java.lang.String internalClassName() -> internalClassName
    boolean shouldThrowException(java.lang.Throwable,java.lang.String) -> shouldThrowException
    void addRelationFromServer(java.lang.String,java.lang.String,boolean) -> addRelationFromServer
    void addRelation(com.avos.avoscloud.AVObject,java.lang.String,boolean) -> addRelation
    void removeRelation(com.avos.avoscloud.AVObject,java.lang.String,boolean) -> removeRelation
    void addObjectToArray(java.lang.String,java.lang.Object,boolean) -> addObjectToArray
    void removeObjectForKey(java.lang.String) -> removeObjectForKey
    void saveFileBeforeSave(java.util.List,boolean,java.util.List,com.avos.avoscloud.SaveCallback) -> saveFileBeforeSave
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean access$002(com.avos.avoscloud.AVObject,boolean) -> access$002
    void access$300(com.avos.avoscloud.AVObject,java.util.LinkedList) -> access$300
    void access$400(com.avos.avoscloud.AVObject,boolean,boolean,com.avos.avoscloud.SaveCallback) -> access$400
    boolean access$502(com.avos.avoscloud.AVObject,boolean) -> access$502
    void access$600(com.avos.avoscloud.AVObject,boolean,boolean,com.avos.avoscloud.SaveCallback) -> access$600
com.avos.avoscloud.AVObject$1 -> com.avos.avoscloud.AVObject$1:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$10 -> com.avos.avoscloud.AVObject$10:
    java.lang.String val$key -> val$key
    java.lang.Number val$amount -> val$amount
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Number initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$11 -> com.avos.avoscloud.AVObject$11:
    java.lang.Boolean initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.avos.avoscloud.AVObject$12 -> com.avos.avoscloud.AVObject$12:
    java.lang.String val$key -> val$key
    java.lang.Object val$value -> val$value
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$13 -> com.avos.avoscloud.AVObject$13:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$14 -> com.avos.avoscloud.AVObject$14:
    java.lang.String val$key -> val$key
    java.util.Collection val$values -> val$values
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.List initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$15 -> com.avos.avoscloud.AVObject$15:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$16 -> com.avos.avoscloud.AVObject$16:
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$17 -> com.avos.avoscloud.AVObject$17:
    java.util.List val$objects -> val$objects
    boolean val$sync -> val$sync
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$17$1 -> com.avos.avoscloud.AVObject$17$1:
    com.avos.avoscloud.AVObject$17 this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$18 -> com.avos.avoscloud.AVObject$18:
    java.util.LinkedList val$list -> val$list
    boolean val$sync -> val$sync
    com.avos.avoscloud.GenericObjectCallback val$genericObjectCallback -> val$genericObjectCallback
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVObject$19 -> com.avos.avoscloud.AVObject$19:
    boolean val$sync -> val$sync
    boolean val$isEventually -> val$isEventually
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVObject$2 -> com.avos.avoscloud.AVObject$2:
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$20 -> com.avos.avoscloud.AVObject$20:
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    boolean val$sync -> val$sync
    boolean val$isEventually -> val$isEventually
    com.avos.avoscloud.AVObject this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$21 -> com.avos.avoscloud.AVObject$21:
    java.lang.String val$key -> val$key
    java.lang.String val$className -> val$className
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Set initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$22 -> com.avos.avoscloud.AVObject$22:
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject val$object -> val$object
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Set initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$23 -> com.avos.avoscloud.AVObject$23:
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject val$object -> val$object
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Set initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$24 -> com.avos.avoscloud.AVObject$24:
    java.lang.Object val$value -> val$value
    boolean val$unique -> val$unique
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.util.Collection initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$25 -> com.avos.avoscloud.AVObject$25:
    java.lang.String val$key -> val$key
    com.avos.avoscloud.AVObject this$0 -> this$0
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Void initValue() -> initValue
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObject$26 -> com.avos.avoscloud.AVObject$26:
    java.util.concurrent.atomic.AtomicBoolean val$failureLock -> val$failureLock
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    java.util.concurrent.atomic.AtomicInteger val$lock -> val$lock
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVObject$3 -> com.avos.avoscloud.AVObject$3:
    com.avos.avoscloud.DeleteCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$4 -> com.avos.avoscloud.AVObject$4:
    com.avos.avoscloud.DeleteCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVObject this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$5 -> com.avos.avoscloud.AVObject$5:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$6 -> com.avos.avoscloud.AVObject$6:
    java.util.List val$result -> val$result
    com.avos.avoscloud.FindCallback val$internalCallback -> val$internalCallback
    void onGroupRequestFinished(int,int,com.avos.avoscloud.AVObject) -> onGroupRequestFinished
com.avos.avoscloud.AVObject$7 -> com.avos.avoscloud.AVObject$7:
    java.util.List val$result -> val$result
    com.avos.avoscloud.FindCallback val$callback -> val$callback
    void onGroupRequestFinished(int,int,com.avos.avoscloud.AVObject) -> onGroupRequestFinished
com.avos.avoscloud.AVObject$8 -> com.avos.avoscloud.AVObject$8:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.util.concurrent.atomic.AtomicInteger val$counter -> val$counter
    int val$total -> val$total
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVObject$9 -> com.avos.avoscloud.AVObject$9:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVObject$FetchObjectCallback -> com.avos.avoscloud.AVObject$FetchObjectCallback:
    com.avos.avoscloud.AVCallback internalCallback -> internalCallback
    com.avos.avoscloud.AVObject this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVObject$KeyValueCallback -> com.avos.avoscloud.AVObject$KeyValueCallback:
    com.avos.avoscloud.AVObject this$0 -> this$0
    void execute(java.lang.String) -> execute
    void execute(java.lang.String,boolean) -> execute
    com.avos.avoscloud.ops.AVOp createOp() -> createOp
    void applyOp(com.avos.avoscloud.AVKeyValues) -> applyOp
    java.lang.Object initValue() -> initValue
com.avos.avoscloud.AVObjectReferenceCount -> com.avos.avoscloud.AVObjectReferenceCount:
    com.avos.avoscloud.AVObject value -> value
    java.util.concurrent.atomic.AtomicInteger count -> count
    int increment() -> increment
    int desc() -> desc
    int getCount() -> getCount
    com.avos.avoscloud.AVObject getValue() -> getValue
com.avos.avoscloud.AVOnlineConfigureListener -> com.avos.avoscloud.AVOnlineConfigureListener:
    void onDataReceived(org.json.JSONObject) -> onDataReceived
com.avos.avoscloud.AVOperation -> com.avos.avoscloud.AVOperation:
    com.avos.avoscloud.AVOperationType type -> type
    java.util.List batchRequest -> batchRequest
    com.avos.avoscloud.SaveCallback callback -> callback
    int sequence -> sequence
    boolean last -> last
    void setLast(boolean) -> setLast
    boolean getLast() -> getLast
    java.util.List getBatchRequest() -> getBatchRequest
    boolean isSnapshotRequest() -> isSnapshotRequest
    boolean isPendingRequest() -> isPendingRequest
    void setCallback(com.avos.avoscloud.SaveCallback) -> setCallback
    com.avos.avoscloud.SaveCallback getCallback() -> getCallback
    void setSequence(int) -> setSequence
    int getSequence() -> getSequence
    void invokeCallback(com.avos.avoscloud.AVException) -> invokeCallback
    com.avos.avoscloud.AVOperation snapshotOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> snapshotOperation
    com.avos.avoscloud.AVOperation cloneOperation(java.util.List,com.avos.avoscloud.SaveCallback,com.avos.avoscloud.AVOperationType) -> cloneOperation
    com.avos.avoscloud.AVOperation pendingOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> pendingOperation
com.avos.avoscloud.AVOperationQueue -> com.avos.avoscloud.AVOperationQueue:
    java.util.concurrent.ConcurrentLinkedQueue queue -> queue
    int currentSequence -> currentSequence
    void increaseSequence() -> increaseSequence
    com.avos.avoscloud.AVOperation addSnapshotOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> addSnapshotOperation
    com.avos.avoscloud.AVOperation addPendingOperation(java.util.List,com.avos.avoscloud.SaveCallback) -> addPendingOperation
    com.avos.avoscloud.AVOperation popHead() -> popHead
    boolean noPendingRequest() -> noPendingRequest
    void clearOperationWithSequence(int) -> clearOperationWithSequence
com.avos.avoscloud.AVOperationType -> com.avos.avoscloud.AVOperationType:
    com.avos.avoscloud.AVOperationType kAVOperationSnapshot -> kAVOperationSnapshot
    com.avos.avoscloud.AVOperationType kAVOperationPendingOperation -> kAVOperationPendingOperation
    com.avos.avoscloud.AVOperationType[] $VALUES -> $VALUES
    com.avos.avoscloud.AVOperationType[] values() -> values
    com.avos.avoscloud.AVOperationType valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.AVPersistenceUtils -> com.avos.avoscloud.AVPersistenceUtils:
    com.avos.avoscloud.AVPersistenceUtils instance -> instance
    java.util.concurrent.ConcurrentHashMap fileLocks -> fileLocks
    java.util.concurrent.locks.ReentrantReadWriteLock getLock(java.lang.String) -> getLock
    void removeLock(java.lang.String) -> removeLock
    com.avos.avoscloud.AVPersistenceUtils sharedInstance() -> sharedInstance
    java.io.File getPaasDocumentDir() -> getPaasDocumentDir
    java.io.File getCacheDir() -> getCacheDir
    java.io.File getCommandCacheDir() -> getCommandCacheDir
    java.io.File getAnalysisCacheDir() -> getAnalysisCacheDir
    void closeQuietly(java.io.Closeable) -> closeQuietly
    java.io.File getFile(java.lang.String,java.lang.String) -> getFile
    void saveToDocumentDir(java.lang.String,java.lang.String) -> saveToDocumentDir
    void saveToDocumentDir(java.lang.String,java.lang.String,java.lang.String) -> saveToDocumentDir
    boolean saveContentToFile(java.lang.String,java.io.File) -> saveContentToFile
    boolean saveContentToFile(byte[],java.io.File) -> saveContentToFile
    java.lang.String getFromDocumentDir(java.lang.String,java.lang.String) -> getFromDocumentDir
    java.lang.String getFromDocumentDir(java.lang.String) -> getFromDocumentDir
    java.lang.String readContentFromFile(java.io.File) -> readContentFromFile
    byte[] readContentBytesFromFile(java.io.File) -> readContentBytesFromFile
    void savePersistentSettingBoolean(java.lang.String,java.lang.String,java.lang.Boolean) -> savePersistentSettingBoolean
    boolean getPersistentSettingBoolean(java.lang.String,java.lang.String) -> getPersistentSettingBoolean
    boolean getPersistentSettingBoolean(java.lang.String,java.lang.String,java.lang.Boolean) -> getPersistentSettingBoolean
    void savePersistentSettingInteger(java.lang.String,java.lang.String,java.lang.Integer) -> savePersistentSettingInteger
    java.lang.Integer getPersistentSettingInteger(java.lang.String,java.lang.String,java.lang.Integer) -> getPersistentSettingInteger
    void savePersistentSettingString(java.lang.String,java.lang.String,java.lang.String) -> savePersistentSettingString
    java.lang.String getPersistentSettingString(java.lang.String,java.lang.String,java.lang.String) -> getPersistentSettingString
    void removePersistentSettingString(java.lang.String,java.lang.String) -> removePersistentSettingString
    java.lang.String removePersistentSettingString(java.lang.String,java.lang.String,java.lang.String) -> removePersistentSettingString
    void removeKeyZonePersistentSettings(java.lang.String) -> removeKeyZonePersistentSettings
com.avos.avoscloud.AVPowerfulUtils -> com.avos.avoscloud.AVPowerfulUtils:
    java.util.Map powerfulTable -> powerfulTable
    java.lang.String ENDPOINT -> ENDPOINT
    java.lang.String PARSE_CLASSNAME -> PARSE_CLASSNAME
    void createSettings(java.lang.String,java.lang.String,java.lang.String) -> createSettings
    void createTable() -> createTable
    java.lang.String get(java.lang.String,java.lang.String) -> get
    java.lang.String getAVClassEndpoint(java.lang.String,java.lang.String,java.lang.String) -> getAVClassEndpoint
    java.lang.String getAVUserEndpoint(com.avos.avoscloud.AVUser) -> getAVUserEndpoint
    java.lang.String getAVRoleEndpoint(com.avos.avoscloud.AVRole) -> getAVRoleEndpoint
    java.lang.String getEndpoint(java.lang.String) -> getEndpoint
    java.lang.String getEndpoint(java.lang.Object) -> getEndpoint
    java.lang.String getEndpoint(java.lang.Object,boolean) -> getEndpoint
    java.lang.String getBatchEndpoint(java.lang.String,com.avos.avoscloud.AVObject) -> getBatchEndpoint
    java.lang.String getBatchEndpoint(java.lang.String,com.avos.avoscloud.AVObject,boolean) -> getBatchEndpoint
    java.lang.String getEndpointByAVClassName(java.lang.String,java.lang.String) -> getEndpointByAVClassName
    java.lang.String getAVClassName(java.lang.String) -> getAVClassName
    java.lang.String getFollowEndPoint(java.lang.String,java.lang.String) -> getFollowEndPoint
    java.lang.String getFollowersEndPoint(java.lang.String) -> getFollowersEndPoint
    java.lang.String getFolloweesEndPoint(java.lang.String) -> getFolloweesEndPoint
    java.lang.String getFollowersAndFollowees(java.lang.String) -> getFollowersAndFollowees
    java.lang.String getInternalIdFromRequestBody(java.util.Map) -> getInternalIdFromRequestBody
com.avos.avoscloud.AVPush -> com.avos.avoscloud.AVPush:
    java.lang.String deviceTypeTag -> deviceTypeTag
    java.util.Set DEVICE_TYPES -> DEVICE_TYPES
    java.util.Set channelSet -> channelSet
    com.avos.avoscloud.AVQuery pushQuery -> pushQuery
    java.lang.String cql -> cql
    long expirationTime -> expirationTime
    long expirationTimeInterval -> expirationTimeInterval
    java.util.Set pushTarget -> pushTarget
    java.util.Map pushData -> pushData
    com.avos.avoscloud.AVObject notification -> notification
    java.util.Date pushDate -> pushDate
    boolean production -> production
    java.util.Set getChannelSet() -> getChannelSet
    com.avos.avoscloud.AVObject getNotification() -> getNotification
    com.avos.avoscloud.AVQuery getPushQuery() -> getPushQuery
    java.util.Date getPushDate() -> getPushDate
    long getExpirationTime() -> getExpirationTime
    long getExpirationTimeInterval() -> getExpirationTimeInterval
    java.util.Set getPushTarget() -> getPushTarget
    java.util.Map getPushData() -> getPushData
    void clearExpiration() -> clearExpiration
    void send() -> send
    void sendDataInBackground(org.json.JSONObject,com.avos.avoscloud.AVQuery) -> sendDataInBackground
    void sendDataInBackground(org.json.JSONObject,com.avos.avoscloud.AVQuery,com.avos.avoscloud.SendCallback) -> sendDataInBackground
    void sendInBackground() -> sendInBackground
    void sendInBackground(com.avos.avoscloud.SendCallback) -> sendInBackground
    java.util.Map pushChannelsData() -> pushChannelsData
    java.util.Map postDataMap() -> postDataMap
    void sendInBackground(boolean,com.avos.avoscloud.SendCallback) -> sendInBackground
    void sendMessageInBackground(java.lang.String,com.avos.avoscloud.AVQuery) -> sendMessageInBackground
    void sendMessageInBackground(java.lang.String,com.avos.avoscloud.AVQuery,com.avos.avoscloud.SendCallback) -> sendMessageInBackground
    void setChannel(java.lang.String) -> setChannel
    void setChannels(java.util.Collection) -> setChannels
    void setData(java.util.Map) -> setData
    void setData(org.json.JSONObject) -> setData
    java.util.Date expirationDateTime() -> expirationDateTime
    void setPushDate(java.util.Date) -> setPushDate
    void setExpirationTime(long) -> setExpirationTime
    void setExpirationTimeInterval(long) -> setExpirationTimeInterval
    void setMessage(java.lang.String) -> setMessage
    void setPushToAndroid(boolean) -> setPushToAndroid
    void setPushToIOS(boolean) -> setPushToIOS
    void setPushToWindowsPhone(boolean) -> setPushToWindowsPhone
    void setQuery(com.avos.avoscloud.AVQuery) -> setQuery
    void setCloudQuery(java.lang.String) -> setCloudQuery
    boolean getProductionMode() -> getProductionMode
    void setProductionMode(boolean) -> setProductionMode
    com.avos.avoscloud.AVObject access$002(com.avos.avoscloud.AVPush,com.avos.avoscloud.AVObject) -> access$002
    com.avos.avoscloud.AVObject access$000(com.avos.avoscloud.AVPush) -> access$000
com.avos.avoscloud.AVPush$1 -> com.avos.avoscloud.AVPush$1:
    com.avos.avoscloud.SendCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVPush this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVPushConnectionManager -> com.avos.avoscloud.AVPushConnectionManager:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String PUSH_INTENT_KEY -> PUSH_INTENT_KEY
    java.util.Random random -> random
    long THREE_MINUTES -> THREE_MINUTES
    com.avos.avoscloud.AVPushConnectionManager instance -> instance
    android.content.Context ctx -> ctx
    com.avos.avospush.push.AVPushServiceAppManager pushServiceAppManager -> pushServiceAppManager
    com.avos.avoscloud.AVPushConnectionManager$AVPushWebSocketClient socketClient -> socketClient
    android.content.Intent pingAlarmIntent -> pingAlarmIntent
    android.app.PendingIntent pingAlarmPendingIntent -> pingAlarmPendingIntent
    com.avos.avoscloud.AVPushConnectionManager$PingAlarmReceiver pingAlarmReceiver -> pingAlarmReceiver
    java.lang.String PUSH_MESSAGE_DEPOT -> PUSH_MESSAGE_DEPOT
    com.avos.avospush.session.StaleMessageDepot depot -> depot
    java.util.Map peerIdEnabledSessions -> peerIdEnabledSessions
    long lastPongTimestamps -> lastPongTimestamps
    com.avos.avoscloud.AVPushConnectionManager$ConnectionListener connectionInitListener -> connectionInitListener
    com.avos.avoscloud.PushConnectionRetryController retryController -> retryController
    void initSessionsIfExists() -> initSessionsIfExists
    com.avos.avoscloud.AVPushConnectionManager getInstance(android.content.Context,com.avos.avospush.push.AVPushServiceAppManager,java.lang.String,java.lang.String) -> getInstance
    void initConnection() -> initConnection
    void initConnection(com.avos.avoscloud.AVPushConnectionManager$ConnectionListener) -> initConnection
    boolean isConnectedToPushServer() -> isConnectedToPushServer
    void stop() -> stop
    com.avos.avoscloud.AVSession getOrCreateSession(java.lang.String) -> getOrCreateSession
    void removeSession(java.lang.String) -> removeSession
    void sendData(com.avos.avospush.session.CommandPacket) -> sendData
    void cleanupSocketConnection() -> cleanupSocketConnection
    void createNewWebSocket(java.lang.String,java.lang.String,java.lang.String) -> createNewWebSocket
    java.lang.String getText(java.lang.String) -> getText
    java.lang.String getApplicationName() -> getApplicationName
    java.lang.String getTitle(java.lang.String) -> getTitle
    java.lang.String getSound(java.lang.String) -> getSound
    java.lang.String getValue(java.lang.String,java.lang.String) -> getValue
    void sendNotification(java.lang.String,java.lang.String) -> sendNotification
    android.content.Intent buildUpdateIntent(java.lang.String,java.lang.String,java.lang.String) -> buildUpdateIntent
    void sendBroadcast(java.lang.String,java.lang.String,java.lang.String) -> sendBroadcast
    void sendSessionBroadCast(java.lang.String,java.lang.String,java.io.Serializable,int) -> sendSessionBroadCast
    void sendLocalBroadCast(java.lang.String,java.lang.String,int,com.avos.avoscloud.im.v2.Conversation$AVIMOperation) -> sendLocalBroadCast
    void sendLocalBroadCast(java.lang.String,java.lang.String,int,java.io.Serializable,com.avos.avoscloud.im.v2.Conversation$AVIMOperation) -> sendLocalBroadCast
    void sendLocalBroadCast(java.lang.String,java.lang.String,int,android.os.Bundle,com.avos.avoscloud.im.v2.Conversation$AVIMOperation) -> sendLocalBroadCast
    java.lang.String getChannel(java.lang.String) -> getChannel
    java.lang.String getAction(java.lang.String) -> getAction
    java.lang.String getJSONValue(java.lang.String,java.lang.String) -> getJSONValue
    java.util.Date getExpiration(java.lang.String) -> getExpiration
    void processMessage(java.lang.String,java.lang.String,java.lang.String) -> processMessage
    void initAlarmReciever() -> initAlarmReciever
    void hookPingReceiver() -> hookPingReceiver
    void sendPing() -> sendPing
    void forceTriggerReconnection() -> forceTriggerReconnection
    void access$000(com.avos.avoscloud.AVPushConnectionManager,java.lang.String,java.lang.String,java.lang.String) -> access$000
    java.util.Map access$100() -> access$100
    com.avos.avoscloud.PushConnectionRetryController access$200(com.avos.avoscloud.AVPushConnectionManager) -> access$200
    void access$300(com.avos.avoscloud.AVPushConnectionManager,java.lang.String,java.lang.String,java.lang.String) -> access$300
    long access$402(com.avos.avoscloud.AVPushConnectionManager,long) -> access$402
    void access$500(com.avos.avoscloud.AVPushConnectionManager) -> access$500
com.avos.avoscloud.AVPushConnectionManager$1 -> com.avos.avoscloud.AVPushConnectionManager$1:
    java.lang.String val$appId -> val$appId
    java.lang.String val$installationId -> val$installationId
    com.avos.avoscloud.AVPushConnectionManager this$0 -> this$0
    void onResponse(int,java.lang.String) -> onResponse
com.avos.avoscloud.AVPushConnectionManager$AVPushWebSocketClient -> com.avos.avoscloud.AVPushConnectionManager$AVPushWebSocketClient:
    java.lang.String appId -> appId
    java.lang.String installationId -> installationId
    com.avos.avoscloud.AVPushConnectionManager this$0 -> this$0
    void setAppId(java.lang.String) -> setAppId
    void setInstallationId(java.lang.String) -> setInstallationId
    void send(com.avos.avospush.session.CommandPacket) -> send
    void onOpen(org.java_websocket.handshake.ServerHandshake) -> onOpen
    void onMessage(java.lang.String) -> onMessage
    void onClose(int,java.lang.String,boolean) -> onClose
    void onError(java.lang.Exception) -> onError
    void onWebsocketPong(org.java_websocket.WebSocket,org.java_websocket.framing.Framedata) -> onWebsocketPong
com.avos.avoscloud.AVPushConnectionManager$ConnectionListener -> com.avos.avoscloud.AVPushConnectionManager$ConnectionListener:
    void onConnected() -> onConnected
com.avos.avoscloud.AVPushConnectionManager$PingAlarmReceiver -> com.avos.avoscloud.AVPushConnectionManager$PingAlarmReceiver:
    com.avos.avoscloud.AVPushConnectionManager this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.avos.avoscloud.AVQuery -> com.avos.avoscloud.AVQuery:
    java.lang.String TAG -> TAG
    java.lang.Class clazz -> clazz
    java.lang.String className -> className
    java.util.Map where -> where
    java.util.List include -> include
    java.util.Set selectedKeys -> selectedKeys
    int limit -> limit
    boolean trace -> trace
    int skip -> skip
    java.lang.String order -> order
    java.lang.Boolean isRunning -> isRunning
    com.avos.avoscloud.AVQuery$CachePolicy cachePolicy -> cachePolicy
    long maxCacheAge -> maxCacheAge
    java.util.Map parameters -> parameters
    java.lang.String queryPath -> queryPath
    java.lang.String externalQueryPath -> externalQueryPath
    java.lang.String CLOUD_QUERY_PATH -> CLOUD_QUERY_PATH
    java.lang.Class getClazz() -> getClazz
    void setClazz(java.lang.Class) -> setClazz
    java.util.List getInclude() -> getInclude
    void setInclude(java.util.List) -> setInclude
    java.util.Set getSelectedKeys() -> getSelectedKeys
    void setSelectedKeys(java.util.Set) -> setSelectedKeys
    java.lang.Boolean getIsRunning() -> getIsRunning
    void setIsRunning(java.lang.Boolean) -> setIsRunning
    java.util.Map getParameters() -> getParameters
    void setParameters(java.util.Map) -> setParameters
    java.lang.String getQueryPath() -> getQueryPath
    void setQueryPath(java.lang.String) -> setQueryPath
    java.lang.String getExternalQueryPath() -> getExternalQueryPath
    void setExternalQueryPath(java.lang.String) -> setExternalQueryPath
    java.lang.String getTag() -> getTag
    java.util.Map getWhere() -> getWhere
    java.lang.String getClassName() -> getClassName
    com.avos.avoscloud.AVQuery setClassName(java.lang.String) -> setClassName
    int getLimit() -> getLimit
    com.avos.avoscloud.AVQuery setLimit(int) -> setLimit
    com.avos.avoscloud.AVQuery limit(int) -> limit
    com.avos.avoscloud.AVQuery skip(int) -> skip
    void generateQueryPath() -> generateQueryPath
    int getSkip() -> getSkip
    com.avos.avoscloud.AVQuery setSkip(int) -> setSkip
    java.lang.String getOrder() -> getOrder
    com.avos.avoscloud.AVQuery setOrder(java.lang.String) -> setOrder
    com.avos.avoscloud.AVQuery order(java.lang.String) -> order
    com.avos.avoscloud.AVQuery$CachePolicy getCachePolicy() -> getCachePolicy
    com.avos.avoscloud.AVQuery setCachePolicy(com.avos.avoscloud.AVQuery$CachePolicy) -> setCachePolicy
    com.avos.avoscloud.AVQuery$CachePolicy getPolicy() -> getPolicy
    com.avos.avoscloud.AVQuery setPolicy(com.avos.avoscloud.AVQuery$CachePolicy) -> setPolicy
    long getMaxCacheAge() -> getMaxCacheAge
    com.avos.avoscloud.AVQuery setMaxCacheAge(long) -> setMaxCacheAge
    boolean isTrace() -> isTrace
    com.avos.avoscloud.AVQuery setTrace(boolean) -> setTrace
    com.avos.avoscloud.AVQuery getQuery(java.lang.String) -> getQuery
    com.avos.avoscloud.AVQuery getQuery(java.lang.Class) -> getQuery
    com.avos.avoscloud.AVQuery addAscendingOrder(java.lang.String) -> addAscendingOrder
    com.avos.avoscloud.AVQuery addDescendingOrder(java.lang.String) -> addDescendingOrder
    void cancel() -> cancel
    void clearAllCachedResults() -> clearAllCachedResults
    void clearCachedResult() -> clearCachedResult
    int count() -> count
    int count(boolean) -> count
    void countInBackground(com.avos.avoscloud.CountCallback) -> countInBackground
    void countInBackground(boolean,com.avos.avoscloud.CountCallback) -> countInBackground
    java.util.List find() -> find
    java.lang.String queryPath() -> queryPath
    java.util.Map whereMap() -> whereMap
    java.util.Map assembleParameters() -> assembleParameters
    java.util.List processResults(java.lang.String) -> processResults
    void processAdditionalInfo(java.lang.String,com.avos.avoscloud.FindCallback) -> processAdditionalInfo
    void findInBackground(com.avos.avoscloud.FindCallback) -> findInBackground
    com.avos.avoscloud.AVObject get(java.lang.String) -> get
    com.avos.avoscloud.AVObject getFirst() -> getFirst
    void getFirstInBackground(com.avos.avoscloud.GetCallback) -> getFirstInBackground
    void getFirstInBackground(boolean,com.avos.avoscloud.GetCallback) -> getFirstInBackground
    void getInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> getInBackground
    void getInBackground(java.lang.String,boolean,com.avos.avoscloud.GetCallback) -> getInBackground
    com.avos.avoscloud.AVQuery getUserQuery() -> getUserQuery
    boolean hasCachedResult() -> hasCachedResult
    com.avos.avoscloud.AVQuery include(java.lang.String) -> include
    com.avos.avoscloud.AVQuery selectKeys(java.util.Collection) -> selectKeys
    void deleteAll() -> deleteAll
    void deleteAllInBackground(com.avos.avoscloud.DeleteCallback) -> deleteAllInBackground
    com.avos.avoscloud.AVQuery or(java.util.List) -> or
    com.avos.avoscloud.AVQuery orderByAscending(java.lang.String) -> orderByAscending
    com.avos.avoscloud.AVQuery orderByDescending(java.lang.String) -> orderByDescending
    com.avos.avoscloud.AVQuery whereContainedIn(java.lang.String,java.util.Collection) -> whereContainedIn
    com.avos.avoscloud.AVQuery whereContains(java.lang.String,java.lang.String) -> whereContains
    com.avos.avoscloud.AVQuery whereSizeEqual(java.lang.String,int) -> whereSizeEqual
    com.avos.avoscloud.AVQuery whereContainsAll(java.lang.String,java.util.Collection) -> whereContainsAll
    com.avos.avoscloud.AVQuery whereDoesNotExist(java.lang.String) -> whereDoesNotExist
    com.avos.avoscloud.AVQuery whereDoesNotMatchKeyInQuery(java.lang.String,java.lang.String,com.avos.avoscloud.AVQuery) -> whereDoesNotMatchKeyInQuery
    com.avos.avoscloud.AVQuery whereDoesNotMatchQuery(java.lang.String,com.avos.avoscloud.AVQuery) -> whereDoesNotMatchQuery
    com.avos.avoscloud.AVQuery whereEndsWith(java.lang.String,java.lang.String) -> whereEndsWith
    com.avos.avoscloud.AVQuery whereEqualTo(java.lang.String,java.lang.Object) -> whereEqualTo
    com.avos.avoscloud.AVQuery addWhereItem(com.avos.avoscloud.QueryOperation) -> addWhereItem
    com.avos.avoscloud.AVQuery addOrItems(com.avos.avoscloud.QueryOperation) -> addOrItems
    void removeDuplications(com.avos.avoscloud.QueryOperation,java.util.List) -> removeDuplications
    com.avos.avoscloud.AVQuery addWhereItem(java.lang.String,java.lang.String,java.lang.Object) -> addWhereItem
    com.avos.avoscloud.AVQuery whereExists(java.lang.String) -> whereExists
    com.avos.avoscloud.AVQuery whereGreaterThan(java.lang.String,java.lang.Object) -> whereGreaterThan
    com.avos.avoscloud.AVQuery whereGreaterThanOrEqualTo(java.lang.String,java.lang.Object) -> whereGreaterThanOrEqualTo
    com.avos.avoscloud.AVQuery whereLessThan(java.lang.String,java.lang.Object) -> whereLessThan
    com.avos.avoscloud.AVQuery whereLessThanOrEqualTo(java.lang.String,java.lang.Object) -> whereLessThanOrEqualTo
    com.avos.avoscloud.AVQuery whereMatches(java.lang.String,java.lang.String) -> whereMatches
    com.avos.avoscloud.AVQuery whereMatches(java.lang.String,java.lang.String,java.lang.String) -> whereMatches
    com.avos.avoscloud.AVQuery whereMatchesKeyInQuery(java.lang.String,java.lang.String,com.avos.avoscloud.AVQuery) -> whereMatchesKeyInQuery
    com.avos.avoscloud.AVQuery whereMatchesQuery(java.lang.String,com.avos.avoscloud.AVQuery) -> whereMatchesQuery
    com.avos.avoscloud.AVQuery whereNear(java.lang.String,com.avos.avoscloud.AVGeoPoint) -> whereNear
    com.avos.avoscloud.AVQuery whereNotContainedIn(java.lang.String,java.util.Collection) -> whereNotContainedIn
    com.avos.avoscloud.AVQuery whereNotEqualTo(java.lang.String,java.lang.Object) -> whereNotEqualTo
    com.avos.avoscloud.AVQuery whereStartsWith(java.lang.String,java.lang.String) -> whereStartsWith
    com.avos.avoscloud.AVQuery whereWithinGeoBox(java.lang.String,com.avos.avoscloud.AVGeoPoint,com.avos.avoscloud.AVGeoPoint) -> whereWithinGeoBox
    com.avos.avoscloud.AVQuery whereWithinKilometers(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinKilometers
    com.avos.avoscloud.AVQuery whereWithinMiles(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinMiles
    com.avos.avoscloud.AVQuery whereWithinRadians(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinRadians
    com.avos.avoscloud.AVQuery setWhere(java.util.Map) -> setWhere
    com.avos.avoscloud.AVCloudQueryResult doCloudQuery(java.lang.String,java.lang.Object[]) -> doCloudQuery
    com.avos.avoscloud.AVCloudQueryResult doCloudQuery(java.lang.String,java.lang.Class,java.lang.Object[]) -> doCloudQuery
    void doCloudQueryInBackground(java.lang.String,com.avos.avoscloud.CloudQueryCallback,java.lang.Object[]) -> doCloudQueryInBackground
    void doCloudQueryInBackground(java.lang.String,com.avos.avoscloud.CloudQueryCallback,java.lang.Class,java.lang.Object[]) -> doCloudQueryInBackground
    com.avos.avoscloud.AVCloudQueryResult doCloudQuery(java.lang.String) -> doCloudQuery
    com.avos.avoscloud.AVCloudQueryResult doCloudQuery(java.lang.String,java.lang.Class) -> doCloudQuery
    void doCloudQueryInBackground(java.lang.String,com.avos.avoscloud.CloudQueryCallback) -> doCloudQueryInBackground
    void doCloudQueryInBackground(java.lang.String,com.avos.avoscloud.CloudQueryCallback,java.lang.Class) -> doCloudQueryInBackground
    void doCloudQueryInBackground(java.lang.String,com.avos.avoscloud.CloudQueryCallback,java.lang.Class,boolean,java.lang.Object[]) -> doCloudQueryInBackground
    com.avos.avoscloud.AVCloudQueryResult processCloudResults(java.lang.String,java.lang.Class) -> processCloudResults
    java.lang.Class access$000(com.avos.avoscloud.AVQuery) -> access$000
    com.avos.avoscloud.AVCloudQueryResult access$100(java.lang.String,java.lang.Class) -> access$100
com.avos.avoscloud.AVQuery$1 -> com.avos.avoscloud.AVQuery$1:
    int[] val$value -> val$value
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(int,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVQuery$10 -> com.avos.avoscloud.AVQuery$10:
    com.avos.avoscloud.GetCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$11 -> com.avos.avoscloud.AVQuery$11:
    com.avos.avoscloud.DeleteCallback val$cb -> val$cb
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$12 -> com.avos.avoscloud.AVQuery$12:
    com.avos.avoscloud.AVCloudQueryResult val$returnValue -> val$returnValue
    void done(com.avos.avoscloud.AVCloudQueryResult,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$13 -> com.avos.avoscloud.AVQuery$13:
    com.avos.avoscloud.AVCloudQueryResult val$returnValue -> val$returnValue
    void done(com.avos.avoscloud.AVCloudQueryResult,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$14 -> com.avos.avoscloud.AVQuery$14:
    com.avos.avoscloud.AVCloudQueryResult val$returnValue -> val$returnValue
    void done(com.avos.avoscloud.AVCloudQueryResult,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$15 -> com.avos.avoscloud.AVQuery$15:
    com.avos.avoscloud.CloudQueryCallback val$callback -> val$callback
    java.lang.Class val$clazz -> val$clazz
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
com.avos.avoscloud.AVQuery$2 -> com.avos.avoscloud.AVQuery$2:
    int[] val$value -> val$value
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(int,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$3 -> com.avos.avoscloud.AVQuery$3:
    com.avos.avoscloud.CountCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$4 -> com.avos.avoscloud.AVQuery$4:
    java.util.List val$result -> val$result
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$5 -> com.avos.avoscloud.AVQuery$5:
    com.avos.avoscloud.FindCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$6 -> com.avos.avoscloud.AVQuery$6:
    java.lang.Object[] val$result -> val$result
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVQuery$7 -> com.avos.avoscloud.AVQuery$7:
    java.lang.Object[] val$result -> val$result
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVQuery$8 -> com.avos.avoscloud.AVQuery$8:
    com.avos.avoscloud.GetCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVQuery$9 -> com.avos.avoscloud.AVQuery$9:
    com.avos.avoscloud.GetCallback val$internalCallback -> val$internalCallback
    com.avos.avoscloud.AVQuery this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVQuery$CachePolicy -> com.avos.avoscloud.AVQuery$CachePolicy:
    com.avos.avoscloud.AVQuery$CachePolicy CACHE_ELSE_NETWORK -> CACHE_ELSE_NETWORK
    com.avos.avoscloud.AVQuery$CachePolicy CACHE_ONLY -> CACHE_ONLY
    com.avos.avoscloud.AVQuery$CachePolicy CACHE_THEN_NETWORK -> CACHE_THEN_NETWORK
    com.avos.avoscloud.AVQuery$CachePolicy IGNORE_CACHE -> IGNORE_CACHE
    com.avos.avoscloud.AVQuery$CachePolicy NETWORK_ELSE_CACHE -> NETWORK_ELSE_CACHE
    com.avos.avoscloud.AVQuery$CachePolicy NETWORK_ONLY -> NETWORK_ONLY
    com.avos.avoscloud.AVQuery$CachePolicy[] $VALUES -> $VALUES
    com.avos.avoscloud.AVQuery$CachePolicy[] values() -> values
    com.avos.avoscloud.AVQuery$CachePolicy valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.AVRelation -> com.avos.avoscloud.AVRelation:
    java.lang.String key -> key
    com.avos.avoscloud.AVObject parent -> parent
    java.lang.String targetClass -> targetClass
    void add(com.avos.avoscloud.AVObject) -> add
    void addAll(java.util.Collection) -> addAll
    void remove(com.avos.avoscloud.AVObject) -> remove
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    com.avos.avoscloud.AVQuery getQuery(java.lang.Class) -> getQuery
    com.avos.avoscloud.AVQuery reverseQuery(java.lang.String,java.lang.String,com.avos.avoscloud.AVObject) -> reverseQuery
    com.avos.avoscloud.AVQuery reverseQuery(java.lang.Class,java.lang.String,com.avos.avoscloud.AVObject) -> reverseQuery
    java.lang.String getKey() -> getKey
    void setKey(java.lang.String) -> setKey
    void setParent(com.avos.avoscloud.AVObject) -> setParent
    com.avos.avoscloud.AVObject getParent() -> getParent
    void setTargetClass(java.lang.String) -> setTargetClass
    java.lang.String getTargetClass() -> getTargetClass
com.avos.avoscloud.AVRelation$1 -> com.avos.avoscloud.AVRelation$1:
    com.avos.avoscloud.AVRelation this$0 -> this$0
com.avos.avoscloud.AVResponse -> com.avos.avoscloud.AVResponse:
    java.lang.String objectId -> objectId
    java.lang.String updatedAt -> updatedAt
    java.lang.String createdAt -> createdAt
    java.util.Map[] results -> results
    int count -> count
    java.lang.String className -> className
com.avos.avoscloud.AVResponseArray -> com.avos.avoscloud.AVResponseArray:
    java.util.List results -> results
com.avos.avoscloud.AVRole -> com.avos.avoscloud.AVRole:
    java.lang.String name -> name
    java.lang.String className -> className
    java.lang.String getName() -> getName
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    com.avos.avoscloud.AVRelation getRoles() -> getRoles
    com.avos.avoscloud.AVRelation getUsers() -> getUsers
    void put(java.lang.String,java.lang.Object) -> put
    void setName(java.lang.String) -> setName
com.avos.avoscloud.AVRuntimeException -> com.avos.avoscloud.AVRuntimeException:
    long serialVersionUID -> serialVersionUID
com.avos.avoscloud.AVSession -> com.avos.avoscloud.AVSession:
    android.content.Context context -> context
    com.avos.avoscloud.AVInternalSessionListener sessionListener -> sessionListener
    java.util.Set allPeerIdSet -> allPeerIdSet
    java.util.Set onlinePeerIdSet -> onlinePeerIdSet
    java.lang.String selfId -> selfId
    java.util.concurrent.atomic.AtomicBoolean sessionOpened -> sessionOpened
    java.util.concurrent.atomic.AtomicBoolean sessionPaused -> sessionPaused
    java.util.concurrent.ScheduledExecutorService messageTimeoutScheduler -> messageTimeoutScheduler
    int timeoutInSecs -> timeoutInSecs
    java.util.concurrent.atomic.AtomicLong lastServerAckReceived -> lastServerAckReceived
    java.util.concurrent.atomic.AtomicBoolean currentSwitcher -> currentSwitcher
    com.avos.avoscloud.PendingMessageCache pendingMessages -> pendingMessages
    com.avos.avoscloud.AVIMOperationQueue conversationOperationCache -> conversationOperationCache
    java.util.concurrent.ConcurrentHashMap sessionGroupCache -> sessionGroupCache
    java.util.concurrent.ConcurrentHashMap sessionConversationCache -> sessionConversationCache
    com.avos.avoscloud.AVSessionWebSocketListener websocketListener -> websocketListener
    com.avos.avoscloud.SignatureFactory signatureFactory -> signatureFactory
    int MAX_DIRECT_MESSAGE_LENGTH -> MAX_DIRECT_MESSAGE_LENGTH
    com.avos.avoscloud.SignatureFactory getSignatureFactory() -> getSignatureFactory
    com.avos.avospush.push.AVWebSocketListener getWebSocketListener() -> getWebSocketListener
    void setStaticSignatureFactory(com.avos.avoscloud.SignatureFactory) -> setStaticSignatureFactory
    com.avos.avospush.session.SessionControlPacket genSessionCommand(java.util.List,java.lang.String) -> genSessionCommand
    boolean isOpen() -> isOpen
    void open(java.lang.String,java.util.List) -> open
    void open(java.util.List) -> open
    void open(java.util.List,int) -> open
    void close() -> close
    void cleanUp() -> cleanUp
    void close(int) -> close
    void setMessageTimeout(int) -> setMessageTimeout
    void sendMessage(com.avos.avoscloud.AVMessage) -> sendMessage
    void storeMessage(com.avos.avoscloud.PendingMessageCache$Message) -> storeMessage
    void storeMessage(com.avos.avoscloud.PendingMessageCache$Message,int) -> storeMessage
    boolean watchPeers(java.util.List) -> watchPeers
    void unwatchPeers(java.util.List) -> unwatchPeers
    java.util.List getOnlinePeers() -> getOnlinePeers
    java.util.List getAllPeers() -> getAllPeers
    java.lang.String getSelfPeerId() -> getSelfPeerId
    boolean isWatching(java.lang.String) -> isWatching
    boolean isOnline(java.lang.String) -> isOnline
    void setAllPeerIds(java.util.Set) -> setAllPeerIds
    void clearOnlinePeerIds() -> clearOnlinePeerIds
    void setServerAckReceived(long) -> setServerAckReceived
    void queryOnlinePeers(java.util.List,com.avos.avoscloud.OnlinePeerQueryListener) -> queryOnlinePeers
    void conversationQuery(java.util.Map,int) -> conversationQuery
    com.avos.avoscloud.Group getGroup(java.lang.String) -> getGroup
    com.avos.avoscloud.Group getGroup() -> getGroup
    com.avos.avoscloud.AVInternalConversation getConversation(java.lang.String) -> getConversation
    void removeConversation(java.lang.String) -> removeConversation
    void createConversation(java.util.List,java.util.Map,boolean,int) -> createConversation
    com.avos.avoscloud.AVHistoryMessageQuery getHistoryMessageQuery() -> getHistoryMessageQuery
    java.util.Set access$000(com.avos.avoscloud.AVSession) -> access$000
    java.lang.String access$100(com.avos.avoscloud.AVSession) -> access$100
    com.avos.avoscloud.SignatureFactory access$200() -> access$200
    java.util.concurrent.atomic.AtomicBoolean access$300(com.avos.avoscloud.AVSession) -> access$300
    java.util.concurrent.atomic.AtomicLong access$400(com.avos.avoscloud.AVSession) -> access$400
com.avos.avoscloud.AVSession$1 -> com.avos.avoscloud.AVSession$1:
    java.util.List val$peerIds -> val$peerIds
    int val$requestId -> val$requestId
    com.avos.avoscloud.AVSession this$0 -> this$0
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
com.avos.avoscloud.AVSession$2 -> com.avos.avoscloud.AVSession$2:
    java.util.List val$peerIds -> val$peerIds
    com.avos.avoscloud.AVSession this$0 -> this$0
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
com.avos.avoscloud.AVSession$3 -> com.avos.avoscloud.AVSession$3:
    java.util.List val$members -> val$members
    java.util.Map val$attributes -> val$attributes
    boolean val$isTransient -> val$isTransient
    int val$requestId -> val$requestId
    com.avos.avoscloud.AVSession this$0 -> this$0
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
com.avos.avoscloud.AVSession$SendMessageTimeoutCheck -> com.avos.avoscloud.AVSession$SendMessageTimeoutCheck:
    boolean switcher -> switcher
    com.avos.avoscloud.AVSession this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AVSession$SignatureTask -> com.avos.avoscloud.AVSession$SignatureTask:
    com.avos.avoscloud.SignatureCallback callback -> callback
    com.avos.avoscloud.AVException signatureException -> signatureException
    com.avos.avoscloud.Signature doInBackground(java.lang.Void[]) -> doInBackground
    void onPostExecute(com.avos.avoscloud.Signature) -> onPostExecute
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.avos.avoscloud.AVSessionCacheHelper -> com.avos.avoscloud.AVSessionCacheHelper:
    java.lang.String SESSION_CACHE_KEY -> SESSION_CACHE_KEY
    java.lang.String SESSION_KEY -> SESSION_KEY
    void addSession(java.lang.String) -> addSession
    void removeSession(java.lang.String) -> removeSession
    java.util.List getAllSession() -> getAllSession
com.avos.avoscloud.AVSessionWebSocketListener -> com.avos.avoscloud.AVSessionWebSocketListener:
    com.avos.avoscloud.AVSession session -> session
    com.avos.avospush.session.StaleMessageDepot depot -> depot
    java.lang.String SESSION_MESSASGE_DEPOT -> SESSION_MESSASGE_DEPOT
    java.lang.String ONLINE_SESSION_PEER_IDS -> ONLINE_SESSION_PEER_IDS
    java.lang.String MSG -> MSG
    java.lang.String TIMESTAMP -> TIMESTAMP
    java.lang.String FROM_PEER_ID -> FROM_PEER_ID
    java.lang.String SESSION_PEER_IDS -> SESSION_PEER_IDS
    java.lang.String CMD_STATUS_OFF -> CMD_STATUS_OFF
    java.lang.String CMD_STATUS_ON -> CMD_STATUS_ON
    void onWebSocketOpen() -> onWebSocketOpen
    void onWebSocketClose() -> onWebSocketClose
    void onPresenceCommand(java.util.HashMap) -> onPresenceCommand
    void onDirectCommand(java.util.HashMap) -> onDirectCommand
    void onSessionCommand(java.util.HashMap) -> onSessionCommand
    void onAckReqCommand(java.util.HashMap) -> onAckReqCommand
    void onAckCommand(java.util.HashMap) -> onAckCommand
    void onListenerAdded(boolean) -> onListenerAdded
    void onGroupCommand(java.util.HashMap) -> onGroupCommand
    void onListenerRemoved() -> onListenerRemoved
    void onMessageReceipt(java.util.HashMap) -> onMessageReceipt
    void onConversationCommand(java.util.Map) -> onConversationCommand
    void onConversationQuery(java.util.Map) -> onConversationQuery
    com.avos.avospush.session.SessionAckPacket genSessionAckPacket(java.lang.String) -> genSessionAckPacket
    void onError(java.util.Map) -> onError
    void onHistoryMessageQuery(java.util.Map) -> onHistoryMessageQuery
com.avos.avoscloud.AVSessionWebSocketListener$1 -> com.avos.avoscloud.AVSessionWebSocketListener$1:
    java.util.List peerIds -> peerIds
    com.avos.avoscloud.AVSessionWebSocketListener this$0 -> this$0
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
com.avos.avoscloud.AVStatus -> com.avos.avoscloud.AVStatus:
    java.util.Map dataMap -> dataMap
    java.lang.String IMAGE_TAG -> IMAGE_TAG
    java.lang.String MESSAGE_TAG -> MESSAGE_TAG
    java.lang.String AV_CLASS_NAME -> AV_CLASS_NAME
    int DEFAULT_COUNT -> DEFAULT_COUNT
    java.lang.String INBOX_TIMELINE -> INBOX_TIMELINE
    java.lang.String INBOX_PRIVATE -> INBOX_PRIVATE
    java.lang.String STATUS_END_POINT -> STATUS_END_POINT
    java.lang.String UNREAD_TAG -> UNREAD_TAG
    long messageId -> messageId
    java.lang.String createdAt -> createdAt
    java.lang.String inboxType -> inboxType
    com.avos.avoscloud.AVObject source -> source
    com.avos.avoscloud.AVQuery query -> query
    java.util.List ignoreList -> ignoreList
    com.avos.avoscloud.AVStatus createStatus(java.lang.String,java.lang.String) -> createStatus
    com.avos.avoscloud.AVStatus createStatusWithData(java.util.Map) -> createStatusWithData
    boolean checkCurrentUser(com.avos.avoscloud.AVCallback) -> checkCurrentUser
    java.lang.String getObjectId() -> getObjectId
    java.util.Date getCreatedAt() -> getCreatedAt
    void setCreatedAt(java.lang.String) -> setCreatedAt
    void setImageUrl(java.lang.String) -> setImageUrl
    java.lang.String getImageUrl() -> getImageUrl
    com.avos.avoscloud.AVUser getSource() -> getSource
    void setSource(com.avos.avoscloud.AVObject) -> setSource
    void setInboxType(java.lang.String) -> setInboxType
    void setQuery(com.avos.avoscloud.AVQuery) -> setQuery
    void setMessage(java.lang.String) -> setMessage
    java.lang.String getMessage() -> getMessage
    void setData(java.util.Map) -> setData
    java.util.Map getData() -> getData
    void put(java.lang.String,java.lang.Object) -> put
    void remove(java.lang.String) -> remove
    long getMessageId() -> getMessageId
    void setMessageId(long) -> setMessageId
    java.lang.String getInboxType() -> getInboxType
    void deleteStatusInBackground(com.avos.avoscloud.DeleteCallback) -> deleteStatusInBackground
    void deleteStatusWithIDInBackgroud(java.lang.String,com.avos.avoscloud.DeleteCallback) -> deleteStatusWithIDInBackgroud
    void deleteStatusWithId(boolean,java.lang.String,com.avos.avoscloud.DeleteCallback) -> deleteStatusWithId
    void getStatuses(long,long,com.avos.avoscloud.StatusListCallback) -> getStatuses
    java.util.Map sourceQueryMap(java.lang.String,long,long) -> sourceQueryMap
    void getStatusesFromCurrentUserWithType(java.lang.String,long,long,com.avos.avoscloud.StatusListCallback) -> getStatusesFromCurrentUserWithType
    void getStatusesFromUser(java.lang.String,long,long,com.avos.avoscloud.StatusListCallback) -> getStatusesFromUser
    java.util.Map statusQueryMap(java.lang.String,long,long,long,java.lang.String,java.util.Map,boolean,boolean) -> statusQueryMap
    java.util.Map getStatusQueryMap(java.lang.String,long,long,long,java.lang.String,java.util.Map,boolean,boolean) -> getStatusQueryMap
    java.util.List processStatusResultList(java.lang.String) -> processStatusResultList
    void processStatus(java.lang.String,com.avos.avoscloud.AVStatus) -> processStatus
    void processStatusFromObject(java.lang.Object,com.avos.avoscloud.AVStatus) -> processStatusFromObject
    void getStatusImpl(java.lang.String,java.util.Map,com.avos.avoscloud.StatusListCallback) -> getStatusImpl
    int processStatusCount(java.lang.String) -> processStatusCount
    void getStatusCountImpl(java.lang.String,java.util.Map,com.avos.avoscloud.CountCallback) -> getStatusCountImpl
    void getInboxStatusesInBackground(long,long,com.avos.avoscloud.StatusListCallback) -> getInboxStatusesInBackground
    void getInboxStatusesWithInboxType(long,long,java.lang.String,com.avos.avoscloud.StatusListCallback) -> getInboxStatusesWithInboxType
    void getUnreadStatusesCountInBackground(java.lang.String,com.avos.avoscloud.CountCallback) -> getUnreadStatusesCountInBackground
    void getInboxUnreadStatusesCountInBackgroud(com.avos.avoscloud.CountCallback) -> getInboxUnreadStatusesCountInBackgroud
    void getInboxUnreadStatusesCountWithInboxTypeInBackgroud(long,long,java.lang.String,com.avos.avoscloud.CountCallback) -> getInboxUnreadStatusesCountWithInboxTypeInBackgroud
    void getInboxPrivteStatuses(long,long,com.avos.avoscloud.StatusListCallback) -> getInboxPrivteStatuses
    boolean checkStatusId(java.lang.String,com.avos.avoscloud.StatusCallback) -> checkStatusId
    void getStatusWithIdInBackgroud(java.lang.String,com.avos.avoscloud.StatusCallback) -> getStatusWithIdInBackgroud
    void postStatusImpl(com.avos.avoscloud.AVStatus,java.util.Map,com.avos.avoscloud.SaveCallback) -> postStatusImpl
    java.util.Map statusBody(com.avos.avoscloud.AVStatus,java.lang.String,java.util.Map) -> statusBody
    java.util.Map myQueryParameters(com.avos.avoscloud.AVQuery) -> myQueryParameters
    void sendInBackgroundWithBlock(com.avos.avoscloud.SaveCallback) -> sendInBackgroundWithBlock
    void sendInBackground(com.avos.avoscloud.SaveCallback) -> sendInBackground
    void sendStatusToFollowersInBackgroud(com.avos.avoscloud.AVStatus,com.avos.avoscloud.SaveCallback) -> sendStatusToFollowersInBackgroud
    void sendPrivateStatusInBackgroud(com.avos.avoscloud.AVStatus,java.lang.String,com.avos.avoscloud.SaveCallback) -> sendPrivateStatusInBackgroud
    java.util.Map currentUserBody() -> currentUserBody
    com.avos.avoscloud.AVStatusQuery statusQuery(com.avos.avoscloud.AVUser) -> statusQuery
    com.avos.avoscloud.AVStatusQuery inboxQuery(com.avos.avoscloud.AVUser,java.lang.String) -> inboxQuery
    void add(java.lang.String,java.lang.Object) -> add
    void addAll(java.lang.String,java.util.Collection) -> addAll
    void addAllUnique(java.lang.String,java.util.Collection) -> addAllUnique
    void addUnique(java.lang.String,java.lang.Object) -> addUnique
    boolean containsKey(java.lang.String) -> containsKey
    void delete() -> delete
    void deleteEventually(com.avos.avoscloud.DeleteCallback) -> deleteEventually
    void deleteEventually() -> deleteEventually
    void deleteInBackground() -> deleteInBackground
    com.avos.avoscloud.AVObject toObject() -> toObject
    boolean equals(java.lang.Object) -> equals
    com.avos.avoscloud.AVObject fetch() -> fetch
    com.avos.avoscloud.AVObject fetch(java.lang.String) -> fetch
    com.avos.avoscloud.AVObject fetchIfNeeded() -> fetchIfNeeded
    com.avos.avoscloud.AVObject fetchIfNeeded(java.lang.String) -> fetchIfNeeded
    void fetchIfNeededInBackground(com.avos.avoscloud.GetCallback) -> fetchIfNeededInBackground
    void fetchIfNeededInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> fetchIfNeededInBackground
    java.lang.String toString() -> toString
    boolean isFetchWhenSave() -> isFetchWhenSave
    void setFetchWhenSave(boolean) -> setFetchWhenSave
    java.lang.String getUuid() -> getUuid
    void deleteInBackground(com.avos.avoscloud.DeleteCallback) -> deleteInBackground
    void fetchInBackground(com.avos.avoscloud.GetCallback) -> fetchInBackground
    void fetchInBackground(java.lang.String,com.avos.avoscloud.GetCallback) -> fetchInBackground
    java.lang.Object get(java.lang.String) -> get
    com.avos.avoscloud.AVACL getACL() -> getACL
    boolean getBoolean(java.lang.String) -> getBoolean
    byte[] getBytes(java.lang.String) -> getBytes
    java.lang.String getClassName() -> getClassName
    java.util.Date getDate(java.lang.String) -> getDate
    double getDouble(java.lang.String) -> getDouble
    int getInt(java.lang.String) -> getInt
    org.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    org.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    java.util.List getList(java.lang.String) -> getList
    long getLong(java.lang.String) -> getLong
    java.util.Map getMap(java.lang.String) -> getMap
    java.lang.Number getNumber(java.lang.String) -> getNumber
    com.avos.avoscloud.AVFile getAVFile(java.lang.String) -> getAVFile
    com.avos.avoscloud.AVGeoPoint getAVGeoPoint(java.lang.String) -> getAVGeoPoint
    com.avos.avoscloud.AVObject getAVObject(java.lang.String) -> getAVObject
    com.avos.avoscloud.AVUser getAVUser(java.lang.String) -> getAVUser
    com.avos.avoscloud.AVRelation getRelation(java.lang.String) -> getRelation
    java.lang.String getString(java.lang.String) -> getString
    java.util.Date getUpdatedAt() -> getUpdatedAt
    boolean has(java.lang.String) -> has
    boolean hasSameId(com.avos.avoscloud.AVObject) -> hasSameId
    void increment(java.lang.String) -> increment
    void increment(java.lang.String,java.lang.Number) -> increment
    java.util.Set keySet() -> keySet
    void refresh() -> refresh
    void refresh(java.lang.String) -> refresh
    void refreshInBackground(com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void refreshInBackground(java.lang.String,com.avos.avoscloud.RefreshCallback) -> refreshInBackground
    void removeAll(java.lang.String,java.util.Collection) -> removeAll
    void save() -> save
    void saveEventually() -> saveEventually
    void saveEventually(com.avos.avoscloud.SaveCallback) -> saveEventually
    void saveInBackground() -> saveInBackground
    void saveInBackground(com.avos.avoscloud.SaveCallback) -> saveInBackground
    void setACL(com.avos.avoscloud.AVACL) -> setACL
com.avos.avoscloud.AVStatus$1 -> com.avos.avoscloud.AVStatus$1:
    com.avos.avoscloud.DeleteCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVStatus$2 -> com.avos.avoscloud.AVStatus$2:
    com.avos.avoscloud.StatusListCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVStatus$3 -> com.avos.avoscloud.AVStatus$3:
    com.avos.avoscloud.CountCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVStatus$4 -> com.avos.avoscloud.AVStatus$4:
    com.avos.avoscloud.StatusCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVStatus$5 -> com.avos.avoscloud.AVStatus$5:
    com.avos.avoscloud.AVStatus val$status -> val$status
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVStatus$6 -> com.avos.avoscloud.AVStatus$6:
    com.avos.avoscloud.AVStatus this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVStatus$INBOX_TYPE -> com.avos.avoscloud.AVStatus$INBOX_TYPE:
    com.avos.avoscloud.AVStatus$INBOX_TYPE TIMELINE -> TIMELINE
    com.avos.avoscloud.AVStatus$INBOX_TYPE PRIVATE -> PRIVATE
    java.lang.String type -> type
    com.avos.avoscloud.AVStatus$INBOX_TYPE[] $VALUES -> $VALUES
    com.avos.avoscloud.AVStatus$INBOX_TYPE[] values() -> values
    com.avos.avoscloud.AVStatus$INBOX_TYPE valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.avos.avoscloud.AVStatusQuery -> com.avos.avoscloud.AVStatusQuery:
    java.lang.String END -> END
    long sinceId -> sinceId
    java.lang.String inboxType -> inboxType
    long maxId -> maxId
    boolean count -> count
    com.avos.avoscloud.AVUser owner -> owner
    boolean selfStatusQuery -> selfStatusQuery
    void setSinceId(long) -> setSinceId
    long getSinceId() -> getSinceId
    void setInboxType(java.lang.String) -> setInboxType
    java.lang.String getInboxType() -> getInboxType
    long getMaxId() -> getMaxId
    void setMaxId(long) -> setMaxId
    boolean isCount() -> isCount
    void setCount(boolean) -> setCount
    com.avos.avoscloud.AVUser getOwner() -> getOwner
    void setOwner(com.avos.avoscloud.AVUser) -> setOwner
    void setSelfQuery(boolean) -> setSelfQuery
    java.util.Map assembleParameters() -> assembleParameters
    java.util.List processResults(java.lang.String) -> processResults
    void processStatusFromObject(java.lang.Object,com.avos.avoscloud.AVStatus) -> processStatusFromObject
    void processAdditionalInfo(java.lang.String,com.avos.avoscloud.FindCallback) -> processAdditionalInfo
com.avos.avoscloud.AVUncaughtExceptionHandler -> com.avos.avoscloud.AVUncaughtExceptionHandler:
    java.lang.Thread$UncaughtExceptionHandler defaultExceptionHandler -> defaultExceptionHandler
    boolean enabled -> enabled
    java.lang.String LOG_TAG -> LOG_TAG
    android.content.Context context -> context
    java.lang.Thread brokenThread -> brokenThread
    java.lang.Throwable unhandledThrowable -> unhandledThrowable
    void enableCrashHanlder(boolean) -> enableCrashHanlder
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void handleException(java.lang.Throwable,boolean) -> handleException
    void handleException(java.lang.Throwable) -> handleException
    void handleException(java.lang.Throwable,boolean,boolean) -> handleException
    java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    java.util.Map crashData(android.content.Context,java.lang.Throwable) -> crashData
    void endApplication() -> endApplication
com.avos.avoscloud.AVUploader -> com.avos.avoscloud.AVUploader:
    com.avos.avoscloud.AVFile parseFile -> parseFile
    com.avos.avoscloud.SaveCallback saveCallback -> saveCallback
    com.avos.avoscloud.ProgressCallback progressCallback -> progressCallback
    long totalSize -> totalSize
    boolean cancelled -> cancelled
    boolean complete -> complete
    java.util.concurrent.Future future -> future
    int CPU_COUNT -> CPU_COUNT
    int CORE_POOL_SIZE -> CORE_POOL_SIZE
    int MAX_POOL_SIZE -> MAX_POOL_SIZE
    long KEEP_ALIVE_TIME -> KEEP_ALIVE_TIME
    java.util.concurrent.ThreadPoolExecutor executor -> executor
    int defaultFileKeyLength -> defaultFileKeyLength
    com.avos.avoscloud.AVException doWork() -> doWork
    void execute() -> execute
    com.avos.avoscloud.AVException doInBackground(java.lang.Void[]) -> doInBackground
    void onProgressUpdate(java.lang.Integer) -> onProgressUpdate
    void onPostExecute(com.avos.avoscloud.AVException) -> onPostExecute
    void onCancelled() -> onCancelled
    boolean cancel(boolean) -> cancel
    void interruptImmediately() -> interruptImmediately
    boolean isCancelled() -> isCancelled
    void publishProgress(int) -> publishProgress
    boolean access$000(com.avos.avoscloud.AVUploader) -> access$000
    boolean access$102(com.avos.avoscloud.AVUploader,boolean) -> access$102
com.avos.avoscloud.AVUploader$1 -> com.avos.avoscloud.AVUploader$1:
    com.avos.avoscloud.AVUploader this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AVUser -> com.avos.avoscloud.AVUser:
    boolean enableAutomatic -> enableAutomatic
    java.lang.String sessionToken -> sessionToken
    boolean isNew -> isNew
    java.lang.String username -> username
    java.lang.String password -> password
    java.lang.String mobilePhoneNumber -> mobilePhoneNumber
    java.lang.String email -> email
    java.lang.String facebookToken -> facebookToken
    java.lang.String twitterToken -> twitterToken
    java.lang.String sinaWeiboToken -> sinaWeiboToken
    java.lang.String qqWeiboToken -> qqWeiboToken
    boolean needTransferFromAnonymousUser -> needTransferFromAnonymousUser
    boolean anonymous -> anonymous
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String FOLLOWER_TAG -> FOLLOWER_TAG
    java.lang.String FOLLOWEE_TAG -> FOLLOWEE_TAG
    java.lang.Class subClazz -> subClazz
    com.avos.avoscloud.RelationPropertyFilter mUserPropertyFilter -> mUserPropertyFilter
    java.lang.String accessTokenTag -> accessTokenTag
    java.lang.String expiresAtTag -> expiresAtTag
    java.lang.String authDataTag -> authDataTag
    java.lang.String anonymousTag -> anonymousTag
    java.io.File currentUserArchivePath() -> currentUserArchivePath
    boolean userArchiveExist() -> userArchiveExist
    java.lang.String getFacebookToken() -> getFacebookToken
    void setFacebookToken(java.lang.String) -> setFacebookToken
    java.lang.String getTwitterToken() -> getTwitterToken
    void setTwitterToken(java.lang.String) -> setTwitterToken
    java.lang.String getQqWeiboToken() -> getQqWeiboToken
    void setQqWeiboToken(java.lang.String) -> setQqWeiboToken
    java.lang.String getPassword() -> getPassword
    void setEnableAutomatic(boolean) -> setEnableAutomatic
    void setNew(boolean) -> setNew
    void enableAutomaticUser() -> enableAutomaticUser
    boolean isEnableAutomatic() -> isEnableAutomatic
    void disableAutomaticUser() -> disableAutomaticUser
    void changeCurrentUser(com.avos.avoscloud.AVUser,boolean) -> changeCurrentUser
    com.avos.avoscloud.AVUser getCurrentUser() -> getCurrentUser
    com.avos.avoscloud.AVUser getCurrentUser(java.lang.Class) -> getCurrentUser
    java.lang.String userClassName() -> userClassName
    void setNewFlag(boolean) -> setNewFlag
    java.lang.String getEmail() -> getEmail
    com.avos.avoscloud.AVQuery getUserQuery(java.lang.Class) -> getUserQuery
    com.avos.avoscloud.AVQuery getQuery() -> getQuery
    java.lang.String getSessionToken() -> getSessionToken
    void setSessionToken(java.lang.String) -> setSessionToken
    java.lang.String getUsername() -> getUsername
    boolean isAuthenticated() -> isAuthenticated
    boolean isAnonymous() -> isAnonymous
    void setAnonymous(boolean) -> setAnonymous
    boolean isNew() -> isNew
    com.avos.avoscloud.AVUser logIn(java.lang.String,java.lang.String) -> logIn
    com.avos.avoscloud.AVUser logIn(java.lang.String,java.lang.String,java.lang.Class) -> logIn
    java.lang.String logInPath() -> logInPath
    void logInInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback) -> logInInBackground
    void logInInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback,java.lang.Class) -> logInInBackground
    java.util.Map createUserMap(java.lang.String,java.lang.String,java.lang.String) -> createUserMap
    java.util.Map createUserMap(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> createUserMap
    void logInInBackground(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.LogInCallback,java.lang.Class) -> logInInBackground
    com.avos.avoscloud.AVUser loginByMobilePhoneNumber(java.lang.String,java.lang.String) -> loginByMobilePhoneNumber
    com.avos.avoscloud.AVUser loginByMobilePhoneNumber(java.lang.String,java.lang.String,java.lang.Class) -> loginByMobilePhoneNumber
    void loginByMobilePhoneNumberInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback) -> loginByMobilePhoneNumberInBackground
    void loginByMobilePhoneNumberInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback,java.lang.Class) -> loginByMobilePhoneNumberInBackground
    void loginByMobilePhoneNumberInBackground(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.LogInCallback,java.lang.Class) -> loginByMobilePhoneNumberInBackground
    com.avos.avoscloud.AVUser loginBySMSCode(java.lang.String,java.lang.String) -> loginBySMSCode
    com.avos.avoscloud.AVUser loginBySMSCode(java.lang.String,java.lang.String,java.lang.Class) -> loginBySMSCode
    void loginBySMSCodeInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback) -> loginBySMSCodeInBackground
    void loginBySMSCodeInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback,java.lang.Class) -> loginBySMSCodeInBackground
    void loginBySMSCodeInBackground(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.LogInCallback,java.lang.Class) -> loginBySMSCodeInBackground
    com.avos.avoscloud.AVUser signUpOrLoginByMobilePhone(java.lang.String,java.lang.String) -> signUpOrLoginByMobilePhone
    com.avos.avoscloud.AVUser signUpOrLoginByMobilePhone(java.lang.String,java.lang.String,java.lang.Class) -> signUpOrLoginByMobilePhone
    void signUpOrLoginByMobilePhoneInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.LogInCallback) -> signUpOrLoginByMobilePhoneInBackground
    void signUpOrLoginByMobilePhoneInBackground(java.lang.String,java.lang.String,java.lang.Class,com.avos.avoscloud.LogInCallback) -> signUpOrLoginByMobilePhoneInBackground
    void signUpOrLoginByMobilePhoneInBackground(java.lang.String,java.lang.String,boolean,java.lang.Class,com.avos.avoscloud.LogInCallback) -> signUpOrLoginByMobilePhoneInBackground
    com.avos.avoscloud.AVUser newAVUser(java.lang.Class,com.avos.avoscloud.LogInCallback) -> newAVUser
    com.avos.avoscloud.AVUser newAVUser() -> newAVUser
    void logOut() -> logOut
    void put(java.lang.String,java.lang.Object) -> put
    void remove(java.lang.String) -> remove
    void requestPasswordReset(java.lang.String) -> requestPasswordReset
    void requestPasswordResetInBackground(java.lang.String,com.avos.avoscloud.RequestPasswordResetCallback) -> requestPasswordResetInBackground
    void requestPasswordResetInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestPasswordResetCallback) -> requestPasswordResetInBackground
    void updatePassword(java.lang.String,java.lang.String) -> updatePassword
    void updatePasswordInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.UpdatePasswordCallback) -> updatePasswordInBackground
    void updatePasswordInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.UpdatePasswordCallback,boolean) -> updatePasswordInBackground
    void requestPasswordResetBySmsCode(java.lang.String) -> requestPasswordResetBySmsCode
    void requestPasswordResetBySmsCodeInBackground(java.lang.String,com.avos.avoscloud.RequestMobileCodeCallback) -> requestPasswordResetBySmsCodeInBackground
    void requestPasswordResetBySmsCodeInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestMobileCodeCallback) -> requestPasswordResetBySmsCodeInBackground
    void resetPasswordBySmsCode(java.lang.String,java.lang.String) -> resetPasswordBySmsCode
    void resetPasswordBySmsCodeInBackground(java.lang.String,java.lang.String,com.avos.avoscloud.UpdatePasswordCallback) -> resetPasswordBySmsCodeInBackground
    void resetPasswordBySmsCodeInBackground(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.UpdatePasswordCallback) -> resetPasswordBySmsCodeInBackground
    void requestEmailVerify(java.lang.String) -> requestEmailVerify
    void requestEmailVerfiyInBackground(java.lang.String,com.avos.avoscloud.RequestEmailVerifyCallback) -> requestEmailVerfiyInBackground
    void requestEmailVerfiyInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestEmailVerifyCallback) -> requestEmailVerfiyInBackground
    void requestMobilePhoneVerify(java.lang.String) -> requestMobilePhoneVerify
    void requestMobilePhoneVerifyInBackgroud(java.lang.String,com.avos.avoscloud.RequestMobileCodeCallback) -> requestMobilePhoneVerifyInBackgroud
    void requestMobilePhoneVerifyInBackground(java.lang.String,com.avos.avoscloud.RequestMobileCodeCallback) -> requestMobilePhoneVerifyInBackground
    void requestMobilePhoneVerifyInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestMobileCodeCallback) -> requestMobilePhoneVerifyInBackground
    void requestLoginSmsCode(java.lang.String) -> requestLoginSmsCode
    void requestLoginSmsCodeInBackground(java.lang.String,com.avos.avoscloud.RequestMobileCodeCallback) -> requestLoginSmsCodeInBackground
    void requestLoginSmsCodeInBackground(java.lang.String,boolean,com.avos.avoscloud.RequestMobileCodeCallback) -> requestLoginSmsCodeInBackground
    void verifyMobilePhone(java.lang.String) -> verifyMobilePhone
    void verifyMobilePhoneInBackgroud(java.lang.String,com.avos.avoscloud.AVMobilePhoneVerifyCallback) -> verifyMobilePhoneInBackgroud
    void verifyMobilePhoneInBackground(java.lang.String,com.avos.avoscloud.AVMobilePhoneVerifyCallback) -> verifyMobilePhoneInBackground
    void verifyMobilePhoneInBackground(boolean,java.lang.String,com.avos.avoscloud.AVMobilePhoneVerifyCallback) -> verifyMobilePhoneInBackground
    void setEmail(java.lang.String) -> setEmail
    void setPassword(java.lang.String) -> setPassword
    void setUsername(java.lang.String) -> setUsername
    java.lang.String getMobilePhoneNumber() -> getMobilePhoneNumber
    void setMobilePhoneNumber(java.lang.String) -> setMobilePhoneNumber
    boolean isMobilePhoneVerified() -> isMobilePhoneVerified
    void setMobilePhoneVerified(boolean) -> setMobilePhoneVerified
    java.lang.String signUpPath() -> signUpPath
    void signUp(boolean,com.avos.avoscloud.SignUpCallback) -> signUp
    void signUp() -> signUp
    void signUpInBackground(com.avos.avoscloud.SignUpCallback) -> signUpInBackground
    void setSinaWeiboToken(java.lang.String) -> setSinaWeiboToken
    java.lang.String getSinaWeiboToken() -> getSinaWeiboToken
    void setQQWeiboToken(java.lang.String) -> setQQWeiboToken
    java.lang.String getQQWeiboToken() -> getQQWeiboToken
    void onSaveSuccess() -> onSaveSuccess
    void onDataSynchronized() -> onDataSynchronized
    java.util.Map headerMap() -> headerMap
    com.avos.avoscloud.AVUser userFromSinaWeibo(java.lang.String,java.lang.String) -> userFromSinaWeibo
    com.avos.avoscloud.AVUser userFromQQWeibo(java.lang.String,java.lang.String) -> userFromQQWeibo
    boolean checkUserAuthentication(com.avos.avoscloud.AVCallback) -> checkUserAuthentication
    void followInBackground(java.lang.String,com.avos.avoscloud.FollowCallback) -> followInBackground
    void followInBackground(java.lang.String,java.util.Map,com.avos.avoscloud.FollowCallback) -> followInBackground
    void unfollowInBackground(java.lang.String,com.avos.avoscloud.FollowCallback) -> unfollowInBackground
    java.util.List processResultByTag(java.lang.String,java.lang.String) -> processResultByTag
    java.util.Map processFollowerAndFollowee(java.lang.String) -> processFollowerAndFollowee
    void processResultList(java.util.Map[],java.util.List,java.lang.String) -> processResultList
    com.avos.avoscloud.AVQuery followerQuery(java.lang.String,java.lang.Class) -> followerQuery
    com.avos.avoscloud.AVQuery followerQuery(java.lang.Class) -> followerQuery
    com.avos.avoscloud.AVQuery followeeQuery(java.lang.String,java.lang.Class) -> followeeQuery
    com.avos.avoscloud.AVQuery followeeQuery(java.lang.Class) -> followeeQuery
    void getFollowersInBackground(com.avos.avoscloud.FindCallback) -> getFollowersInBackground
    void getMyFolloweesInBackground(com.avos.avoscloud.FindCallback) -> getMyFolloweesInBackground
    void getFollowersAndFolloweesInBackground(com.avos.avoscloud.FollowersAndFolloweesCallback) -> getFollowersAndFolloweesInBackground
    com.avos.avoscloud.AVUser cast(com.avos.avoscloud.AVUser,java.lang.Class) -> cast
    void alwaysUseSubUserClass(java.lang.Class) -> alwaysUseSubUserClass
    java.util.Map authData(com.avos.avoscloud.AVUser$AVThirdPartyUserAuth) -> authData
    void loginWithAuthData(com.avos.avoscloud.AVUser$AVThirdPartyUserAuth,com.avos.avoscloud.LogInCallback) -> loginWithAuthData
    void loginWithAuthData(java.lang.Class,com.avos.avoscloud.AVUser$AVThirdPartyUserAuth,com.avos.avoscloud.LogInCallback) -> loginWithAuthData
    void associateWithAuthData(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVUser$AVThirdPartyUserAuth,com.avos.avoscloud.SaveCallback) -> associateWithAuthData
    void dissociateAuthData(com.avos.avoscloud.AVUser,java.lang.String,com.avos.avoscloud.SaveCallback) -> dissociateAuthData
    void processAuthData(com.avos.avoscloud.AVUser$AVThirdPartyUserAuth) -> processAuthData
    void markAnonymousUserTransfer() -> markAnonymousUserTransfer
    java.util.List access$000(com.avos.avoscloud.AVUser,java.lang.String,java.lang.String) -> access$000
    java.util.Map access$100(com.avos.avoscloud.AVUser,java.lang.String) -> access$100
com.avos.avoscloud.AVUser$1 -> com.avos.avoscloud.AVUser$1:
    com.avos.avoscloud.AVUser[] val$list -> val$list
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUser$10 -> com.avos.avoscloud.AVUser$10:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    com.avos.avoscloud.AVUser this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$11 -> com.avos.avoscloud.AVUser$11:
    com.avos.avoscloud.UpdatePasswordCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$12 -> com.avos.avoscloud.AVUser$12:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$13 -> com.avos.avoscloud.AVUser$13:
    com.avos.avoscloud.RequestMobileCodeCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$14 -> com.avos.avoscloud.AVUser$14:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$15 -> com.avos.avoscloud.AVUser$15:
    com.avos.avoscloud.UpdatePasswordCallback val$internalCallback -> val$internalCallback
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
com.avos.avoscloud.AVUser$16 -> com.avos.avoscloud.AVUser$16:
    com.avos.avoscloud.RequestEmailVerifyCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$17 -> com.avos.avoscloud.AVUser$17:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$18 -> com.avos.avoscloud.AVUser$18:
    com.avos.avoscloud.RequestMobileCodeCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$19 -> com.avos.avoscloud.AVUser$19:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$2 -> com.avos.avoscloud.AVUser$2:
    com.avos.avoscloud.AVUser val$user -> val$user
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$20 -> com.avos.avoscloud.AVUser$20:
    com.avos.avoscloud.RequestMobileCodeCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$21 -> com.avos.avoscloud.AVUser$21:
    com.avos.avoscloud.AVException[] val$errors -> val$errors
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$22 -> com.avos.avoscloud.AVUser$22:
    com.avos.avoscloud.AVMobilePhoneVerifyCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$23 -> com.avos.avoscloud.AVUser$23:
    com.avos.avoscloud.SignUpCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$24 -> com.avos.avoscloud.AVUser$24:
    com.avos.avoscloud.AVUser this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUser$25 -> com.avos.avoscloud.AVUser$25:
    com.avos.avoscloud.FollowCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$26 -> com.avos.avoscloud.AVUser$26:
    com.avos.avoscloud.FollowCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$27 -> com.avos.avoscloud.AVUser$27:
    com.avos.avoscloud.FindCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$28 -> com.avos.avoscloud.AVUser$28:
    com.avos.avoscloud.FindCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$29 -> com.avos.avoscloud.AVUser$29:
    com.avos.avoscloud.FollowersAndFolloweesCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$3 -> com.avos.avoscloud.AVUser$3:
    com.avos.avoscloud.AVUser[] val$list -> val$list
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUser$30 -> com.avos.avoscloud.AVUser$30:
    java.lang.Class val$clazz -> val$clazz
    com.avos.avoscloud.LogInCallback val$callback -> val$callback
    com.avos.avoscloud.AVUser$AVThirdPartyUserAuth val$userInfo -> val$userInfo
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$31 -> com.avos.avoscloud.AVUser$31:
    com.avos.avoscloud.AVUser val$user -> val$user
    java.lang.String val$type -> val$type
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.AVUser$4 -> com.avos.avoscloud.AVUser$4:
    com.avos.avoscloud.AVUser val$user -> val$user
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$5 -> com.avos.avoscloud.AVUser$5:
    com.avos.avoscloud.AVUser[] val$list -> val$list
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUser$6 -> com.avos.avoscloud.AVUser$6:
    com.avos.avoscloud.AVUser val$user -> val$user
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$7 -> com.avos.avoscloud.AVUser$7:
    com.avos.avoscloud.AVUser[] val$list -> val$list
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    boolean mustRunOnUIThread() -> mustRunOnUIThread
com.avos.avoscloud.AVUser$8 -> com.avos.avoscloud.AVUser$8:
    com.avos.avoscloud.AVUser val$user -> val$user
    com.avos.avoscloud.LogInCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$9 -> com.avos.avoscloud.AVUser$9:
    com.avos.avoscloud.RequestPasswordResetCallback val$internalCallback -> val$internalCallback
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AVUser$AVThirdPartyUserAuth -> com.avos.avoscloud.AVUser$AVThirdPartyUserAuth:
    java.lang.String accessToken -> accessToken
    java.lang.String expiredAt -> expiredAt
    java.lang.String snsType -> snsType
    java.lang.String userId -> userId
    java.lang.String SNS_TENCENT_WEIBO -> SNS_TENCENT_WEIBO
    java.lang.String SNS_SINA_WEIBO -> SNS_SINA_WEIBO
    java.lang.String SNS_TENCENT_WEIXIN -> SNS_TENCENT_WEIXIN
    java.lang.String platformUserIdTag(java.lang.String) -> platformUserIdTag
    java.lang.String getAccessToken() -> getAccessToken
    void setAccessToken(java.lang.String) -> setAccessToken
    java.lang.String getUserId() -> getUserId
    void setUserId(java.lang.String) -> setUserId
    java.lang.String getExpireAt() -> getExpireAt
    void setExpireAt(java.lang.String) -> setExpireAt
    java.lang.String getSnsType() -> getSnsType
    void setSnsType(java.lang.String) -> setSnsType
com.avos.avoscloud.AVUtils -> com.avos.avoscloud.AVUtils:
    java.lang.String dateFormat -> dateFormat
    java.lang.String classNameTag -> classNameTag
    java.lang.String typeTag -> typeTag
    java.lang.String objectIdTag -> objectIdTag
    java.util.Map fieldsMap -> fieldsMap
    java.util.regex.Pattern pattern -> pattern
    java.util.regex.Pattern emailPattern -> emailPattern
    java.util.regex.Pattern phoneNumPattern -> phoneNumPattern
    java.util.regex.Pattern verifyCodePattern -> verifyCodePattern
    java.lang.ThreadLocal THREAD_LOCAL_DATE_FORMAT -> THREAD_LOCAL_DATE_FORMAT
    java.util.Random random -> random
    java.util.concurrent.atomic.AtomicInteger acu -> acu
    int TYPE_WIFI -> TYPE_WIFI
    int TYPE_MOBILE -> TYPE_MOBILE
    int TYPE_NOT_CONNECTED -> TYPE_NOT_CONNECTED
    java.util.Map createArrayOpMap(java.lang.String,java.lang.String,java.util.Collection) -> createArrayOpMap
    java.lang.reflect.Field[] getAllFiels(java.lang.Class) -> getAllFiels
    boolean checkEmailAddress(java.lang.String) -> checkEmailAddress
    boolean checkMobilePhoneNumber(java.lang.String) -> checkMobilePhoneNumber
    boolean checkMobileVerifyCode(java.lang.String) -> checkMobileVerifyCode
    void checkClassName(java.lang.String) -> checkClassName
    boolean isBlankString(java.lang.String) -> isBlankString
    boolean isBlankContent(java.lang.String) -> isBlankContent
    boolean contains(java.util.Map,java.lang.String) -> contains
    java.util.Map createDeleteOpMap(java.lang.String) -> createDeleteOpMap
    java.util.Map createPointerArrayOpMap(java.lang.String,java.lang.String,java.util.Collection) -> createPointerArrayOpMap
    java.util.Map createStringObjectMap(java.lang.String,java.lang.Object) -> createStringObjectMap
    java.util.Map mapFromPointerObject(com.avos.avoscloud.AVObject) -> mapFromPointerObject
    java.util.Map mapFromUserObjectId(java.lang.String) -> mapFromUserObjectId
    java.util.Map mapFromChildObject(com.avos.avoscloud.AVObject,java.lang.String) -> mapFromChildObject
    boolean isDigitString(java.lang.String) -> isDigitString
    java.util.Date dateFromString(java.lang.String) -> dateFromString
    java.lang.String stringFromDate(java.util.Date) -> stringFromDate
    java.util.Map mapFromDate(java.util.Date) -> mapFromDate
    java.util.Date dateFromMap(java.util.Map) -> dateFromMap
    java.util.Map mapFromGeoPoint(com.avos.avoscloud.AVGeoPoint) -> mapFromGeoPoint
    com.avos.avoscloud.AVGeoPoint geoPointFromMap(java.util.Map) -> geoPointFromMap
    com.avos.avoscloud.AVObject objectFromRelationMap(java.util.Map) -> objectFromRelationMap
    java.util.Map mapFromByteArray(byte[]) -> mapFromByteArray
    byte[] dataFromMap(java.util.Map) -> dataFromMap
    java.lang.String jsonStringFromMapWithNull(java.lang.Object) -> jsonStringFromMapWithNull
    java.lang.String jsonStringFromObjectWithNull(java.lang.Object) -> jsonStringFromObjectWithNull
    java.util.Map mapFromFile(com.avos.avoscloud.AVFile) -> mapFromFile
    com.avos.avoscloud.AVFile fileFromMap(java.util.Map) -> fileFromMap
    com.avos.avoscloud.AVObject parseObjectFromMap(java.util.Map) -> parseObjectFromMap
    java.lang.String restfulServerData(java.util.Map) -> restfulServerData
    boolean hasProperty(java.lang.Class,java.lang.String) -> hasProperty
    boolean checkAndSetValue(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object) -> checkAndSetValue
    void updatePropertyFromMap(com.avos.avoscloud.AVObject,java.lang.String,java.util.Map) -> updatePropertyFromMap
    void updatePropertyFromList(com.avos.avoscloud.AVObject,java.lang.String,java.util.Collection) -> updatePropertyFromList
    void copyPropertiesFromJsonStringToAVObject(java.lang.String,com.avos.avoscloud.AVObject) -> copyPropertiesFromJsonStringToAVObject
    void copyPropertiesFromMapToAVObject(java.util.Map,com.avos.avoscloud.AVObject) -> copyPropertiesFromMapToAVObject
    void copyPropertiesFromMapToObject(java.util.Map,java.lang.Object) -> copyPropertiesFromMapToObject
    java.lang.Class getClass(java.util.Map) -> getClass
    boolean isRelation(java.lang.String) -> isRelation
    boolean isPointer(java.lang.String) -> isPointer
    boolean isGeoPoint(java.lang.String) -> isGeoPoint
    boolean isACL(java.lang.String) -> isACL
    boolean isDate(java.lang.String) -> isDate
    boolean isData(java.lang.String) -> isData
    boolean isFile(java.lang.String) -> isFile
    boolean isFileFromUrulu(java.util.Map) -> isFileFromUrulu
    com.avos.avoscloud.AVObject objectFromClassName(java.lang.String) -> objectFromClassName
    com.avos.avoscloud.AVObject newAVObjectByClassName(java.lang.String) -> newAVObjectByClassName
    java.lang.Object getFromJSON(java.lang.String,java.lang.Class) -> getFromJSON
    java.lang.String toJSON(java.lang.Object) -> toJSON
    java.util.Map getParsedMap(java.util.Map) -> getParsedMap
    java.util.List getParsedList(java.util.Collection) -> getParsedList
    java.lang.Object getParsedObject(java.lang.Object) -> getParsedObject
    java.util.List getObjectFrom(java.util.Collection) -> getObjectFrom
    java.lang.Object getObjectFrom(java.util.Map) -> getObjectFrom
    java.lang.Object getObjectFrom(java.lang.Object) -> getObjectFrom
    java.lang.String md5(java.lang.String) -> md5
    java.lang.String getRandomString(int) -> getRandomString
    int getNextIMRequestId() -> getNextIMRequestId
    boolean isWifi(android.content.Context) -> isWifi
    boolean isConnected(android.content.Context) -> isConnected
    long getCurrentTimestamp() -> getCurrentTimestamp
    java.lang.String joinCollection(java.util.Collection,java.lang.String) -> joinCollection
    java.lang.String stringFromBytes(byte[]) -> stringFromBytes
    boolean checkPermission(android.content.Context,java.lang.String) -> checkPermission
    boolean isPushServiceAvailable(android.content.Context,java.lang.Class) -> isPushServiceAvailable
    boolean isMainThread() -> isMainThread
    java.lang.String fileMd5(java.lang.String) -> fileMd5
    byte[] readFile(java.lang.String) -> readFile
    byte[] readFile(java.io.File) -> readFile
    java.lang.String computeMD5(byte[]) -> computeMD5
    java.lang.String getJSONString(com.alibaba.fastjson.JSONObject,java.lang.String,java.lang.String) -> getJSONString
    long getJSONInteger(com.alibaba.fastjson.JSONObject,java.lang.String,long) -> getJSONInteger
    int getConnectivityStatus(android.content.Context) -> getConnectivityStatus
    java.lang.String getConnectivityStatusString(android.content.Context) -> getConnectivityStatusString
    java.lang.String getArchiveRequestFileName(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getArchiveRequestFileName
    int collectionNonNullCount(java.util.Collection) -> collectionNonNullCount
    java.lang.String urlCleanLastSlash(java.lang.String) -> urlCleanLastSlash
    java.lang.String getSessionKey(java.lang.String) -> getSessionKey
    boolean isEmptyList(java.util.List) -> isEmptyList
    void ensureElementsNotNull(java.util.List,java.lang.String) -> ensureElementsNotNull
    boolean compareNumberString(java.lang.String,java.lang.String) -> compareNumberString
    java.lang.String Base64Encode(java.lang.String) -> Base64Encode
    com.loopj.android.http.AsyncHttpClient getDirectlyClientForUse() -> getDirectlyClientForUse
    android.os.Handler getUIThreadHandler() -> getUIThreadHandler
    java.util.Map createMap(java.lang.String,java.lang.Object) -> createMap
    boolean checkResponseType(int,java.lang.String,java.lang.String,com.avos.avoscloud.GenericObjectCallback) -> checkResponseType
com.avos.avoscloud.AVUtils$1 -> com.avos.avoscloud.AVUtils$1:
    int[] $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType -> $SwitchMap$com$avos$avoscloud$AVOSCloud$StorageType
com.avos.avoscloud.AnalyticsActivity -> com.avos.avoscloud.AnalyticsActivity:
    com.avos.avoscloud.AVDuration duration -> duration
    java.lang.String activityName -> activityName
    boolean savedToServer -> savedToServer
    boolean isFragment -> isFragment
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void start() -> start
    void stop() -> stop
    void setDurationValue(long) -> setDurationValue
    double getStart() -> getStart
    java.lang.String getActivityName() -> getActivityName
    boolean isStopped() -> isStopped
    long myDuration() -> myDuration
    java.util.Map jsonMap() -> jsonMap
    com.avos.avoscloud.AVDuration getDuration() -> getDuration
    void setDuration(com.avos.avoscloud.AVDuration) -> setDuration
    void setActivityName(java.lang.String) -> setActivityName
    boolean isSavedToServer() -> isSavedToServer
    void setSavedToServer(boolean) -> setSavedToServer
    boolean isFragment() -> isFragment
    void setFragment(boolean) -> setFragment
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.avos.avoscloud.AnalyticsActivity$1 -> com.avos.avoscloud.AnalyticsActivity$1:
    com.avos.avoscloud.AnalyticsActivity createFromParcel(android.os.Parcel) -> createFromParcel
    com.avos.avoscloud.AnalyticsActivity[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.avos.avoscloud.AnalyticsEvent -> com.avos.avoscloud.AnalyticsEvent:
    com.avos.avoscloud.AVDuration duration -> duration
    java.util.Map attributes -> attributes
    java.lang.String eventName -> eventName
    java.lang.String labelName -> labelName
    java.lang.String primaryKey -> primaryKey
    int accumulation -> accumulation
    java.lang.String eventTag -> eventTag
    java.lang.String labelTag -> labelTag
    java.lang.String accTag -> accTag
    java.lang.String primaryKeyTag -> primaryKeyTag
    java.lang.String attributesTag -> attributesTag
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void start() -> start
    void stop() -> stop
    java.lang.String getEventName() -> getEventName
    void setDurationValue(long) -> setDurationValue
    void setAccumulation(int) -> setAccumulation
    void setLabel(java.lang.String) -> setLabel
    void setPrimaryKey(java.lang.String) -> setPrimaryKey
    void addAttributes(java.util.Map) -> addAttributes
    boolean isMatch(java.lang.String,java.lang.String,java.lang.String) -> isMatch
    long myDuration() -> myDuration
    java.util.Map jsonMap() -> jsonMap
    com.avos.avoscloud.AVDuration getDuration() -> getDuration
    void setDuration(com.avos.avoscloud.AVDuration) -> setDuration
    java.util.Map getAttributes() -> getAttributes
    void setAttributes(java.util.Map) -> setAttributes
    java.lang.String getLabelName() -> getLabelName
    void setLabelName(java.lang.String) -> setLabelName
    java.lang.String getPrimaryKey() -> getPrimaryKey
    int getAccumulation() -> getAccumulation
    void setEventName(java.lang.String) -> setEventName
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.avos.avoscloud.AnalyticsEvent$1 -> com.avos.avoscloud.AnalyticsEvent$1:
    com.avos.avoscloud.AnalyticsEvent createFromParcel(android.os.Parcel) -> createFromParcel
    com.avos.avoscloud.AnalyticsEvent[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.avos.avoscloud.AnalyticsImpl -> com.avos.avoscloud.AnalyticsImpl:
    com.avos.avoscloud.AnalyticsImpl instance -> instance
    boolean enableDebugLog -> enableDebugLog
    java.lang.String appChannel -> appChannel
    boolean autoLocation -> autoLocation
    java.util.Map sessions -> sessions
    java.lang.String currentSessionId -> currentSessionId
    long sessionThreshold -> sessionThreshold
    java.lang.String TAG -> TAG
    com.avos.avoscloud.AVUncaughtExceptionHandler handler -> handler
    com.avos.avoscloud.AnalyticsOnlineConfig onlineConfig -> onlineConfig
    com.avos.avoscloud.AVOnlineConfigureListener listener -> listener
    java.util.Map customInfo -> customInfo
    java.util.Timer updateOnlineConfigTimer -> updateOnlineConfigTimer
    java.lang.String firstBootTag -> firstBootTag
    java.util.List whiteList -> whiteList
    boolean analysisReportEnableFlag -> analysisReportEnableFlag
    com.avos.avoscloud.AnalyticsRequestController requestController -> requestController
    com.avos.avoscloud.RealTimeRequestController realTimeController -> realTimeController
    com.avos.avoscloud.AnalyticsImpl getInstance() -> getInstance
    void setAutoLocation(boolean) -> setAutoLocation
    boolean isAutoLocation() -> isAutoLocation
    boolean isEnableStats() -> isEnableStats
    void setAppChannel(java.lang.String) -> setAppChannel
    java.lang.String getAppChannel() -> getAppChannel
    void setEnableDebugLog(boolean) -> setEnableDebugLog
    boolean isEnableDebugLog() -> isEnableDebugLog
    void enableCrashReport(android.content.Context,boolean) -> enableCrashReport
    com.avos.avoscloud.ReportPolicy getReportPolicy(android.content.Context) -> getReportPolicy
    void setReportPolicy(com.avos.avoscloud.ReportPolicy) -> setReportPolicy
    void notifyOnlineConfigListener(org.json.JSONObject) -> notifyOnlineConfigListener
    com.avos.avoscloud.AnalyticsSession getCurrentSession(boolean) -> getCurrentSession
    void setSessionContinueMillis(long) -> setSessionContinueMillis
    void setSessionDuration(long) -> setSessionDuration
    com.avos.avoscloud.AnalyticsSession sessionByName(java.lang.String) -> sessionByName
    com.avos.avoscloud.AnalyticsSession createSession() -> createSession
    void flushLastSessions(android.content.Context) -> flushLastSessions
    void beginSession() -> beginSession
    void endSession(android.content.Context) -> endSession
    void pauseSession() -> pauseSession
    void addActivity(java.lang.String,long) -> addActivity
    void beginActivity(java.lang.String) -> beginActivity
    void beginFragment(java.lang.String) -> beginFragment
    void beginEvent(android.content.Context,java.lang.String) -> beginEvent
    com.avos.avoscloud.AnalyticsEvent beginEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> beginEvent
    void endEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> endEvent
    void setCustomInfo(java.util.Map) -> setCustomInfo
    java.util.Map getCustomInfo() -> getCustomInfo
    long getSessionTimeoutThreshold() -> getSessionTimeoutThreshold
    boolean shouldRegardAsNewSession() -> shouldRegardAsNewSession
    void endActivity(java.lang.String) -> endActivity
    void endFragment(java.lang.String) -> endFragment
    void dumpJsonMap(android.content.Context) -> dumpJsonMap
    void report(android.content.Context,boolean) -> report
    void debugDump(android.content.Context) -> debugDump
    void postRecording() -> postRecording
    void archiveCurrentSession() -> archiveCurrentSession
    void saveSessionsToServer(android.content.Context) -> saveSessionsToServer
    void clearSessions() -> clearSessions
    void setAVOnlineConfigureListener(com.avos.avoscloud.AVOnlineConfigureListener) -> setAVOnlineConfigureListener
    void updateOnlineConfig(android.content.Context) -> updateOnlineConfig
    void reportFirstBoot(android.content.Context) -> reportFirstBoot
    void sendInstantRecordingRequest() -> sendInstantRecordingRequest
    java.lang.String getConfigParams(java.lang.String,java.lang.String) -> getConfigParams
    void sendAnalysisRequest(java.lang.String,boolean,boolean,com.avos.avoscloud.GenericObjectCallback) -> sendAnalysisRequest
    void setAnalyticsEnabled(boolean) -> setAnalyticsEnabled
    void sendArchivedRequests(boolean) -> sendArchivedRequests
    void sendRequest() -> sendRequest
    java.lang.String access$000() -> access$000
    com.avos.avoscloud.AnalyticsOnlineConfig access$100(com.avos.avoscloud.AnalyticsImpl) -> access$100
com.avos.avoscloud.AnalyticsImpl$1 -> com.avos.avoscloud.AnalyticsImpl$1:
    com.avos.avoscloud.AnalyticsImpl this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AnalyticsImpl$2 -> com.avos.avoscloud.AnalyticsImpl$2:
    com.avos.avoscloud.AnalyticsImpl this$0 -> this$0
    void run() -> run
com.avos.avoscloud.AnalyticsOnlineConfig -> com.avos.avoscloud.AnalyticsOnlineConfig:
    com.avos.avoscloud.ReportPolicy reportPolicy -> reportPolicy
    java.util.Map config -> config
    com.avos.avoscloud.AnalyticsImpl parent -> parent
    boolean enableStats -> enableStats
    void update(android.content.Context) -> update
    void update(android.content.Context,boolean) -> update
    boolean isEnableStats() -> isEnableStats
    void setEnableStats(boolean) -> setEnableStats
    boolean setReportPolicy(com.avos.avoscloud.ReportPolicy) -> setReportPolicy
    com.avos.avoscloud.ReportPolicy getReportPolicy() -> getReportPolicy
    java.lang.String getConfigParams(java.lang.String) -> getConfigParams
    com.avos.avoscloud.AnalyticsImpl access$000(com.avos.avoscloud.AnalyticsOnlineConfig) -> access$000
    boolean access$102(com.avos.avoscloud.AnalyticsOnlineConfig,boolean) -> access$102
    com.avos.avoscloud.ReportPolicy access$200(com.avos.avoscloud.AnalyticsOnlineConfig) -> access$200
com.avos.avoscloud.AnalyticsOnlineConfig$1 -> com.avos.avoscloud.AnalyticsOnlineConfig$1:
    boolean val$updatePolicy -> val$updatePolicy
    com.avos.avoscloud.AnalyticsOnlineConfig this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.AnalyticsRequestController -> com.avos.avoscloud.AnalyticsRequestController:
    android.os.HandlerThread controllerThread -> controllerThread
    void requestToSend(java.lang.String) -> requestToSend
    void quit() -> quit
    boolean requestValidate(android.os.Message) -> requestValidate
    void onRequestDone() -> onRequestDone
    void appraisalSession(com.avos.avoscloud.AnalyticsSession) -> appraisalSession
com.avos.avoscloud.AnalyticsRequestController$AnalyticsRequestDispatcher -> com.avos.avoscloud.AnalyticsRequestController$AnalyticsRequestDispatcher:
    void sendRequest() -> sendRequest
com.avos.avoscloud.AnalyticsRequestControllerFactory -> com.avos.avoscloud.AnalyticsRequestControllerFactory:
    com.avos.avoscloud.AnalyticsRequestController getAnalyticsRequestController(java.lang.String,com.avos.avoscloud.ReportPolicy,com.avos.avoscloud.AnalyticsImpl) -> getAnalyticsRequestController
com.avos.avoscloud.AnalyticsRequestControllerFactory$1 -> com.avos.avoscloud.AnalyticsRequestControllerFactory$1:
    int[] $SwitchMap$com$avos$avoscloud$ReportPolicy -> $SwitchMap$com$avos$avoscloud$ReportPolicy
com.avos.avoscloud.AnalyticsSession -> com.avos.avoscloud.AnalyticsSession:
    java.util.List activities -> activities
    java.util.List events -> events
    java.lang.String sessionId -> sessionId
    com.avos.avoscloud.AVDuration duration -> duration
    java.lang.String sessionIdTag -> sessionIdTag
    java.lang.String TAG -> TAG
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void beginSession() -> beginSession
    void endSession() -> endSession
    boolean isSessionFinished() -> isSessionFinished
    void pauseSession() -> pauseSession
    long getSessionStart() -> getSessionStart
    java.lang.String getSessionId() -> getSessionId
    void setSessionDuration(long) -> setSessionDuration
    com.avos.avoscloud.AnalyticsActivity activityByName(java.lang.String,boolean) -> activityByName
    com.avos.avoscloud.AnalyticsEvent eventByName(java.lang.String,java.lang.String,java.lang.String,boolean) -> eventByName
    void addActivity(java.lang.String,long) -> addActivity
    void beginActivity(java.lang.String) -> beginActivity
    void beginFragment(java.lang.String) -> beginFragment
    com.avos.avoscloud.AnalyticsEvent beginEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> beginEvent
    void endEvent(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> endEvent
    void endActivity(java.lang.String) -> endActivity
    void endFragment(java.lang.String) -> endFragment
    java.util.Map launchMap() -> launchMap
    java.util.Map activitiesMap(boolean) -> activitiesMap
    java.util.List eventArray(boolean) -> eventArray
    boolean hasNewData() -> hasNewData
    int getMessageCount() -> getMessageCount
    java.util.Map jsonMap(android.content.Context,java.util.Map,boolean) -> jsonMap
    java.util.Map firstBootMap(android.content.Context,java.util.Map) -> firstBootMap
    java.util.List getActivities() -> getActivities
    void setActivities(java.util.List) -> setActivities
    java.util.List getEvents() -> getEvents
    void setEvents(java.util.List) -> setEvents
    com.avos.avoscloud.AVDuration getDuration() -> getDuration
    void setDuration(com.avos.avoscloud.AVDuration) -> setDuration
    void setSessionId(java.lang.String) -> setSessionId
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.avos.avoscloud.AnalyticsSession$1 -> com.avos.avoscloud.AnalyticsSession$1:
    com.avos.avoscloud.AnalyticsSession createFromParcel(android.os.Parcel) -> createFromParcel
    com.avos.avoscloud.AnalyticsSession[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.avos.avoscloud.AnalyticsSessionCacheRepository -> com.avos.avoscloud.AnalyticsSessionCacheRepository:
    int CACHE_REQUEST -> CACHE_REQUEST
    java.lang.String SESSION_KEY -> SESSION_KEY
    java.lang.String SESSION_CACHE_FILENAME -> SESSION_CACHE_FILENAME
    android.os.Handler sessionCacheHandler -> sessionCacheHandler
    android.os.HandlerThread handlerThread -> handlerThread
    com.avos.avoscloud.AnalyticsSessionCacheRepository instance -> instance
    com.avos.avoscloud.AnalyticsSessionCacheRepository getInstance() -> getInstance
    void cacheSession(com.avos.avoscloud.AnalyticsSession) -> cacheSession
    com.avos.avoscloud.AnalyticsSession getCachedSession() -> getCachedSession
    android.os.Message getCacheRequestMessage(int,java.lang.String,com.avos.avoscloud.AnalyticsSession) -> getCacheRequestMessage
    byte[] marshall(android.os.Parcelable) -> marshall
    android.os.Parcel unMarshall(byte[]) -> unMarshall
    java.io.File getSessionCacheFile() -> getSessionCacheFile
    byte[] access$000(android.os.Parcelable) -> access$000
    java.io.File access$100() -> access$100
com.avos.avoscloud.AnalyticsSessionCacheRepository$1 -> com.avos.avoscloud.AnalyticsSessionCacheRepository$1:
    com.avos.avoscloud.AnalyticsSessionCacheRepository this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.avos.avoscloud.AnalyticsUtils -> com.avos.avoscloud.AnalyticsUtils:
    java.lang.String TAG -> TAG
    java.util.List CELLPHONEBLACKLIST -> CELLPHONEBLACKLIST
    long sendIntervalInDebug -> sendIntervalInDebug
    long sendIntervalInProd -> sendIntervalInProd
    java.util.Map getNetworkInfo(android.content.Context) -> getNetworkInfo
    java.lang.String cleanNetworkTypeName(java.lang.String) -> cleanNetworkTypeName
    java.util.Map deviceInfo(android.content.Context) -> deviceInfo
    long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    java.util.Map getDeviceInfo(android.content.Context) -> getDeviceInfo
    java.lang.String collectMemInfo() -> collectMemInfo
    java.lang.String getCPUInfo() -> getCPUInfo
    java.lang.String getLocalIpAddress() -> getLocalIpAddress
    java.lang.String getApplicationFilePath(android.content.Context) -> getApplicationFilePath
    long getCurrentTimestamp() -> getCurrentTimestamp
    java.lang.String getRandomString(int) -> getRandomString
    java.lang.String uniqueId() -> uniqueId
    boolean isStringEqual(java.lang.String,java.lang.String) -> isStringEqual
    boolean withinInBlackList() -> withinInBlackList
    boolean inDebug(android.content.Context) -> inDebug
    long getRequestInterval() -> getRequestInterval
com.avos.avoscloud.ArchiveRequestTaskController -> com.avos.avoscloud.ArchiveRequestTaskController:
    java.util.concurrent.ScheduledExecutorService scheduledExecutorService -> scheduledExecutorService
    java.util.concurrent.ScheduledFuture scheduledFuture -> scheduledFuture
    java.util.concurrent.locks.Lock lock -> lock
    long TIME_DELAY_FOR_ARCHIVEREQUEST -> TIME_DELAY_FOR_ARCHIVEREQUEST
    java.lang.Runnable archiveRequestTask -> archiveRequestTask
    void schedule() -> schedule
    java.util.concurrent.locks.Lock access$000() -> access$000
com.avos.avoscloud.ArchiveRequestTaskController$1 -> com.avos.avoscloud.ArchiveRequestTaskController$1:
    void run() -> run
com.avos.avoscloud.BasicAnalyticsRequestDispatcher -> com.avos.avoscloud.BasicAnalyticsRequestDispatcher:
    android.os.Handler asyncHandler -> asyncHandler
    void prepareRequest() -> prepareRequest
    boolean requestValidate(android.os.Message) -> requestValidate
    void onRequestDone() -> onRequestDone
com.avos.avoscloud.BasicAnalyticsRequestDispatcher$1 -> com.avos.avoscloud.BasicAnalyticsRequestDispatcher$1:
    com.avos.avoscloud.AnalyticsRequestController$AnalyticsRequestDispatcher val$dispatcher -> val$dispatcher
    com.avos.avoscloud.BasicAnalyticsRequestDispatcher this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.avos.avoscloud.BatchRequestController -> com.avos.avoscloud.BatchRequestController:
    java.util.concurrent.atomic.AtomicInteger messageCount -> messageCount
    int messageCountThreshold -> messageCountThreshold
    int getMessageCount() -> getMessageCount
    int incMessageCount() -> incMessageCount
    void resetMessageCount() -> resetMessageCount
    void resetMessageCount(int) -> resetMessageCount
    void prepareRequest() -> prepareRequest
    void requestToSend(java.lang.String) -> requestToSend
    boolean requestValidate(android.os.Message) -> requestValidate
    void appraisalSession(com.avos.avoscloud.AnalyticsSession) -> appraisalSession
com.avos.avoscloud.BoosterRequestController -> com.avos.avoscloud.BoosterRequestController:
    java.lang.String currentSessionId -> currentSessionId
    java.lang.String tmpSessionId -> tmpSessionId
    android.os.Message makeMessage(java.lang.String) -> makeMessage
    void requestToSend(java.lang.String) -> requestToSend
    void quit() -> quit
    void prepareRequest() -> prepareRequest
    boolean requestValidate(android.os.Message) -> requestValidate
    void onRequestDone() -> onRequestDone
com.avos.avoscloud.BuildConfig -> com.avos.avoscloud.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.avos.avoscloud.CloudQueryCallback -> com.avos.avoscloud.CloudQueryCallback:
    void done(com.avos.avoscloud.AVCloudQueryResult,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVCloudQueryResult,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.CountCallback -> com.avos.avoscloud.CountCallback:
    void done(int,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Integer,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.DataFetchCallbackWithFailureRetry -> com.avos.avoscloud.DataFetchCallbackWithFailureRetry:
    com.avos.avoscloud.GenericObjectCallback callback -> callback
    boolean retry -> retry
    java.lang.String relativePath -> relativePath
    com.loopj.android.http.RequestParams parameters -> parameters
    boolean sync -> sync
    java.util.Map inputHeader -> inputHeader
    com.avos.avoscloud.AVQuery$CachePolicy policy -> policy
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    boolean isLastModifyCacheMissingError(java.lang.String) -> isLastModifyCacheMissingError
com.avos.avoscloud.DeleteCallback -> com.avos.avoscloud.DeleteCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.FindCallback -> com.avos.avoscloud.FindCallback:
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.util.List,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.FollowCallback -> com.avos.avoscloud.FollowCallback:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.FollowersAndFolloweesCallback -> com.avos.avoscloud.FollowersAndFolloweesCallback:
    void done(java.util.Map,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.util.Map,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.FunctionCallback -> com.avos.avoscloud.FunctionCallback:
    void done(java.lang.Object,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.GenericObjectCallback -> com.avos.avoscloud.GenericObjectCallback:
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
    void onGroupRequestFinished(int,int,com.avos.avoscloud.AVObject) -> onGroupRequestFinished
com.avos.avoscloud.GetCallback -> com.avos.avoscloud.GetCallback:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.GetDataCallback -> com.avos.avoscloud.GetDataCallback:
    void done(byte[],com.avos.avoscloud.AVException) -> done
    void internalDone0(byte[],com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.GetFileCallback -> com.avos.avoscloud.GetFileCallback:
    void done(com.avos.avoscloud.AVFile,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVFile,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.GetHttpResponseHandler -> com.avos.avoscloud.GetHttpResponseHandler:
    com.avos.avoscloud.GenericObjectCallback callback -> callback
    java.lang.String absoluteURLString -> absoluteURLString
    com.avos.avoscloud.AVQuery$CachePolicy policy -> policy
    void setCallback(com.avos.avoscloud.GenericObjectCallback) -> setCallback
    com.avos.avoscloud.GenericObjectCallback getCallback() -> getCallback
    boolean isNotModifiedStatus(int) -> isNotModifiedStatus
    boolean isUnAuthorize(int) -> isUnAuthorize
    void tryLastModifyCache(java.lang.String) -> tryLastModifyCache
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.String access$000(com.avos.avoscloud.GetHttpResponseHandler) -> access$000
com.avos.avoscloud.GetHttpResponseHandler$1 -> com.avos.avoscloud.GetHttpResponseHandler$1:
    com.avos.avoscloud.GetHttpResponseHandler this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.Group -> com.avos.avoscloud.Group:
    java.lang.String GROUP_TABLE_NAME -> GROUP_TABLE_NAME
    java.lang.String FIELD_VALID -> FIELD_VALID
    java.lang.String FIELD_GROUPID -> FIELD_GROUPID
    java.lang.String FIELD_PEERID -> FIELD_PEERID
    int AV_GROUP_OPERATION_JOIN -> AV_GROUP_OPERATION_JOIN
    int AV_GROUP_OPERATION_SEND_MESSAGE -> AV_GROUP_OPERATION_SEND_MESSAGE
    int AV_GROUP_OPERATION_KICK -> AV_GROUP_OPERATION_KICK
    int AV_GROUP_OPERATION_INVITE -> AV_GROUP_OPERATION_INVITE
    int AV_GROUP_OPERATION_QUIT -> AV_GROUP_OPERATION_QUIT
    java.lang.String AV_GROUP_INTENT_SESSIONID -> AV_GROUP_INTENT_SESSIONID
    java.lang.String AV_GROUP_INTENT_MESSAGE -> AV_GROUP_INTENT_MESSAGE
    java.lang.String AV_GROUP_INTENT_STATUS_KEY -> AV_GROUP_INTENT_STATUS_KEY
    java.lang.String AV_GROUP_INTENT_GROUP_ID -> AV_GROUP_INTENT_GROUP_ID
    java.lang.String AV_GROUP_INTENT_OPERATION_KEY -> AV_GROUP_INTENT_OPERATION_KEY
    java.lang.String AV_GROUP_INTENT_ACTION -> AV_GROUP_INTENT_ACTION
    java.lang.String AV_GROUP_INTENT_TARGET_PEERS -> AV_GROUP_INTENT_TARGET_PEERS
    java.lang.String error_empty_peeridList -> error_empty_peeridList
    int STATUS_GROUP_JOINED -> STATUS_GROUP_JOINED
    int STATUS_GROUP_INVITED -> STATUS_GROUP_INVITED
    int STATUS_GROUP_KICKED -> STATUS_GROUP_KICKED
    int STATUS_GROUP_QUIT -> STATUS_GROUP_QUIT
    int STATUS_GROUP_ONMESSAGE -> STATUS_GROUP_ONMESSAGE
    int STATUS_GROUP_REJECT -> STATUS_GROUP_REJECT
    int STATUS_GROUP_ONERROR -> STATUS_GROUP_ONERROR
    int STATUS_GROUP_ONMESSAGESENT -> STATUS_GROUP_ONMESSAGESENT
    int STATUS_GROUP_ONMESSAGEFAILURE -> STATUS_GROUP_ONMESSAGEFAILURE
    int STATUS_GROUP_ONMEMBERJOIN -> STATUS_GROUP_ONMEMBERJOIN
    int STATUS_GROUP_ONMEMBERLEFT -> STATUS_GROUP_ONMEMBERLEFT
    int STATUS_GROUP_ONINVITEDTOGROUP -> STATUS_GROUP_ONINVITEDTOGROUP
    java.lang.String GROUP_PARAM_ROOMID_KEY -> GROUP_PARAM_ROOMID_KEY
    java.lang.String GROUP_PARAM_ROOM_PEERSID -> GROUP_PARAM_ROOM_PEERSID
    java.lang.String GROUP_PARAM_MSG -> GROUP_PARAM_MSG
    java.lang.String GROUP_PARAM_FROMPEERID -> GROUP_PARAM_FROMPEERID
    java.lang.String GROUP_CMD -> GROUP_CMD
    java.lang.String GROUP_PARAM_OPERATION -> GROUP_PARAM_OPERATION
    java.lang.String GENE_PARAM_SESSIONID -> GENE_PARAM_SESSIONID
    java.lang.String GENE_PARAM_GROUPID -> GENE_PARAM_GROUPID
    java.lang.String OP_GROUP_JOINED -> OP_GROUP_JOINED
    java.lang.String OP_GROUP_QUIT -> OP_GROUP_QUIT
    java.lang.String OP_GROUP_REJECT -> OP_GROUP_REJECT
    java.lang.String OP_GROUP_INVITED -> OP_GROUP_INVITED
    java.lang.String OP_GROUP_KICKED -> OP_GROUP_KICKED
    java.lang.String OP_GROUP_MEMBER_JOIN -> OP_GROUP_MEMBER_JOIN
    java.lang.String OP_GROUP_MEMBER_LEFT -> OP_GROUP_MEMBER_LEFT
    java.lang.String SESSION_BY_PEER_ID -> SESSION_BY_PEER_ID
    void join() -> join
    void kickMember(java.util.List) -> kickMember
    void inviteMember(java.util.List) -> inviteMember
    void quit() -> quit
    java.lang.String getGroupId() -> getGroupId
    java.lang.String getSelfId() -> getSelfId
    com.avos.avoscloud.AVHistoryMessageQuery getHistoryMessageQuery() -> getHistoryMessageQuery
    java.util.List getMembers() -> getMembers
    void getMembersInBackground(com.avos.avoscloud.GroupMemberQueryCallback) -> getMembersInBackground
com.avos.avoscloud.GroupListener -> com.avos.avoscloud.GroupListener:
    void onJoined(android.content.Context,com.avos.avoscloud.Group) -> onJoined
    void onInviteToGroup(android.content.Context,com.avos.avoscloud.Group,java.lang.String) -> onInviteToGroup
    void onInvited(android.content.Context,com.avos.avoscloud.Group,java.util.List) -> onInvited
    void onKicked(android.content.Context,com.avos.avoscloud.Group,java.util.List) -> onKicked
    void onMessageSent(android.content.Context,com.avos.avoscloud.Group,com.avos.avoscloud.AVMessage) -> onMessageSent
    void onMessageFailure(android.content.Context,com.avos.avoscloud.Group,com.avos.avoscloud.AVMessage) -> onMessageFailure
    void onMessage(android.content.Context,com.avos.avoscloud.Group,com.avos.avoscloud.AVMessage) -> onMessage
    void onQuit(android.content.Context,com.avos.avoscloud.Group) -> onQuit
    void onReject(android.content.Context,com.avos.avoscloud.Group,java.lang.String,java.util.List) -> onReject
    void onMemberJoin(android.content.Context,com.avos.avoscloud.Group,java.util.List) -> onMemberJoin
    void onMemberLeft(android.content.Context,com.avos.avoscloud.Group,java.util.List) -> onMemberLeft
    void onError(android.content.Context,com.avos.avoscloud.Group,java.lang.Throwable) -> onError
com.avos.avoscloud.GroupMemberQueryCallback -> com.avos.avoscloud.GroupMemberQueryCallback:
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.util.List,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.HttpClientUploader -> com.avos.avoscloud.HttpClientUploader:
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    java.util.concurrent.atomic.AtomicReference httpPostRef -> httpPostRef
    java.util.concurrent.atomic.AtomicInteger counter -> counter
    org.apache.http.impl.client.DefaultHttpClient getHttpClient() -> getHttpClient
    void interruptImmediately() -> interruptImmediately
    void closeExpiredConnections() -> closeExpiredConnections
    void publishProgress(int) -> publishProgress
    boolean isCancelled() -> isCancelled
    boolean cancel(boolean) -> cancel
    void execute() -> execute
com.avos.avoscloud.InboxStatusFindCallback -> com.avos.avoscloud.InboxStatusFindCallback:
    boolean end -> end
    boolean isEnd() -> isEnd
    void setEnd(boolean) -> setEnd
com.avos.avoscloud.IntentUtil -> com.avos.avoscloud.IntentUtil:
    android.content.Intent setupIntentFlags(android.content.Intent) -> setupIntentFlags
com.avos.avoscloud.IntervalRequestController -> com.avos.avoscloud.IntervalRequestController:
    com.avos.avoscloud.IntervalTimer timer -> timer
    void quit() -> quit
    void skip() -> skip
    void prepareRequest() -> prepareRequest
    void onRequestDone() -> onRequestDone
com.avos.avoscloud.IntervalRequestController$1 -> com.avos.avoscloud.IntervalRequestController$1:
    com.avos.avoscloud.AnalyticsRequestController$AnalyticsRequestDispatcher val$dispatcher -> val$dispatcher
    com.avos.avoscloud.IntervalRequestController this$0 -> this$0
    void onTrigger() -> onTrigger
com.avos.avoscloud.IntervalTimer -> com.avos.avoscloud.IntervalTimer:
    long mCountdownInterval -> mCountdownInterval
    long mTriggerTimeInFuture -> mTriggerTimeInFuture
    boolean mCancelled -> mCancelled
    android.os.Looper looper -> looper
    int MSG -> MSG
    int SKIP -> SKIP
    android.os.Handler mHandler -> mHandler
    void cancel() -> cancel
    void skip() -> skip
    void onTrigger() -> onTrigger
    com.avos.avoscloud.IntervalTimer start() -> start
    boolean access$000(com.avos.avoscloud.IntervalTimer) -> access$000
    long access$100(com.avos.avoscloud.IntervalTimer) -> access$100
    long access$102(com.avos.avoscloud.IntervalTimer,long) -> access$102
    long access$200(com.avos.avoscloud.IntervalTimer) -> access$200
com.avos.avoscloud.IntervalTimer$1 -> com.avos.avoscloud.IntervalTimer$1:
    com.avos.avoscloud.IntervalTimer this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.avos.avoscloud.JSONHelper -> com.avos.avoscloud.JSONHelper:
    java.lang.Object toJSON(java.lang.Object) -> toJSON
    boolean isEmptyObject(org.json.JSONObject) -> isEmptyObject
    java.util.Map getMap(org.json.JSONObject,java.lang.String) -> getMap
    java.util.Map toMap(org.json.JSONObject) -> toMap
    java.util.Map mapFromString(java.lang.String) -> mapFromString
    java.util.List toList(org.json.JSONArray) -> toList
    java.lang.Object fromJson(java.lang.Object) -> fromJson
    java.lang.String toJsonString(java.util.Map) -> toJsonString
com.avos.avoscloud.LogInCallback -> com.avos.avoscloud.LogInCallback:
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.LogUtil -> com.avos.avoscloud.LogUtil:
com.avos.avoscloud.LogUtil$avlog -> com.avos.avoscloud.LogUtil$avlog:
    boolean showAVLog -> showAVLog
    void i(java.lang.String) -> i
    void i(java.lang.Object) -> i
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
com.avos.avoscloud.LogUtil$log -> com.avos.avoscloud.LogUtil$log:
    boolean show -> show
    java.lang.String Tag -> Tag
    java.lang.String Cname -> Cname
    java.lang.String Mname -> Mname
    boolean shouldShow(int) -> shouldShow
    void getTrace() -> getTrace
    void v(java.lang.String) -> v
    void d(java.lang.String) -> d
    void d(java.util.Map) -> d
    void d(int) -> d
    void d(float) -> d
    void d(double) -> d
    void d() -> d
    void d(java.lang.String,java.lang.String) -> d
    void d(java.lang.String,java.lang.Exception) -> d
    void i(java.lang.String) -> i
    void w(java.lang.String) -> w
    void e(java.lang.String) -> e
    void e() -> e
    void e(java.lang.String,java.lang.Exception) -> e
    void e(java.lang.String,java.lang.String) -> e
    void e(java.lang.String,java.lang.String,java.lang.Exception) -> e
com.avos.avoscloud.OnlinePeerQueryListener -> com.avos.avoscloud.OnlinePeerQueryListener:
    void onResults(java.util.List) -> onResults
com.avos.avoscloud.PaasClient -> com.avos.avoscloud.PaasClient:
    org.apache.http.client.CookieStore COOKIE_STORE -> COOKIE_STORE
    java.lang.String baseUrl -> baseUrl
    java.lang.String apiVersion -> apiVersion
    java.lang.String applicationIdField -> applicationIdField
    java.lang.String apiKeyField -> apiKeyField
    com.avos.avoscloud.AVOSSSLSocketFactory socketFactory -> socketFactory
    java.lang.String sessionTokenField -> sessionTokenField
    boolean isUrulu -> isUrulu
    boolean isCN -> isCN
    boolean isProduction -> isProduction
    java.lang.String defaultEncoding -> defaultEncoding
    java.lang.String defaultContentType -> defaultContentType
    java.lang.String DEFAULT_FAIL_STRING -> DEFAULT_FAIL_STRING
    java.lang.String sdkVersion -> sdkVersion
    java.lang.String userAgent -> userAgent
    com.avos.avoscloud.AVUser currentUser -> currentUser
    com.avos.avoscloud.AVACL defaultACL -> defaultACL
    com.loopj.android.http.SyncHttpClient syncHttpClient -> syncHttpClient
    com.loopj.android.http.AsyncHttpClient asyncHttpClient -> asyncHttpClient
    boolean lastModifyEnabled -> lastModifyEnabled
    java.util.Map serviceHostMap -> serviceHostMap
    java.util.HashMap serviceClientMap -> serviceClientMap
    java.util.Map internalObjectsForEventuallySave -> internalObjectsForEventuallySave
    java.util.Map lastModify -> lastModify
    java.util.Comparator fileModifiedDateComparator -> fileModifiedDateComparator
    void setProduction(boolean) -> setProduction
    boolean isAVOSCloud() -> isAVOSCloud
    com.avos.avoscloud.PaasClient sharedInstance(com.avos.avoscloud.AVOSServices) -> sharedInstance
    com.avos.avoscloud.PaasClient storageInstance() -> storageInstance
    com.avos.avoscloud.PaasClient cloudInstance() -> cloudInstance
    com.avos.avoscloud.PaasClient statistisInstance() -> statistisInstance
    com.avos.avoscloud.AVACL getDefaultACL() -> getDefaultACL
    void setDefaultACL(com.avos.avoscloud.AVACL) -> setDefaultACL
    com.avos.avoscloud.AVUser getCurrentUser() -> getCurrentUser
    java.util.Map userHeaderMap() -> userHeaderMap
    void setCurrentUser(com.avos.avoscloud.AVUser) -> setCurrentUser
    java.lang.String signRequest() -> signRequest
    void updateHeaders(com.loopj.android.http.AsyncHttpClient) -> updateHeaders
    com.avos.avoscloud.AVOSSSLSocketFactory sslSocketFactory() -> sslSocketFactory
    void configHttpClient(com.loopj.android.http.AsyncHttpClient) -> configHttpClient
    com.loopj.android.http.AsyncHttpClient clientInstance(boolean) -> clientInstance
    void useUruluServer() -> useUruluServer
    void useOfficalParseServer() -> useOfficalParseServer
    void useAVCloudUS() -> useAVCloudUS
    void switchPushRouter(java.lang.String) -> switchPushRouter
    void useAVCloudCN() -> useAVCloudCN
    void useLocalStg() -> useLocalStg
    java.lang.String buildUrl(java.lang.String) -> buildUrl
    java.lang.String batchUrl() -> batchUrl
    java.lang.String batchSaveRelativeUrl() -> batchSaveRelativeUrl
    com.loopj.android.http.AsyncHttpResponseHandler createGetHandler(com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy,java.lang.String) -> createGetHandler
    com.loopj.android.http.AsyncHttpResponseHandler createPostHandler(com.avos.avoscloud.GenericObjectCallback) -> createPostHandler
    java.lang.String getApiVersion() -> getApiVersion
    void setBaseUrl(java.lang.String) -> setBaseUrl
    java.lang.String getBaseUrl() -> getBaseUrl
    void setServiceHost(com.avos.avoscloud.AVOSServices,java.lang.String) -> setServiceHost
    java.lang.String getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy,long) -> getObject
    java.lang.String generateQueryPath(java.lang.String,com.loopj.android.http.RequestParams) -> generateQueryPath
    void getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy) -> getObject
    void getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,com.avos.avoscloud.AVQuery$CachePolicy,boolean) -> getObject
    void getObject(java.lang.String,com.loopj.android.http.RequestParams,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback) -> getObject
    void putObject(java.lang.String,java.lang.String,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> putObject
    void addHeader(com.loopj.android.http.AsyncHttpClient,java.util.Map) -> addHeader
    void putObject(java.lang.String,java.lang.String,boolean,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> putObject
    void processException(java.lang.Exception,com.avos.avoscloud.GenericObjectCallback) -> processException
    java.util.Map batchItemMap(java.lang.String,java.lang.String,java.lang.Object,java.util.Map) -> batchItemMap
    java.util.Map batchItemMap(java.lang.String,java.lang.String,java.lang.Object) -> batchItemMap
    java.util.List assembleBatchOpsList(java.util.List,java.lang.String) -> assembleBatchOpsList
    java.util.Map batchRequest(java.util.List) -> batchRequest
    void postBatchObject(java.util.List,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback) -> postBatchObject
    void postBatchSave(java.util.List,boolean,boolean,java.util.Map,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> postBatchSave
    void postObject(java.lang.String,java.lang.String,boolean,boolean,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> postObject
    void postObject(java.lang.String,java.lang.String,boolean,com.avos.avoscloud.GenericObjectCallback) -> postObject
    void deleteObject(java.lang.String,boolean,boolean,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> deleteObject
    void deleteObject(java.lang.String,boolean,com.avos.avoscloud.GenericObjectCallback,java.lang.String,java.lang.String) -> deleteObject
    java.io.File archiveRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> archiveRequest
    void handleArchivedRequest(java.io.File,boolean) -> handleArchivedRequest
    void handleArchivedRequest(java.io.File,boolean,com.avos.avoscloud.GenericObjectCallback) -> handleArchivedRequest
    void handleAllArchivedRequest() -> handleAllArchivedRequest
    void handleAllArchivedRequest(boolean) -> handleAllArchivedRequest
    void dumpHttpGetRequest(java.lang.String,com.loopj.android.http.RequestParams) -> dumpHttpGetRequest
    java.lang.String getDebugClientKey() -> getDebugClientKey
    java.lang.String headerString(java.util.Map) -> headerString
    void dumpHttpPutRequest(java.util.Map,java.lang.String,java.lang.String) -> dumpHttpPutRequest
    void dumpHttpPostRequest(java.util.Map,java.lang.String,java.lang.String) -> dumpHttpPostRequest
    void dumpHttpDeleteRequest(java.util.Map,java.lang.String,java.lang.String) -> dumpHttpDeleteRequest
    java.lang.String updateHeaderForPath(java.lang.String,com.loopj.android.http.RequestParams,java.util.Map) -> updateHeaderForPath
    java.lang.String getLastModify(java.lang.String) -> getLastModify
    boolean isLastModifyEnabled() -> isLastModifyEnabled
    void setLastModifyEnabled(boolean) -> setLastModifyEnabled
    void clearLastModifyCache() -> clearLastModifyCache
    java.lang.String lastModifyFromHeaders(org.apache.http.Header[]) -> lastModifyFromHeaders
    boolean isJSONResponse(java.lang.String) -> isJSONResponse
    java.lang.String extractContentType(org.apache.http.Header[]) -> extractContentType
    boolean updateLastModify(java.lang.String,java.lang.String) -> updateLastModify
    void removeLastModifyForUrl(java.lang.String) -> removeLastModifyForUrl
    void registerEventuallyObject(com.avos.avoscloud.AVObject) -> registerEventuallyObject
    void unregisterEvtuallyObject(com.avos.avoscloud.AVObject) -> unregisterEvtuallyObject
com.avos.avoscloud.PaasClient$1 -> com.avos.avoscloud.PaasClient$1:
    com.avos.avoscloud.PaasClient this$0 -> this$0
    java.lang.String onRequestFailed(java.lang.Throwable,java.lang.String) -> onRequestFailed
com.avos.avoscloud.PaasClient$2 -> com.avos.avoscloud.PaasClient$2:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.lang.String val$relativePath -> val$relativePath
    com.loopj.android.http.RequestParams val$parameters -> val$parameters
    boolean val$sync -> val$sync
    java.util.Map val$header -> val$header
    com.avos.avoscloud.AVQuery$CachePolicy val$policy -> val$policy
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$3 -> com.avos.avoscloud.PaasClient$3:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.lang.String val$absolutURLString -> val$absolutURLString
    long val$maxAgeInMilliseconds -> val$maxAgeInMilliseconds
    java.lang.String val$lastModify -> val$lastModify
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$4 -> com.avos.avoscloud.PaasClient$4:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.lang.String val$relativePath -> val$relativePath
    com.loopj.android.http.RequestParams val$parameters -> val$parameters
    boolean val$sync -> val$sync
    java.util.Map val$header -> val$header
    com.avos.avoscloud.AVQuery$CachePolicy val$policy -> val$policy
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$5 -> com.avos.avoscloud.PaasClient$5:
    com.avos.avoscloud.GenericObjectCallback val$callback -> val$callback
    java.io.File val$archivedFile -> val$archivedFile
    com.avos.avoscloud.PaasClient this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.PaasClient$6 -> com.avos.avoscloud.PaasClient$6:
    int compare(java.io.File,java.io.File) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.avos.avoscloud.PaasClient$7 -> com.avos.avoscloud.PaasClient$7:
    int[] $SwitchMap$com$avos$avoscloud$AVQuery$CachePolicy -> $SwitchMap$com$avos$avoscloud$AVQuery$CachePolicy
com.avos.avoscloud.PaasClient$ForgotCookieStore -> com.avos.avoscloud.PaasClient$ForgotCookieStore:
    java.util.List getCookies() -> getCookies
    boolean clearExpired(java.util.Date) -> clearExpired
    void clear() -> clear
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
com.avos.avoscloud.PendingMessageCache -> com.avos.avoscloud.PendingMessageCache:
    java.util.Map msgMapping -> msgMapping
    com.avos.avospush.session.MessageQueue messages -> messages
    java.lang.Class type -> type
    void setupMapping() -> setupMapping
    void offer(com.avos.avospush.session.MessageQueue$HasId) -> offer
    com.avos.avospush.session.MessageQueue$HasId poll(java.lang.String) -> poll
    com.avos.avospush.session.MessageQueue$HasId poll() -> poll
    void clear() -> clear
    boolean isEmpty() -> isEmpty
com.avos.avoscloud.PendingMessageCache$Message -> com.avos.avoscloud.PendingMessageCache$Message:
    java.lang.String msg -> msg
    java.util.List peerIds -> peerIds
    java.lang.String roomId -> roomId
    java.lang.String id -> id
    boolean requestReceipt -> requestReceipt
    java.lang.String cid -> cid
    long timestamp -> timestamp
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
    com.avos.avoscloud.PendingMessageCache$Message getMessage(java.lang.String,java.util.List,java.lang.String,java.lang.String,boolean,java.lang.String) -> getMessage
com.avos.avoscloud.PostHttpResponseHandler -> com.avos.avoscloud.PostHttpResponseHandler:
    com.avos.avoscloud.GenericObjectCallback callback -> callback
    void setCallback(com.avos.avoscloud.GenericObjectCallback) -> setCallback
    com.avos.avoscloud.GenericObjectCallback getCallback() -> getCallback
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.avos.avoscloud.ProgressCallback -> com.avos.avoscloud.ProgressCallback:
    void done(java.lang.Integer) -> done
    void internalDone0(java.lang.Integer,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.PushConnectionRetryController -> com.avos.avoscloud.PushConnectionRetryController:
    com.avos.avospush.session.MessageQueue retryTimeStamps -> retryTimeStamps
    int MAX_RETRY_TIMES -> MAX_RETRY_TIMES
    int RETRY_INTERVAL -> RETRY_INTERVAL
    com.avos.avoscloud.PushConnectionRetryController$ConnectionResponseHandler handler -> handler
    java.util.concurrent.atomic.AtomicInteger failureTimes -> failureTimes
    com.avos.avospush.push.AVPushRouter router -> router
    int CODE_CONNECTION_INIT -> CODE_CONNECTION_INIT
    int CODE_MASTER_SERVER -> CODE_MASTER_SERVER
    int CODE_SECONDARY_SERVER -> CODE_SECONDARY_SERVER
    int CODE_ROUTER_ERROR -> CODE_ROUTER_ERROR
    int nextRequestCode -> nextRequestCode
    android.os.Handler reconnectTaskHandler -> reconnectTaskHandler
    void tryConnect(int) -> tryConnect
    void triggerRouterRequest(long) -> triggerRouterRequest
    void tryConnect() -> tryConnect
    long getInterval() -> getInterval
    void clean() -> clean
    void onSocketSuccess() -> onSocketSuccess
    void onSocketFailure() -> onSocketFailure
    int access$002(com.avos.avoscloud.PushConnectionRetryController,int) -> access$002
    long access$100(com.avos.avoscloud.PushConnectionRetryController) -> access$100
    android.os.Handler access$200(com.avos.avoscloud.PushConnectionRetryController) -> access$200
com.avos.avoscloud.PushConnectionRetryController$1 -> com.avos.avoscloud.PushConnectionRetryController$1:
    com.avos.avoscloud.PushConnectionRetryController$ConnectionResponseHandler val$handler -> val$handler
    com.avos.avoscloud.PushConnectionRetryController this$0 -> this$0
    void onResponse(int,java.lang.String) -> onResponse
com.avos.avoscloud.PushConnectionRetryController$2 -> com.avos.avoscloud.PushConnectionRetryController$2:
    com.avos.avoscloud.PushConnectionRetryController this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.avos.avoscloud.PushConnectionRetryController$ConnectionResponseHandler -> com.avos.avoscloud.PushConnectionRetryController$ConnectionResponseHandler:
    void onResponse(int,java.lang.String) -> onResponse
com.avos.avoscloud.PushService -> com.avos.avoscloud.PushService:
    java.lang.String LOGTAG -> LOGTAG
    com.avos.avoscloud.AVPushConnectionManager sPushConnectionManager -> sPushConnectionManager
    com.avos.avospush.push.AVPushServiceAppManager pushServiceAppManager -> pushServiceAppManager
    java.util.concurrent.ExecutorService executorService -> executorService
    java.lang.Object connecting -> connecting
    boolean isStarted -> isStarted
    com.avos.avospush.push.AVConnectivityReceiver connectivityReceiver -> connectivityReceiver
    com.avos.avospush.push.AVShutdownReceiver shutdownReceiver -> shutdownReceiver
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void processIMRequests(android.content.Intent) -> processIMRequests
    void processSessionCloseIntent(com.avos.avoscloud.AVSession) -> processSessionCloseIntent
    void processSessionOnlineQueryIntent(com.avos.avoscloud.AVSession,java.lang.String) -> processSessionOnlineQueryIntent
    void processSessionTimoutSetIntent(com.avos.avoscloud.AVSession,java.lang.String) -> processSessionTimoutSetIntent
    void processSessionSendMessageIntent(com.avos.avoscloud.AVSession,com.avos.avoscloud.AVMessage) -> processSessionSendMessageIntent
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void startServiceIfRequired(android.content.Context,java.lang.Class) -> startServiceIfRequired
    void startService(android.content.Context,java.lang.Class) -> startService
    void subscribe(android.content.Context,java.lang.String,java.lang.Class) -> subscribe
    void setNotificationIcon(int) -> setNotificationIcon
    void setDefaultPushCallback(android.content.Context,java.lang.Class) -> setDefaultPushCallback
    void unsubscribe(android.content.Context,java.lang.String) -> unsubscribe
    void sendData(com.avos.avospush.session.CommandPacket) -> sendData
    void triggerReconnect() -> triggerReconnect
    void unbindSession(java.lang.String) -> unbindSession
    void setSignatureFactory(com.avos.avoscloud.SignatureFactory) -> setSignatureFactory
    void processSessionOpenIntent(com.avos.avoscloud.AVSession,java.lang.String) -> processSessionOpenIntent
    void processSessionWatchInten(com.avos.avoscloud.AVSession,java.lang.String) -> processSessionWatchInten
    void processSessionUnwatchIntent(com.avos.avoscloud.AVSession,java.lang.String) -> processSessionUnwatchIntent
    void onTaskRemoved(android.content.Intent) -> onTaskRemoved
    boolean isSessionOpen(java.lang.String) -> isSessionOpen
    boolean isPushConnectionBroken() -> isPushConnectionBroken
    void processSessionEventsFromClient(android.content.Intent) -> processSessionEventsFromClient
    void processGroupEventsFromClient(android.content.Intent) -> processGroupEventsFromClient
    void processConversationEventsFromClient(android.content.Intent) -> processConversationEventsFromClient
    com.avos.avoscloud.AVPushConnectionManager getConnectionManagerInstance(android.content.Context) -> getConnectionManagerInstance
    com.avos.avoscloud.AVPushConnectionManager access$000() -> access$000
    java.lang.Object access$100() -> access$100
    java.lang.String access$200() -> access$200
    void access$300(com.avos.avoscloud.PushService,android.content.Intent) -> access$300
com.avos.avoscloud.PushService$1 -> com.avos.avoscloud.PushService$1:
    com.avos.avoscloud.PushService this$0 -> this$0
    void onMobile(android.content.Context) -> onMobile
    void onWifi(android.content.Context) -> onWifi
    void onNotConnected(android.content.Context) -> onNotConnected
com.avos.avoscloud.PushService$2 -> com.avos.avoscloud.PushService$2:
    com.avos.avoscloud.PushService this$0 -> this$0
    void onShutdown(android.content.Context) -> onShutdown
com.avos.avoscloud.PushService$3 -> com.avos.avoscloud.PushService$3:
    android.content.Intent val$intent -> val$intent
    com.avos.avoscloud.PushService this$0 -> this$0
    void run() -> run
com.avos.avoscloud.PushService$3$1 -> com.avos.avoscloud.PushService$3$1:
    java.lang.String val$installationId -> val$installationId
    com.avos.avoscloud.PushService$3 this$1 -> this$1
    void onConnected() -> onConnected
com.avos.avoscloud.PushService$4 -> com.avos.avoscloud.PushService$4:
    android.content.Context val$finalContext -> val$finalContext
    java.lang.Class val$cls -> val$cls
    void run() -> run
com.avos.avoscloud.PushService$5 -> com.avos.avoscloud.PushService$5:
    java.lang.String val$finalChannel -> val$finalChannel
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.PushService$6 -> com.avos.avoscloud.PushService$6:
    int[] $SwitchMap$com$avos$avoscloud$im$v2$Conversation$AVIMOperation -> $SwitchMap$com$avos$avoscloud$im$v2$Conversation$AVIMOperation
com.avos.avoscloud.QiniuUploader -> com.avos.avoscloud.QiniuUploader:
    java.lang.String bucket -> bucket
    java.lang.String token -> token
    java.lang.String key -> key
    java.lang.String hash -> hash
    java.lang.String objectId -> objectId
    java.lang.String url -> url
    java.lang.String[] uploadFileCtx -> uploadFileCtx
    int blockCount -> blockCount
    java.lang.String QINIU_HOST -> QINIU_HOST
    java.lang.String QINIU_CREATE_BLOCK_EP -> QINIU_CREATE_BLOCK_EP
    java.lang.String QINIU_BRICK_UPLOAD_EP -> QINIU_BRICK_UPLOAD_EP
    java.lang.String QINIU_MKFILE_EP -> QINIU_MKFILE_EP
    int WIFI_CHUNK_SIZE -> WIFI_CHUNK_SIZE
    int BLOCK_SIZE -> BLOCK_SIZE
    int NONWIFI_CHUNK_SIZE -> NONWIFI_CHUNK_SIZE
    int DEFAULT_RETRY_TIMES -> DEFAULT_RETRY_TIMES
    int PROGRESS_GET_TOKEN -> PROGRESS_GET_TOKEN
    int PROGRESS_UPLOAD_FILE -> PROGRESS_UPLOAD_FILE
    int PROGRESS_COMPLETE -> PROGRESS_COMPLETE
    int uploadChunkSize -> uploadChunkSize
    com.avos.avoscloud.AVException doWork() -> doWork
    void parseFileKey() -> parseFileKey
    org.apache.http.HttpResponse executeRequest(org.apache.http.client.methods.HttpPost) -> executeRequest
    com.avos.avoscloud.AVException uploadWithBlocks() -> uploadWithBlocks
    int getCurrentBlockSize(byte[],int) -> getCurrentBlockSize
    int getNextChunkSize(int,byte[]) -> getNextChunkSize
    com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData createBlockInQiniu(int,int,int,byte[]) -> createBlockInQiniu
    com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData putFileBlocksToQiniu(int,byte[],com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData,int) -> putFileBlocksToQiniu
    com.avos.avoscloud.QiniuUploader$QiniuMKFileResponseData makeFile(int,java.lang.String,int) -> makeFile
    java.lang.Object parseQiniuResponse(org.apache.http.HttpResponse,java.lang.Class) -> parseQiniuResponse
    void destroyFileObject() -> destroyFileObject
    com.avos.avoscloud.AVException handleGetBucketResponse(java.lang.String,com.avos.avoscloud.AVException) -> handleGetBucketResponse
    java.lang.String getGetBucketParameters() -> getGetBucketParameters
    java.lang.String getUploadPath() -> getUploadPath
    com.avos.avoscloud.AVException fetchUploadBucket() -> fetchUploadBucket
    com.avos.avoscloud.AVException access$000(com.avos.avoscloud.QiniuUploader,java.lang.String,com.avos.avoscloud.AVException) -> access$000
com.avos.avoscloud.QiniuUploader$1 -> com.avos.avoscloud.QiniuUploader$1:
    int val$nextChunkSize -> val$nextChunkSize
    byte[] val$data -> val$data
    int val$blockOffset -> val$blockOffset
    com.avos.avoscloud.QiniuUploader this$0 -> this$0
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
com.avos.avoscloud.QiniuUploader$2 -> com.avos.avoscloud.QiniuUploader$2:
    int val$nextChunkSize -> val$nextChunkSize
    byte[] val$data -> val$data
    int val$blockOffset -> val$blockOffset
    com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData val$chunkData -> val$chunkData
    com.avos.avoscloud.QiniuUploader this$0 -> this$0
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
com.avos.avoscloud.QiniuUploader$3 -> com.avos.avoscloud.QiniuUploader$3:
    com.avos.avoscloud.QiniuUploader this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.QiniuUploader$4 -> com.avos.avoscloud.QiniuUploader$4:
    com.avos.avoscloud.AVException[] val$exceptionWhenGetBucket -> val$exceptionWhenGetBucket
    com.avos.avoscloud.QiniuUploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData -> com.avos.avoscloud.QiniuUploader$QiniuBlockResponseData:
    java.lang.String ctx -> ctx
    long crc32 -> crc32
    int offset -> offset
    java.lang.String host -> host
    java.lang.String checksum -> checksum
com.avos.avoscloud.QiniuUploader$QiniuMKFileResponseData -> com.avos.avoscloud.QiniuUploader$QiniuMKFileResponseData:
    java.lang.String key -> key
    java.lang.String hash -> hash
com.avos.avoscloud.QueryOperation -> com.avos.avoscloud.QueryOperation:
    java.lang.String EQUAL_OP -> EQUAL_OP
    java.lang.String OR_OP -> OR_OP
    java.lang.String key -> key
    java.lang.Object value -> value
    java.lang.String op -> op
    java.lang.String getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.String getOp() -> getOp
    java.lang.Object toResult() -> toResult
    java.lang.Object toResult(java.lang.String) -> toResult
    boolean sameOp(com.avos.avoscloud.QueryOperation) -> sameOp
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.avos.avoscloud.R -> com.avos.avoscloud.R:
com.avos.avoscloud.R$attr -> com.avos.avoscloud.R$attr:
com.avos.avoscloud.R$raw -> com.avos.avoscloud.R$raw:
    int avoscloud_us_ssl -> avoscloud_us_ssl
com.avos.avoscloud.RealTimeRequestController -> com.avos.avoscloud.RealTimeRequestController:
    int REQUEST_FOR_SEND -> REQUEST_FOR_SEND
    int REQUEST_END_SEND -> REQUEST_END_SEND
    android.os.Handler reportRequestDispatcher -> reportRequestDispatcher
    void prepareRequest() -> prepareRequest
    void requestToSend(java.lang.String) -> requestToSend
    android.os.Message makeMessage() -> makeMessage
    boolean requestValidate(android.os.Message) -> requestValidate
    void onRequestDone() -> onRequestDone
    void quit() -> quit
com.avos.avoscloud.RealTimeRequestController$1 -> com.avos.avoscloud.RealTimeRequestController$1:
    boolean hasRequestForSend -> hasRequestForSend
    boolean hasRequestSending -> hasRequestSending
    com.avos.avoscloud.RealTimeRequestController this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
com.avos.avoscloud.RefreshCallback -> com.avos.avoscloud.RefreshCallback:
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.RelationPropertyFilter -> com.avos.avoscloud.RelationPropertyFilter:
    java.lang.Object process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.avos.avoscloud.ReportPolicy -> com.avos.avoscloud.ReportPolicy:
    com.avos.avoscloud.ReportPolicy REALTIME -> REALTIME
    com.avos.avoscloud.ReportPolicy BATCH -> BATCH
    com.avos.avoscloud.ReportPolicy SENDDAILY -> SENDDAILY
    com.avos.avoscloud.ReportPolicy SENDWIFIONLY -> SENDWIFIONLY
    com.avos.avoscloud.ReportPolicy SEND_INTERVAL -> SEND_INTERVAL
    com.avos.avoscloud.ReportPolicy SEND_ON_EXIT -> SEND_ON_EXIT
    int value -> value
    com.avos.avoscloud.ReportPolicy[] $VALUES -> $VALUES
    com.avos.avoscloud.ReportPolicy[] values() -> values
    com.avos.avoscloud.ReportPolicy valueOf(java.lang.String) -> valueOf
    com.avos.avoscloud.ReportPolicy valueOf(int) -> valueOf
    int value() -> value
com.avos.avoscloud.RequestEmailVerifyCallback -> com.avos.avoscloud.RequestEmailVerifyCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.RequestMobileCodeCallback -> com.avos.avoscloud.RequestMobileCodeCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.RequestPasswordResetCallback -> com.avos.avoscloud.RequestPasswordResetCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.S3Uploader -> com.avos.avoscloud.S3Uploader:
    java.lang.String access -> access
    java.lang.String secret -> secret
    java.lang.String objectId -> objectId
    java.lang.String url -> url
    java.lang.String uuid -> uuid
    java.lang.String bucket -> bucket
    java.lang.String S3BasePath -> S3BasePath
    com.avos.avoscloud.AVException doWork() -> doWork
    com.avos.avoscloud.AVException handleGetKeyResponse(java.lang.String) -> handleGetKeyResponse
    com.avos.avoscloud.AVException handlePostResponse(java.lang.String) -> handlePostResponse
    java.lang.String getParametersForUrulu() -> getParametersForUrulu
    java.lang.String getS3Link(java.lang.String) -> getS3Link
    java.lang.String md5WithHmac(java.lang.String) -> md5WithHmac
    java.lang.String authorization(java.lang.String,java.lang.String,java.lang.String) -> authorization
    java.lang.String signature(java.lang.String,java.lang.String,java.lang.String) -> signature
    java.lang.String RFC822FormatStringFromDate(java.util.Date) -> RFC822FormatStringFromDate
    com.avos.avoscloud.AVException access$000(com.avos.avoscloud.S3Uploader,java.lang.String) -> access$000
    com.avos.avoscloud.AVException access$100(com.avos.avoscloud.S3Uploader,java.lang.String) -> access$100
com.avos.avoscloud.S3Uploader$1 -> com.avos.avoscloud.S3Uploader$1:
    com.avos.avoscloud.AVException[] val$exceptionWhenGetBucket -> val$exceptionWhenGetBucket
    com.avos.avoscloud.S3Uploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.S3Uploader$2 -> com.avos.avoscloud.S3Uploader$2:
    com.avos.avoscloud.AVException[] val$exceptionWhenGetBucket -> val$exceptionWhenGetBucket
    com.avos.avoscloud.S3Uploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.S3Uploader$3 -> com.avos.avoscloud.S3Uploader$3:
    com.avos.avoscloud.S3Uploader this$0 -> this$0
    void transferred(long) -> transferred
com.avos.avoscloud.SaveCallback -> com.avos.avoscloud.SaveCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.SendCallback -> com.avos.avoscloud.SendCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.Session -> com.avos.avoscloud.Session:
    int OPERATION_SEND_MESSAGE -> OPERATION_SEND_MESSAGE
    int OPERATION_WATCH_PEERS -> OPERATION_WATCH_PEERS
    int OPERATION_UNWATCH_PEERS -> OPERATION_UNWATCH_PEERS
    int OPERATION_SET_TIMEOUT -> OPERATION_SET_TIMEOUT
    int OPERATION_OPEN_SESSION -> OPERATION_OPEN_SESSION
    int OPERATION_CLOSE_SESSION -> OPERATION_CLOSE_SESSION
    int OPERATION_ONLINE_QUERY -> OPERATION_ONLINE_QUERY
    int OPERATION_UNKNOW -> OPERATION_UNKNOW
    int DEFAULT_SESSION_TIMEOUT_SECS -> DEFAULT_SESSION_TIMEOUT_SECS
    java.lang.String PARAM_SESSION_PEERIDS -> PARAM_SESSION_PEERIDS
    java.lang.String AV_SESSION_PREFERENCE_MESSAGE_KEY -> AV_SESSION_PREFERENCE_MESSAGE_KEY
    java.lang.String AV_SESSION_PREFERENCE_PEERIDS_KEY -> AV_SESSION_PREFERENCE_PEERIDS_KEY
    java.lang.String AV_SESSION_PREFERENCE_ONLINE_KEY -> AV_SESSION_PREFERENCE_ONLINE_KEY
    java.lang.String AV_SESSION_PREFERENCE_OFFLINE_KEY -> AV_SESSION_PREFERENCE_OFFLINE_KEY
    java.lang.String AV_SESSION_INTENT_ACTION -> AV_SESSION_INTENT_ACTION
    java.lang.String AV_SESSION_INTENT_SELFID_KEY -> AV_SESSION_INTENT_SELFID_KEY
    java.lang.String AV_SESSION_INTENT_OPERATION_KEY -> AV_SESSION_INTENT_OPERATION_KEY
    java.lang.String AV_SESSION_INTENT_DATA_KEY -> AV_SESSION_INTENT_DATA_KEY
    java.lang.String AV_SESSION_INTENT_STATUS_KEY -> AV_SESSION_INTENT_STATUS_KEY
    java.lang.String AV_SESSION_INTENT_THROWABLE_KEY -> AV_SESSION_INTENT_THROWABLE_KEY
    int STATUS_SESSION_OPEN -> STATUS_SESSION_OPEN
    int STATUS_SESSION_PAUSE -> STATUS_SESSION_PAUSE
    int STATUS_SESSION_RESUME -> STATUS_SESSION_RESUME
    int STATUS_SESSION_ONMESSAGE -> STATUS_SESSION_ONMESSAGE
    int STATUS_SESSION_ONMESSAGESEND -> STATUS_SESSION_ONMESSAGESEND
    int STATUS_SESSION_ONMESSAGEFAILURE -> STATUS_SESSION_ONMESSAGEFAILURE
    int STATUS_SESSION_ONSTATUSONLINE -> STATUS_SESSION_ONSTATUSONLINE
    int STATUS_SESSION_ONSTATUSOFFLINE -> STATUS_SESSION_ONSTATUSOFFLINE
    int STATUS_SESSION_ONERROR -> STATUS_SESSION_ONERROR
    int STATUS_SESSION_QUERY_CALLBACK -> STATUS_SESSION_QUERY_CALLBACK
    int STATUS_SESSION_ONPEERSWATCHED -> STATUS_SESSION_ONPEERSWATCHED
    int STATUS_SESSION_ONPEERSUNWATCHED -> STATUS_SESSION_ONPEERSUNWATCHED
    int STATUS_SESSION_ONMESSGEDELIVERED -> STATUS_SESSION_ONMESSGEDELIVERED
    int STATUS_SESSION_CLOSE -> STATUS_SESSION_CLOSE
    int SESSION_PACKET_MAX_LENGTH -> SESSION_PACKET_MAX_LENGTH
    int SESSION_PEERID_MAX_SIZE -> SESSION_PEERID_MAX_SIZE
    java.lang.String ERROR_INVALID_SESSION_ID -> ERROR_INVALID_SESSION_ID
    void open(java.lang.String,java.util.List) -> open
    void open(java.util.List) -> open
    void close() -> close
    void setMessageTimeout(int) -> setMessageTimeout
    boolean watchPeers(java.util.List) -> watchPeers
    void unwatchPeers(java.util.List) -> unwatchPeers
    java.lang.String getSelfPeerId() -> getSelfPeerId
    void queryOnlinePeers(java.util.List,com.avos.avoscloud.OnlinePeerQueryListener) -> queryOnlinePeers
    boolean isOnline(java.lang.String) -> isOnline
    boolean isWatching(java.lang.String) -> isWatching
    java.util.List getAllPeers() -> getAllPeers
    java.util.List getOnlinePeers() -> getOnlinePeers
    com.avos.avoscloud.SignatureFactory getSignatureFactory() -> getSignatureFactory
    com.avos.avoscloud.Group getGroup(java.lang.String) -> getGroup
    com.avos.avoscloud.Group getGroup() -> getGroup
    boolean isOpen() -> isOpen
    com.avos.avoscloud.AVHistoryMessageQuery getHistoryMessageQuery() -> getHistoryMessageQuery
com.avos.avoscloud.SessionListener -> com.avos.avoscloud.SessionListener:
    void onSessionOpen(android.content.Context,com.avos.avoscloud.Session) -> onSessionOpen
    void onSessionPaused(android.content.Context,com.avos.avoscloud.Session) -> onSessionPaused
    void onSessionResumed(android.content.Context,com.avos.avoscloud.Session) -> onSessionResumed
    void onPeersWatched(android.content.Context,com.avos.avoscloud.Session,java.util.List) -> onPeersWatched
    void onPeersUnwatched(android.content.Context,com.avos.avoscloud.Session,java.util.List) -> onPeersUnwatched
    void onMessage(android.content.Context,com.avos.avoscloud.Session,com.avos.avoscloud.AVMessage) -> onMessage
    void onMessageSent(android.content.Context,com.avos.avoscloud.Session,com.avos.avoscloud.AVMessage) -> onMessageSent
    void onMessageDelivered(android.content.Context,com.avos.avoscloud.Session,com.avos.avoscloud.AVMessage) -> onMessageDelivered
    void onMessageFailure(android.content.Context,com.avos.avoscloud.Session,com.avos.avoscloud.AVMessage) -> onMessageFailure
    void onStatusOnline(android.content.Context,com.avos.avoscloud.Session,java.util.List) -> onStatusOnline
    void onStatusOffline(android.content.Context,com.avos.avoscloud.Session,java.util.List) -> onStatusOffline
    void onError(android.content.Context,com.avos.avoscloud.Session,java.lang.Throwable) -> onError
    void onSessionClose(android.content.Context,com.avos.avoscloud.Session) -> onSessionClose
com.avos.avoscloud.SessionManager -> com.avos.avoscloud.SessionManager:
    java.util.Map cachedSessions -> cachedSessions
    java.lang.String selfId -> selfId
    java.util.Set allPeersId -> allPeersId
    java.util.Set onlinePeersId -> onlinePeersId
    com.avos.avoscloud.SignatureFactory signatureFactory -> signatureFactory
    java.util.Queue peerQueryListeners -> peerQueryListeners
    java.util.Map signatureFactoryMap -> signatureFactoryMap
    com.avos.avoscloud.SessionManager getInstance(java.lang.String) -> getInstance
    void open(java.lang.String,java.util.List) -> open
    void open(java.util.List) -> open
    void close() -> close
    void setMessageTimeout(int) -> setMessageTimeout
    void sendMessage(com.avos.avoscloud.AVMessage) -> sendMessage
    boolean watchPeers(java.util.List) -> watchPeers
    void unwatchPeers(java.util.List) -> unwatchPeers
    java.lang.String getSelfPeerId() -> getSelfPeerId
    void queryOnlinePeers(java.util.List,com.avos.avoscloud.OnlinePeerQueryListener) -> queryOnlinePeers
    boolean isOnline(java.lang.String) -> isOnline
    boolean isWatching(java.lang.String) -> isWatching
    void setAllPeers(java.util.List) -> setAllPeers
    java.util.List getAllPeers() -> getAllPeers
    java.util.List getOnlinePeers() -> getOnlinePeers
    void setSignatureFactory(com.avos.avoscloud.SignatureFactory) -> setSignatureFactory
    com.avos.avoscloud.SignatureFactory getSignatureFactory() -> getSignatureFactory
    void sendErrorBroadcast(java.lang.Exception) -> sendErrorBroadcast
    boolean validateNullablePeerIds(java.util.List) -> validateNullablePeerIds
    boolean validatePeerIds(java.util.List) -> validatePeerIds
    com.avos.avoscloud.Group getGroup(java.lang.String) -> getGroup
    com.avos.avoscloud.Group getGroup() -> getGroup
    boolean isOpen() -> isOpen
    com.avos.avoscloud.AVHistoryMessageQuery getHistoryMessageQuery() -> getHistoryMessageQuery
com.avos.avoscloud.SessionPausedException -> com.avos.avoscloud.SessionPausedException:
    java.lang.String message -> message
    java.util.List peerIds -> peerIds
    com.avos.avoscloud.SessionPausedException$Actions action -> action
    com.avos.avoscloud.SessionPausedException$Actions getAction() -> getAction
    void setAction(com.avos.avoscloud.SessionPausedException$Actions) -> setAction
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.util.List getPeerIds() -> getPeerIds
    void setPeerIds(java.util.List) -> setPeerIds
com.avos.avoscloud.SessionPausedException$Actions -> com.avos.avoscloud.SessionPausedException$Actions:
    com.avos.avoscloud.SessionPausedException$Actions SEND_MESSAGE -> SEND_MESSAGE
    com.avos.avoscloud.SessionPausedException$Actions WATCH -> WATCH
    com.avos.avoscloud.SessionPausedException$Actions UNWATCH -> UNWATCH
    com.avos.avoscloud.SessionPausedException$Actions JOIN -> JOIN
    com.avos.avoscloud.SessionPausedException$Actions KICK -> KICK
    com.avos.avoscloud.SessionPausedException$Actions INVITE -> INVITE
    com.avos.avoscloud.SessionPausedException$Actions QUIT -> QUIT
    com.avos.avoscloud.SessionPausedException$Actions[] $VALUES -> $VALUES
    com.avos.avoscloud.SessionPausedException$Actions[] values() -> values
    com.avos.avoscloud.SessionPausedException$Actions valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.SignUpCallback -> com.avos.avoscloud.SignUpCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.Signature -> com.avos.avoscloud.Signature:
    java.lang.String signature -> signature
    long timestamp -> timestamp
    java.lang.String nonce -> nonce
    java.util.List signedPeerIds -> signedPeerIds
    java.util.List getSignedPeerIds() -> getSignedPeerIds
    void setSignedPeerIds(java.util.List) -> setSignedPeerIds
    java.lang.String getSignature() -> getSignature
    void setSignature(java.lang.String) -> setSignature
    long getTimestamp() -> getTimestamp
    void setTimestamp(long) -> setTimestamp
    java.lang.String getNonce() -> getNonce
    void setNonce(java.lang.String) -> setNonce
com.avos.avoscloud.SignatureCallback -> com.avos.avoscloud.SignatureCallback:
    com.avos.avoscloud.Signature computeSignature() -> computeSignature
    void onSignatureReady(com.avos.avoscloud.Signature,com.avos.avoscloud.AVException) -> onSignatureReady
com.avos.avoscloud.SignatureFactory -> com.avos.avoscloud.SignatureFactory:
    com.avos.avoscloud.Signature createSignature(java.lang.String,java.util.List) -> createSignature
    com.avos.avoscloud.Signature createGroupSignature(java.lang.String,java.lang.String,java.util.List,java.lang.String) -> createGroupSignature
    com.avos.avoscloud.Signature createConversationSignature(java.lang.String,java.lang.String,java.util.List,java.lang.String) -> createConversationSignature
com.avos.avoscloud.SignatureFactory$SignatureException -> com.avos.avoscloud.SignatureFactory$SignatureException:
com.avos.avoscloud.StatusCallback -> com.avos.avoscloud.StatusCallback:
    void done(com.avos.avoscloud.AVStatus,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.AVStatus,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.StatusListCallback -> com.avos.avoscloud.StatusListCallback:
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.util.List,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.UpdatePasswordCallback -> com.avos.avoscloud.UpdatePasswordCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.UrlDirectlyUploader -> com.avos.avoscloud.UrlDirectlyUploader:
    com.avos.avoscloud.AVException doWork() -> doWork
    java.lang.String getFileRequestParameters() -> getFileRequestParameters
com.avos.avoscloud.UrlDirectlyUploader$1 -> com.avos.avoscloud.UrlDirectlyUploader$1:
    com.avos.avoscloud.AVException[] val$exceptionSaveFile -> val$exceptionSaveFile
    com.avos.avoscloud.UrlDirectlyUploader this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.im.v2.AVIMBaseBroadcastReceiver -> com.avos.avoscloud.im.v2.AVIMBaseBroadcastReceiver:
    com.avos.avoscloud.AVCallback callback -> callback
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void execute(android.content.Intent,java.lang.Throwable) -> execute
com.avos.avoscloud.im.v2.AVIMClient -> com.avos.avoscloud.im.v2.AVIMClient:
    java.lang.String clientId -> clientId
    java.util.concurrent.ConcurrentHashMap clients -> clients
    java.util.concurrent.ConcurrentHashMap conversationCache -> conversationCache
    com.avos.avoscloud.SignatureFactory factory -> factory
    com.avos.avoscloud.im.v2.AVIMClientEventHandler clientEventHandler -> clientEventHandler
    com.avos.avoscloud.SignatureFactory getSignatureFactory() -> getSignatureFactory
    void setSignatureFactory(com.avos.avoscloud.SignatureFactory) -> setSignatureFactory
    com.avos.avoscloud.im.v2.AVIMClient getInstance(java.lang.String) -> getInstance
    void open(com.avos.avoscloud.im.v2.callback.AVIMClientCallback) -> open
    java.lang.String getClientId() -> getClientId
    void createConversation(java.util.List,java.util.Map,com.avos.avoscloud.im.v2.callback.AVIMConversationCreatedCallback) -> createConversation
    void createConversation(java.util.List,java.lang.String,java.util.Map,com.avos.avoscloud.im.v2.callback.AVIMConversationCreatedCallback) -> createConversation
    void createConversation(java.util.List,java.lang.String,java.util.Map,boolean,com.avos.avoscloud.im.v2.callback.AVIMConversationCreatedCallback) -> createConversation
    com.avos.avoscloud.im.v2.AVIMConversation getConversation(java.lang.String) -> getConversation
    com.avos.avoscloud.im.v2.AVIMConversationQuery getQuery() -> getQuery
    void setClientEventHandler(com.avos.avoscloud.im.v2.AVIMClientEventHandler) -> setClientEventHandler
    com.avos.avoscloud.im.v2.AVIMClientEventHandler getClientEventHandler() -> getClientEventHandler
    void close(com.avos.avoscloud.im.v2.callback.AVIMClientCallback) -> close
    void sendClientCMDToPushService(java.lang.String,android.content.BroadcastReceiver,com.avos.avoscloud.im.v2.Conversation$AVIMOperation) -> sendClientCMDToPushService
    com.avos.avoscloud.AVException validateConversationMembers(java.util.List) -> validateConversationMembers
    void removeConversationCache(com.avos.avoscloud.im.v2.AVIMConversation) -> removeConversationCache
    com.alibaba.fastjson.JSONObject getConversationWhereQuery(java.util.Map) -> getConversationWhereQuery
    com.alibaba.fastjson.JSONObject assembleConversationAttributes(java.util.Map) -> assembleConversationAttributes
    boolean equals(java.lang.Object) -> equals
com.avos.avoscloud.im.v2.AVIMClient$1 -> com.avos.avoscloud.im.v2.AVIMClient$1:
    com.avos.avoscloud.im.v2.AVIMClient this$0 -> this$0
    void execute(android.content.Intent,java.lang.Throwable) -> execute
com.avos.avoscloud.im.v2.AVIMClient$2 -> com.avos.avoscloud.im.v2.AVIMClient$2:
    java.util.List val$conversationMembers -> val$conversationMembers
    java.util.Map val$attributes -> val$attributes
    boolean val$isTransient -> val$isTransient
    com.avos.avoscloud.im.v2.AVIMClient this$0 -> this$0
    void execute(android.content.Intent,java.lang.Throwable) -> execute
com.avos.avoscloud.im.v2.AVIMClient$3 -> com.avos.avoscloud.im.v2.AVIMClient$3:
    com.avos.avoscloud.im.v2.AVIMClient this$0 -> this$0
    void execute(android.content.Intent,java.lang.Throwable) -> execute
com.avos.avoscloud.im.v2.AVIMClientEventHandler -> com.avos.avoscloud.im.v2.AVIMClientEventHandler:
    void onConnectionPaused(com.avos.avoscloud.im.v2.AVIMClient) -> onConnectionPaused
    void onConnectionResume(com.avos.avoscloud.im.v2.AVIMClient) -> onConnectionResume
    void processEvent0(int,java.lang.Object,java.lang.Object,java.lang.Object) -> processEvent0
com.avos.avoscloud.im.v2.AVIMConversation -> com.avos.avoscloud.im.v2.AVIMConversation:
    int TRANSIENT_MESSAGE_FLAG -> TRANSIENT_MESSAGE_FLAG
    int NONTRANSIENT_MESSAGE_FLAG -> NONTRANSIENT_MESSAGE_FLAG
    int RECEIPT_MESSAGE_FLAG -> RECEIPT_MESSAGE_FLAG
    java.lang.String NAME_KEY -> NAME_KEY
    java.lang.String conversationId -> conversationId
    java.util.Set members -> members
    java.util.Map attributes -> attributes
    java.util.Map pendingAttributes -> pendingAttributes
    com.avos.avoscloud.im.v2.AVIMClient client -> client
    java.lang.String creator -> creator
    boolean isTransient -> isTransient
    java.lang.String getConversationId() -> getConversationId
    void setConversationId(java.lang.String) -> setConversationId
    void setCreator(java.lang.String) -> setCreator
    java.lang.String getCreator() -> getCreator
    void sendMessage(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.callback.AVIMConversationCallback) -> sendMessage
    void sendMessage(com.avos.avoscloud.im.v2.AVIMMessage,int,com.avos.avoscloud.im.v2.callback.AVIMConversationCallback) -> sendMessage
    void queryMessages(com.avos.avoscloud.im.v2.callback.AVIMMessagesQueryCallback) -> queryMessages
    void queryMessages(int,com.avos.avoscloud.im.v2.callback.AVIMMessagesQueryCallback) -> queryMessages
    void queryMessages(java.lang.String,long,int,com.avos.avoscloud.im.v2.callback.AVIMMessagesQueryCallback) -> queryMessages
    void getMemberCount(com.avos.avoscloud.im.v2.callback.AVIMConversationMemberCountCallback) -> getMemberCount
    void addMembers(java.util.List,com.avos.avoscloud.im.v2.callback.AVIMConversationCallback) -> addMembers
    void kickMembers(java.util.List,com.avos.avoscloud.im.v2.callback.AVIMConversationCallback) -> kickMembers
    java.util.List getMembers() -> getMembers
    void mute(com.avos.avoscloud.im.v2.callback.AVIMConversationCallback) -> mute
    void unmute(com.avos.avoscloud.im.v2.callback.AVIMConversationCallback) -> unmute
    void setMembers(java.util.List) -> setMembers
    void quit(com.avos.avoscloud.im.v2.callback.AVIMConversationCallback) -> quit
    java.lang.Object getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.Object) -> setAttribute
    void setAttributes(java.util.Map) -> setAttributes
    void setAttributes(java.util.Map,boolean) -> setAttributes
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    void updateInfoInBackground(com.avos.avoscloud.im.v2.callback.AVIMConversationCallback) -> updateInfoInBackground
    void fetchInfoInBackground(com.avos.avoscloud.im.v2.callback.AVIMConversationCallback) -> fetchInfoInBackground
    void join(com.avos.avoscloud.im.v2.callback.AVIMConversationCallback) -> join
    boolean isTransient() -> isTransient
    void sendCMDToPushService(com.avos.avoscloud.im.v2.AVIMMessage,int,com.avos.avoscloud.AVCallback) -> sendCMDToPushService
    void sendCMDToPushService(java.lang.String,com.avos.avoscloud.im.v2.Conversation$AVIMOperation,com.avos.avoscloud.AVCallback,com.avos.avoscloud.im.v2.AVIMConversation$OperationCompleteCallback) -> sendCMDToPushService
    void sendCMDToPushService(java.lang.String,com.avos.avoscloud.im.v2.Conversation$AVIMOperation,com.avos.avoscloud.AVCallback) -> sendCMDToPushService
    void sendCMDToPushService(java.lang.String,com.avos.avoscloud.im.v2.AVIMMessage,int,com.avos.avoscloud.im.v2.Conversation$AVIMOperation,com.avos.avoscloud.AVCallback,com.avos.avoscloud.im.v2.AVIMConversation$OperationCompleteCallback) -> sendCMDToPushService
    void access$000(com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.im.v2.AVIMMessage,int,com.avos.avoscloud.AVCallback) -> access$000
com.avos.avoscloud.im.v2.AVIMConversation$1 -> com.avos.avoscloud.im.v2.AVIMConversation$1:
    com.avos.avoscloud.im.v2.AVIMMessage val$message -> val$message
    int val$messageFlag -> val$messageFlag
    com.avos.avoscloud.im.v2.callback.AVIMConversationCallback val$callback -> val$callback
    com.avos.avoscloud.im.v2.AVIMConversation this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.im.v2.AVIMConversation$2 -> com.avos.avoscloud.im.v2.AVIMConversation$2:
    java.util.List val$friendsList -> val$friendsList
    com.avos.avoscloud.im.v2.AVIMConversation this$0 -> this$0
    void onComplete() -> onComplete
    void onFailure() -> onFailure
com.avos.avoscloud.im.v2.AVIMConversation$3 -> com.avos.avoscloud.im.v2.AVIMConversation$3:
    java.util.List val$friendsList -> val$friendsList
    com.avos.avoscloud.im.v2.AVIMConversation this$0 -> this$0
    void onComplete() -> onComplete
    void onFailure() -> onFailure
com.avos.avoscloud.im.v2.AVIMConversation$4 -> com.avos.avoscloud.im.v2.AVIMConversation$4:
    com.avos.avoscloud.im.v2.AVIMConversation this$0 -> this$0
    void onComplete() -> onComplete
    void onFailure() -> onFailure
com.avos.avoscloud.im.v2.AVIMConversation$5 -> com.avos.avoscloud.im.v2.AVIMConversation$5:
    com.avos.avoscloud.im.v2.callback.AVIMConversationCallback val$callback -> val$callback
    com.avos.avoscloud.im.v2.AVIMConversation this$0 -> this$0
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.im.v2.AVIMConversation$6 -> com.avos.avoscloud.im.v2.AVIMConversation$6:
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation val$operation -> val$operation
    com.avos.avoscloud.im.v2.AVIMConversation$OperationCompleteCallback val$occ -> val$occ
    com.avos.avoscloud.im.v2.AVIMMessage val$message -> val$message
    com.avos.avoscloud.im.v2.AVIMConversation this$0 -> this$0
    void execute(android.content.Intent,java.lang.Throwable) -> execute
com.avos.avoscloud.im.v2.AVIMConversation$OperationCompleteCallback -> com.avos.avoscloud.im.v2.AVIMConversation$OperationCompleteCallback:
    void onComplete() -> onComplete
    void onFailure() -> onFailure
com.avos.avoscloud.im.v2.AVIMConversationEventHandler -> com.avos.avoscloud.im.v2.AVIMConversationEventHandler:
    void onMemberLeft(com.avos.avoscloud.im.v2.AVIMClient,com.avos.avoscloud.im.v2.AVIMConversation,java.util.List,java.lang.String) -> onMemberLeft
    void onMemberJoined(com.avos.avoscloud.im.v2.AVIMClient,com.avos.avoscloud.im.v2.AVIMConversation,java.util.List,java.lang.String) -> onMemberJoined
    void onKicked(com.avos.avoscloud.im.v2.AVIMClient,com.avos.avoscloud.im.v2.AVIMConversation,java.lang.String) -> onKicked
    void onInvited(com.avos.avoscloud.im.v2.AVIMClient,com.avos.avoscloud.im.v2.AVIMConversation,java.lang.String) -> onInvited
    void processEvent0(int,java.lang.Object,java.lang.Object,java.lang.Object) -> processEvent0
com.avos.avoscloud.im.v2.AVIMConversationQuery -> com.avos.avoscloud.im.v2.AVIMConversationQuery:
    com.avos.avoscloud.im.v2.AVIMClient client -> client
    java.lang.String order -> order
    java.util.Map where -> where
    java.lang.String EQUAL_OP -> EQUAL_OP
    int limit -> limit
    int skip -> skip
    com.avos.avoscloud.im.v2.AVIMConversationQuery withMembers(java.util.List) -> withMembers
    com.avos.avoscloud.im.v2.AVIMConversationQuery withMembers(java.util.List,boolean) -> withMembers
    com.avos.avoscloud.im.v2.AVIMConversationQuery containsMembers(java.util.List) -> containsMembers
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereEqualTo(java.lang.String,java.lang.Object) -> whereEqualTo
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereLessThan(java.lang.String,java.lang.Object) -> whereLessThan
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereLessThanOrEqualsTo(java.lang.String,java.lang.Object) -> whereLessThanOrEqualsTo
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereGreaterThan(java.lang.String,java.lang.Object) -> whereGreaterThan
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereGreaterThanOrEqualsTo(java.lang.String,java.lang.Object) -> whereGreaterThanOrEqualsTo
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereNotEqualsTo(java.lang.String,java.lang.Object) -> whereNotEqualsTo
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereContainsIn(java.lang.String,java.util.Collection) -> whereContainsIn
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereNotContainsIn(java.lang.String,java.util.Collection) -> whereNotContainsIn
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereContainsAll(java.lang.String,java.util.Collection) -> whereContainsAll
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereContains(java.lang.String,java.lang.String) -> whereContains
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereStartsWith(java.lang.String,java.lang.String) -> whereStartsWith
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereEndsWith(java.lang.String,java.lang.String) -> whereEndsWith
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereMatches(java.lang.String,java.lang.String) -> whereMatches
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereMatches(java.lang.String,java.lang.String,java.lang.String) -> whereMatches
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereNear(java.lang.String,com.avos.avoscloud.AVGeoPoint) -> whereNear
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereWithinGeoBox(java.lang.String,com.avos.avoscloud.AVGeoPoint,com.avos.avoscloud.AVGeoPoint) -> whereWithinGeoBox
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereWithinKilometers(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinKilometers
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereWithinMiles(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinMiles
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereWithinRadians(java.lang.String,com.avos.avoscloud.AVGeoPoint,double) -> whereWithinRadians
    com.avos.avoscloud.im.v2.AVIMConversationQuery setLimit(int) -> setLimit
    com.avos.avoscloud.im.v2.AVIMConversationQuery limit(int) -> limit
    com.avos.avoscloud.im.v2.AVIMConversationQuery setSkip(int) -> setSkip
    com.avos.avoscloud.im.v2.AVIMConversationQuery skip(int) -> skip
    com.avos.avoscloud.im.v2.AVIMConversationQuery orderByAscending(java.lang.String) -> orderByAscending
    com.avos.avoscloud.im.v2.AVIMConversationQuery orderByDescending(java.lang.String) -> orderByDescending
    com.avos.avoscloud.im.v2.AVIMConversationQuery whereSizeEqual(java.lang.String,int) -> whereSizeEqual
    com.avos.avoscloud.im.v2.AVIMConversationQuery addWhereItem(java.lang.String,java.lang.String,java.lang.Object) -> addWhereItem
    com.avos.avoscloud.im.v2.AVIMConversationQuery addWhereItem(com.avos.avoscloud.QueryOperation) -> addWhereItem
    java.lang.String getAttributeKey(java.lang.String) -> getAttributeKey
    java.lang.String getColumnKey(java.lang.String) -> getColumnKey
    void removeDuplications(com.avos.avoscloud.QueryOperation,java.util.List) -> removeDuplications
    java.util.Map assembleParameters() -> assembleParameters
    void findInBackground(com.avos.avoscloud.im.v2.callback.AVIMConversationQueryCallback) -> findInBackground
    java.util.List parseQueryResult(com.alibaba.fastjson.JSONArray) -> parseQueryResult
    java.util.List access$000(com.avos.avoscloud.im.v2.AVIMConversationQuery,com.alibaba.fastjson.JSONArray) -> access$000
com.avos.avoscloud.im.v2.AVIMConversationQuery$1 -> com.avos.avoscloud.im.v2.AVIMConversationQuery$1:
    com.avos.avoscloud.im.v2.callback.AVIMConversationQueryCallback val$callback -> val$callback
    com.avos.avoscloud.im.v2.AVIMConversationQuery this$0 -> this$0
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.avos.avoscloud.im.v2.AVIMMessage -> com.avos.avoscloud.im.v2.AVIMMessage:
    java.lang.String conversationId -> conversationId
    java.lang.String content -> content
    java.lang.String from -> from
    long timestamp -> timestamp
    long receiptTimestamp -> receiptTimestamp
    java.lang.String messageId -> messageId
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus status -> status
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType ioType -> ioType
    android.os.Parcelable$Creator CREATOR -> CREATOR
    java.lang.String getConversationId() -> getConversationId
    void setConversationId(java.lang.String) -> setConversationId
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    java.lang.String getFrom() -> getFrom
    void setFrom(java.lang.String) -> setFrom
    long getTimestamp() -> getTimestamp
    void setTimestamp(long) -> setTimestamp
    long getReceiptTimestamp() -> getReceiptTimestamp
    void setReceiptTimestamp(long) -> setReceiptTimestamp
    void setMessageStatus(com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus) -> setMessageStatus
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus getMessageStatus() -> getMessageStatus
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType getMessageIOType() -> getMessageIOType
    void setMessageIOType(com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType) -> setMessageIOType
    java.lang.String getMessageId() -> getMessageId
    void setMessageId(java.lang.String) -> setMessageId
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.avos.avoscloud.im.v2.AVIMMessage$1 -> com.avos.avoscloud.im.v2.AVIMMessage$1:
    com.avos.avoscloud.im.v2.AVIMMessage createFromParcel(android.os.Parcel) -> createFromParcel
    com.avos.avoscloud.im.v2.AVIMMessage[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType -> com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType:
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType AVIMMessageIOTypeIn -> AVIMMessageIOTypeIn
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType AVIMMessageIOTypeOut -> AVIMMessageIOTypeOut
    int ioType -> ioType
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType[] $VALUES -> $VALUES
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType[] values() -> values
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType valueOf(java.lang.String) -> valueOf
    int getIOType() -> getIOType
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageIOType getMessageIOType(int) -> getMessageIOType
com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus -> com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus:
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus AVIMMessageStatusNone -> AVIMMessageStatusNone
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus AVIMMessageStatusSending -> AVIMMessageStatusSending
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus AVIMMessageStatusSent -> AVIMMessageStatusSent
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus AVIMMessageStatusReceipt -> AVIMMessageStatusReceipt
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus AVIMMessageStatusFailed -> AVIMMessageStatusFailed
    int statusCode -> statusCode
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus[] $VALUES -> $VALUES
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus[] values() -> values
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus valueOf(java.lang.String) -> valueOf
    int getStatusCode() -> getStatusCode
    com.avos.avoscloud.im.v2.AVIMMessage$AVIMMessageStatus getMessageStatus(int) -> getMessageStatus
com.avos.avoscloud.im.v2.AVIMMessageField -> com.avos.avoscloud.im.v2.AVIMMessageField:
    java.lang.String name() -> name
com.avos.avoscloud.im.v2.AVIMMessageHandler -> com.avos.avoscloud.im.v2.AVIMMessageHandler:
    void onMessage(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.im.v2.AVIMClient) -> onMessage
    void onMessageReceipt(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.im.v2.AVIMClient) -> onMessageReceipt
com.avos.avoscloud.im.v2.AVIMMessageManager -> com.avos.avoscloud.im.v2.AVIMMessageManager:
    android.util.SparseArray messageTypesRepository -> messageTypesRepository
    com.avos.avoscloud.im.v2.AVIMMessageHandler defaultMessageHandler -> defaultMessageHandler
    java.util.concurrent.ConcurrentHashMap messageHandlerRepository -> messageHandlerRepository
    com.avos.avoscloud.im.v2.AVIMConversationEventHandler conversationEventHandler -> conversationEventHandler
    void registerAVIMMessageType(java.lang.Class) -> registerAVIMMessageType
    void registerDefaultMessageHandler(com.avos.avoscloud.im.v2.AVIMMessageHandler) -> registerDefaultMessageHandler
    void registerMessageHandler(java.lang.Class,com.avos.avoscloud.im.v2.MessageHandler) -> registerMessageHandler
    void unregisterMessageHandler(java.lang.Class,com.avos.avoscloud.im.v2.MessageHandler) -> unregisterMessageHandler
    void setConversationEventHandler(com.avos.avoscloud.im.v2.AVIMConversationEventHandler) -> setConversationEventHandler
    com.avos.avoscloud.im.v2.AVIMConversationEventHandler getConversationEventHandler() -> getConversationEventHandler
    void processMessage(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMClient) -> processMessage
    void processMessageReceipt(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMClient) -> processMessageReceipt
    void retrieveAllMessageHandlers(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMConversation,boolean) -> retrieveAllMessageHandlers
    com.avos.avoscloud.im.v2.AVIMMessage parseTypedMessage(com.avos.avoscloud.im.v2.AVIMMessage) -> parseTypedMessage
    int getMessageType(java.lang.String) -> getMessageType
    void access$000(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMConversation,boolean) -> access$000
com.avos.avoscloud.im.v2.AVIMMessageManager$1 -> com.avos.avoscloud.im.v2.AVIMMessageManager$1:
    com.avos.avoscloud.im.v2.AVIMMessage val$finalMessageObject -> val$finalMessageObject
    com.avos.avoscloud.im.v2.AVIMConversation val$conversation -> val$conversation
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.im.v2.AVIMMessageManager$2 -> com.avos.avoscloud.im.v2.AVIMMessageManager$2:
    com.avos.avoscloud.im.v2.AVIMMessage val$finalMessageObject -> val$finalMessageObject
    com.avos.avoscloud.im.v2.AVIMConversation val$conversation -> val$conversation
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.im.v2.AVIMMessageManagerHelper -> com.avos.avoscloud.im.v2.AVIMMessageManagerHelper:
    void processMessage(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMClient) -> processMessage
    void processMessageReceipt(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMClient) -> processMessageReceipt
    com.avos.avoscloud.im.v2.AVIMClientEventHandler getClientEventHandler() -> getClientEventHandler
    com.avos.avoscloud.im.v2.AVIMConversationEventHandler getConversationEventHandler() -> getConversationEventHandler
    void setupMessage(com.avos.avoscloud.im.v2.AVIMMessage,java.lang.String) -> setupMessage
    void processHistoryMessages(com.avos.avoscloud.im.v2.AVIMMessage,java.lang.String) -> processHistoryMessages
com.avos.avoscloud.im.v2.AVIMMessageType -> com.avos.avoscloud.im.v2.AVIMMessageType:
    int TEXT_MESSAGE_TYPE -> TEXT_MESSAGE_TYPE
    int IMAGE_MESSAGE_TYPE -> IMAGE_MESSAGE_TYPE
    int AUDIO_MESSAGE_TYPE -> AUDIO_MESSAGE_TYPE
    int VIDEO_MESSAGE_TYPE -> VIDEO_MESSAGE_TYPE
    int LOCATION_MESSAGE_TYPE -> LOCATION_MESSAGE_TYPE
    int FILE_MESSAGE_TYPE -> FILE_MESSAGE_TYPE
    int type() -> type
com.avos.avoscloud.im.v2.AVIMReservedMessageType -> com.avos.avoscloud.im.v2.AVIMReservedMessageType:
    com.avos.avoscloud.im.v2.AVIMReservedMessageType UnsupportedMessageType -> UnsupportedMessageType
    com.avos.avoscloud.im.v2.AVIMReservedMessageType TextMessageType -> TextMessageType
    com.avos.avoscloud.im.v2.AVIMReservedMessageType ImageMessageType -> ImageMessageType
    com.avos.avoscloud.im.v2.AVIMReservedMessageType AudioMessageType -> AudioMessageType
    com.avos.avoscloud.im.v2.AVIMReservedMessageType VideoMessageType -> VideoMessageType
    com.avos.avoscloud.im.v2.AVIMReservedMessageType LocationMessageType -> LocationMessageType
    com.avos.avoscloud.im.v2.AVIMReservedMessageType FileMessageType -> FileMessageType
    int type -> type
    com.avos.avoscloud.im.v2.AVIMReservedMessageType[] $VALUES -> $VALUES
    com.avos.avoscloud.im.v2.AVIMReservedMessageType[] values() -> values
    com.avos.avoscloud.im.v2.AVIMReservedMessageType valueOf(java.lang.String) -> valueOf
    int getType() -> getType
    com.avos.avoscloud.im.v2.AVIMReservedMessageType getAVIMReservedMessageType(int) -> getAVIMReservedMessageType
com.avos.avoscloud.im.v2.AVIMTypedMessage -> com.avos.avoscloud.im.v2.AVIMTypedMessage:
    int messageType -> messageType
    java.util.concurrent.ConcurrentHashMap fieldCache -> fieldCache
    int getMessageType() -> getMessageType
    void setMessageType(int) -> setMessageType
    java.lang.String getContent() -> getContent
    void setContent(java.lang.String) -> setContent
    void computeFieldAttribute(java.lang.Class) -> computeFieldAttribute
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
com.avos.avoscloud.im.v2.AVIMTypedMessageHandler -> com.avos.avoscloud.im.v2.AVIMTypedMessageHandler:
    void onMessage(com.avos.avoscloud.im.v2.AVIMTypedMessage,com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.im.v2.AVIMClient) -> onMessage
    void onMessageReceipt(com.avos.avoscloud.im.v2.AVIMTypedMessage,com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.im.v2.AVIMClient) -> onMessageReceipt
    void onMessageReceipt(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.im.v2.AVIMClient) -> onMessageReceipt
    void onMessage(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.im.v2.AVIMClient) -> onMessage
com.avos.avoscloud.im.v2.Conversation -> com.avos.avoscloud.im.v2.Conversation:
    java.lang.String AV_CONVERSATION_INTENT_ACTION -> AV_CONVERSATION_INTENT_ACTION
    java.lang.String PARAM_CONVERSATION_MEMBER -> PARAM_CONVERSATION_MEMBER
    java.lang.String PARAM_CONVERSATION_ATTRIBUTE -> PARAM_CONVERSATION_ATTRIBUTE
    java.lang.String PARAM_CONVERSATION_ISTRANSIENT -> PARAM_CONVERSATION_ISTRANSIENT
    java.lang.String PARAM_MESSAGE_QUERY_LIMIT -> PARAM_MESSAGE_QUERY_LIMIT
    java.lang.String PARAM_MESSAGE_QUERY_TIMESTAMP -> PARAM_MESSAGE_QUERY_TIMESTAMP
    java.lang.String PARAM_MESSAGE_QUERY_MSGID -> PARAM_MESSAGE_QUERY_MSGID
    java.lang.String INTENT_KEY_DATA -> INTENT_KEY_DATA
    java.lang.String INTENT_KEY_CLIENT -> INTENT_KEY_CLIENT
    java.lang.String INTENT_KEY_CONVERSATION -> INTENT_KEY_CONVERSATION
    java.lang.String INTENT_KEY_OPERATION -> INTENT_KEY_OPERATION
    java.lang.String INTENT_KEY_REQUESTID -> INTENT_KEY_REQUESTID
    java.lang.String INTENT_KEY_MESSAGEFLAG -> INTENT_KEY_MESSAGEFLAG
    int DEFAULT_CONVERSATION_TIMEOUT_MILLS -> DEFAULT_CONVERSATION_TIMEOUT_MILLS
    int STATUS_ON_MESSAGE -> STATUS_ON_MESSAGE
    int STATUS_ON_MESSAGE_RECEIPTED -> STATUS_ON_MESSAGE_RECEIPTED
    int STATUS_ON_MEMBERS_LEFT -> STATUS_ON_MEMBERS_LEFT
    int STATUS_ON_MEMBERS_JOINED -> STATUS_ON_MEMBERS_JOINED
    int STATUS_ON_CONNECTION_PAUSED -> STATUS_ON_CONNECTION_PAUSED
    int STATUS_ON_CONNECTION_RESUMED -> STATUS_ON_CONNECTION_RESUMED
    int STATUS_ON_JOINED -> STATUS_ON_JOINED
    int STATUS_ON_KICKED_FROM_CONVERSATION -> STATUS_ON_KICKED_FROM_CONVERSATION
    java.lang.String callbackExceptionKey -> callbackExceptionKey
    java.lang.String callbackClientKey -> callbackClientKey
    java.lang.String callbackConversationKey -> callbackConversationKey
    java.lang.String callbackMessageTimeStamp -> callbackMessageTimeStamp
    java.lang.String callbackMessageId -> callbackMessageId
    java.lang.String callbackHistoryMessages -> callbackHistoryMessages
    java.lang.String callbackMemberCount -> callbackMemberCount
    java.lang.String QUERY_PARAM_OFFSET -> QUERY_PARAM_OFFSET
    java.lang.String QUERY_PARAM_LIMIT -> QUERY_PARAM_LIMIT
    java.lang.String QUERY_PARAM_SORT -> QUERY_PARAM_SORT
    java.lang.String QUERY_PARAM_WHERE -> QUERY_PARAM_WHERE
    java.lang.String ATTRIBUTE_CONVERSATION_NAME -> ATTRIBUTE_CONVERSATION_NAME
    java.lang.String ATTRIBUTE_MORE -> ATTRIBUTE_MORE
    java.lang.String COLUMN_MEMBERS -> COLUMN_MEMBERS
    java.lang.String COLUMN_TRANSIENT -> COLUMN_TRANSIENT
    java.lang.String[] CONVERSATION_COLUMNS -> CONVERSATION_COLUMNS
    java.util.List CONVERSATION_COLUMN_LIST -> CONVERSATION_COLUMN_LIST
com.avos.avoscloud.im.v2.Conversation$AVIMOperation -> com.avos.avoscloud.im.v2.Conversation$AVIMOperation:
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_CREATION -> CONVERSATION_CREATION
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_ADD_MEMBER -> CONVERSATION_ADD_MEMBER
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_RM_MEMBER -> CONVERSATION_RM_MEMBER
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_JOIN -> CONVERSATION_JOIN
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_QUIT -> CONVERSATION_QUIT
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_SEND_MESSAGE -> CONVERSATION_SEND_MESSAGE
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CLIENT_OPEN -> CLIENT_OPEN
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CLIENT_DISCONNECT -> CLIENT_DISCONNECT
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_QUERY -> CONVERSATION_QUERY
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_UPDATE -> CONVERSATION_UPDATE
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_MESSAGE_QUERY -> CONVERSATION_MESSAGE_QUERY
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_MUTE -> CONVERSATION_MUTE
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_UNMUTE -> CONVERSATION_UNMUTE
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation CONVERSATION_MEMBER_COUNT_QUERY -> CONVERSATION_MEMBER_COUNT_QUERY
    java.lang.String header -> header
    int code -> code
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation[] $VALUES -> $VALUES
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation[] values() -> values
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation valueOf(java.lang.String) -> valueOf
    int getCode() -> getCode
    java.lang.String getOperation() -> getOperation
    com.avos.avoscloud.im.v2.Conversation$AVIMOperation getAVIMOperation(int) -> getAVIMOperation
com.avos.avoscloud.im.v2.MessageHandler -> com.avos.avoscloud.im.v2.MessageHandler:
    void onMessage(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.im.v2.AVIMClient) -> onMessage
    void onMessageReceipt(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.im.v2.AVIMClient) -> onMessageReceipt
    void processEvent0(int,java.lang.Object,java.lang.Object,java.lang.Object) -> processEvent0
com.avos.avoscloud.im.v2.callback.AVIMClientCallback -> com.avos.avoscloud.im.v2.callback.AVIMClientCallback:
    void done(com.avos.avoscloud.im.v2.AVIMClient,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.im.v2.AVIMClient,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.im.v2.callback.AVIMConversationCallback -> com.avos.avoscloud.im.v2.callback.AVIMConversationCallback:
    void done(com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Void,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.im.v2.callback.AVIMConversationCreatedCallback -> com.avos.avoscloud.im.v2.callback.AVIMConversationCreatedCallback:
    void done(com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.AVException) -> done
    void internalDone0(com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.im.v2.callback.AVIMConversationMemberCountCallback -> com.avos.avoscloud.im.v2.callback.AVIMConversationMemberCountCallback:
    void done(java.lang.Integer,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.lang.Integer,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.im.v2.callback.AVIMConversationQueryCallback -> com.avos.avoscloud.im.v2.callback.AVIMConversationQueryCallback:
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.util.List,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.im.v2.callback.AVIMMessagesQueryCallback -> com.avos.avoscloud.im.v2.callback.AVIMMessagesQueryCallback:
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
    void internalDone0(java.util.List,com.avos.avoscloud.AVException) -> internalDone0
    void internalDone0(java.lang.Object,com.avos.avoscloud.AVException) -> internalDone0
com.avos.avoscloud.im.v2.messages.AVIMAudioMessage -> com.avos.avoscloud.im.v2.messages.AVIMAudioMessage:
    java.io.File localFile -> localFile
    java.util.Map getFileMetaData() -> getFileMetaData
    double getDuration() -> getDuration
    void getAdditionalMetaData(java.util.Map,com.avos.avoscloud.SaveCallback) -> getAdditionalMetaData
com.avos.avoscloud.im.v2.messages.AVIMAudioMessage$1 -> com.avos.avoscloud.im.v2.messages.AVIMAudioMessage$1:
    java.util.Map val$meta -> val$meta
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    com.avos.avoscloud.im.v2.messages.AVIMAudioMessage this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.im.v2.messages.AVIMFileMessage -> com.avos.avoscloud.im.v2.messages.AVIMFileMessage:
    java.lang.String OBJECT_ID -> OBJECT_ID
    java.lang.String FILE_URL -> FILE_URL
    java.lang.String FILE_META -> FILE_META
    java.lang.String FILE_SIZE -> FILE_SIZE
    java.lang.String FORMAT -> FORMAT
    java.lang.String DURATION -> DURATION
    com.avos.avoscloud.AVFile actualFile -> actualFile
    java.util.Map file -> file
    java.lang.String text -> text
    java.util.Map attrs -> attrs
    com.avos.avoscloud.ProgressCallback progressCallback -> progressCallback
    java.util.Map getFile() -> getFile
    com.avos.avoscloud.AVFile getAVFile() -> getAVFile
    void setFile(java.util.Map) -> setFile
    java.lang.String getFileUrl() -> getFileUrl
    java.util.Map getFileMetaData() -> getFileMetaData
    long getSize() -> getSize
    void upload(com.avos.avoscloud.SaveCallback) -> upload
    void setProgressCallback(com.avos.avoscloud.ProgressCallback) -> setProgressCallback
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.util.Map getAttrs() -> getAttrs
    void setAttrs(java.util.Map) -> setAttrs
    void fulFillFileInfo(com.avos.avoscloud.SaveCallback) -> fulFillFileInfo
    void getAdditionalMetaData(java.util.Map,com.avos.avoscloud.SaveCallback) -> getAdditionalMetaData
com.avos.avoscloud.im.v2.messages.AVIMFileMessage$1 -> com.avos.avoscloud.im.v2.messages.AVIMFileMessage$1:
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    com.avos.avoscloud.im.v2.messages.AVIMFileMessage this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.im.v2.messages.AVIMFileMessage$2 -> com.avos.avoscloud.im.v2.messages.AVIMFileMessage$2:
    java.util.Map val$metaData -> val$metaData
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    com.avos.avoscloud.im.v2.messages.AVIMFileMessage this$0 -> this$0
    void done(com.avos.avoscloud.AVException) -> done
com.avos.avoscloud.im.v2.messages.AVIMFileMessageAccessor -> com.avos.avoscloud.im.v2.messages.AVIMFileMessageAccessor:
    void upload(com.avos.avoscloud.im.v2.messages.AVIMFileMessage,com.avos.avoscloud.SaveCallback) -> upload
    java.util.Map mediaInfo(java.io.File) -> mediaInfo
    java.lang.String getMimeType(java.lang.String) -> getMimeType
    java.util.Map getImageMeta(java.io.File) -> getImageMeta
com.avos.avoscloud.im.v2.messages.AVIMImageMessage -> com.avos.avoscloud.im.v2.messages.AVIMImageMessage:
    java.lang.String IMAGE_HEIGHT -> IMAGE_HEIGHT
    java.lang.String IMAGE_WIDTH -> IMAGE_WIDTH
    java.io.File localFile -> localFile
    java.util.Map getFileMetaData() -> getFileMetaData
    int getHeight() -> getHeight
    int getWidth() -> getWidth
    void getAdditionalMetaData(java.util.Map,com.avos.avoscloud.SaveCallback) -> getAdditionalMetaData
com.avos.avoscloud.im.v2.messages.AVIMImageMessage$1 -> com.avos.avoscloud.im.v2.messages.AVIMImageMessage$1:
    java.util.Map val$meta -> val$meta
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    com.avos.avoscloud.im.v2.messages.AVIMImageMessage this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.im.v2.messages.AVIMLocationMessage -> com.avos.avoscloud.im.v2.messages.AVIMLocationMessage:
    com.avos.avoscloud.AVGeoPoint location -> location
    java.lang.String text -> text
    java.util.Map attrs -> attrs
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.util.Map getAttrs() -> getAttrs
    void setAttrs(java.util.Map) -> setAttrs
    com.avos.avoscloud.AVGeoPoint getLocation() -> getLocation
    void setLocation(com.avos.avoscloud.AVGeoPoint) -> setLocation
com.avos.avoscloud.im.v2.messages.AVIMTextMessage -> com.avos.avoscloud.im.v2.messages.AVIMTextMessage:
    java.lang.String text -> text
    java.util.Map attrs -> attrs
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    java.util.Map getAttrs() -> getAttrs
    void setAttrs(java.util.Map) -> setAttrs
com.avos.avoscloud.im.v2.messages.AVIMVideoMessage -> com.avos.avoscloud.im.v2.messages.AVIMVideoMessage:
    java.io.File localFile -> localFile
    java.util.Map getFileMetaData() -> getFileMetaData
    double getDuration() -> getDuration
    void getAdditionalMetaData(java.util.Map,com.avos.avoscloud.SaveCallback) -> getAdditionalMetaData
com.avos.avoscloud.im.v2.messages.AVIMVideoMessage$1 -> com.avos.avoscloud.im.v2.messages.AVIMVideoMessage$1:
    java.util.Map val$meta -> val$meta
    com.avos.avoscloud.SaveCallback val$callback -> val$callback
    com.avos.avoscloud.im.v2.messages.AVIMVideoMessage this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avoscloud.ops.AVOp -> com.avos.avoscloud.ops.AVOp:
    com.avos.avoscloud.ops.AVOp cast(java.lang.Class) -> cast
    java.lang.String key() -> key
    com.avos.avoscloud.ops.AVOp$OpType type() -> type
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
    int size() -> size
    com.avos.avoscloud.ops.AVOp get(int) -> get
    com.avos.avoscloud.ops.AVOp remove(int) -> remove
    java.util.Map encodeOp() -> encodeOp
com.avos.avoscloud.ops.AVOp$OpType -> com.avos.avoscloud.ops.AVOp$OpType:
    com.avos.avoscloud.ops.AVOp$OpType Set -> Set
    com.avos.avoscloud.ops.AVOp$OpType Increment -> Increment
    com.avos.avoscloud.ops.AVOp$OpType AddUnique -> AddUnique
    com.avos.avoscloud.ops.AVOp$OpType Add -> Add
    com.avos.avoscloud.ops.AVOp$OpType Remove -> Remove
    com.avos.avoscloud.ops.AVOp$OpType AddRelation -> AddRelation
    com.avos.avoscloud.ops.AVOp$OpType RemoveRelation -> RemoveRelation
    com.avos.avoscloud.ops.AVOp$OpType Delete -> Delete
    com.avos.avoscloud.ops.AVOp$OpType Null -> Null
    com.avos.avoscloud.ops.AVOp$OpType Compound -> Compound
    com.avos.avoscloud.ops.AVOp$OpType[] $VALUES -> $VALUES
    com.avos.avoscloud.ops.AVOp$OpType[] values() -> values
    com.avos.avoscloud.ops.AVOp$OpType valueOf(java.lang.String) -> valueOf
com.avos.avoscloud.ops.AddOp -> com.avos.avoscloud.ops.AddOp:
    java.util.LinkedList values -> values
    java.util.LinkedList getValues() -> getValues
    void setValues(java.util.LinkedList) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.AddOp$1 -> com.avos.avoscloud.ops.AddOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.AddRelationOp -> com.avos.avoscloud.ops.AddRelationOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.AddRelationOp$1 -> com.avos.avoscloud.ops.AddRelationOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.AddUniqueOp -> com.avos.avoscloud.ops.AddUniqueOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.AddUniqueOp$1 -> com.avos.avoscloud.ops.AddUniqueOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.BaseOp -> com.avos.avoscloud.ops.BaseOp:
    java.lang.String key -> key
    com.avos.avoscloud.ops.AVOp$OpType type -> type
    java.util.LinkedList ops -> ops
    com.avos.avoscloud.ops.AVOp$OpType getType() -> getType
    void setType(com.avos.avoscloud.ops.AVOp$OpType) -> setType
    java.util.LinkedList getOps() -> getOps
    void setOps(java.util.LinkedList) -> setOps
    java.lang.String getKey() -> getKey
    java.lang.String key() -> key
    com.avos.avoscloud.ops.AVOp$OpType type() -> type
    com.avos.avoscloud.ops.AVOp cast(java.lang.Class) -> cast
    void setKey(java.lang.String) -> setKey
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
    int size() -> size
    com.avos.avoscloud.ops.AVOp remove(int) -> remove
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    void assertKeyEquals(com.avos.avoscloud.ops.AVOp) -> assertKeyEquals
    java.util.Iterator iterator() -> iterator
    com.avos.avoscloud.ops.AVOp get(int) -> get
com.avos.avoscloud.ops.CompoundOp -> com.avos.avoscloud.ops.CompoundOp:
    java.util.Map encodeOp() -> encodeOp
    void addFirst(com.avos.avoscloud.ops.AVOp) -> addFirst
    void addLast(com.avos.avoscloud.ops.AVOp) -> addLast
    com.avos.avoscloud.ops.AVOp removeFirst() -> removeFirst
    com.avos.avoscloud.ops.AVOp removeLast() -> removeLast
com.avos.avoscloud.ops.DeleteOp -> com.avos.avoscloud.ops.DeleteOp:
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.DeleteOp$1 -> com.avos.avoscloud.ops.DeleteOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.IncrementOp -> com.avos.avoscloud.ops.IncrementOp:
    java.lang.Number amount -> amount
    java.lang.Number getAmount() -> getAmount
    void setAmount(java.lang.Number) -> setAmount
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.IncrementOp$1 -> com.avos.avoscloud.ops.IncrementOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.NullOP -> com.avos.avoscloud.ops.NullOP:
    com.avos.avoscloud.ops.NullOP INSTANCE -> INSTANCE
    com.avos.avoscloud.ops.AVOp cast(java.lang.Class) -> cast
    java.util.Iterator iterator() -> iterator
    java.lang.String key() -> key
    com.avos.avoscloud.ops.AVOp$OpType type() -> type
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
    java.util.Map encodeOp() -> encodeOp
    int size() -> size
    com.avos.avoscloud.ops.AVOp get(int) -> get
    com.avos.avoscloud.ops.AVOp remove(int) -> remove
com.avos.avoscloud.ops.RemoveOp -> com.avos.avoscloud.ops.RemoveOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.RemoveOp$1 -> com.avos.avoscloud.ops.RemoveOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.RemoveRelationOp -> com.avos.avoscloud.ops.RemoveRelationOp:
    java.util.Set values -> values
    java.util.Set getValues() -> getValues
    void setValues(java.util.Set) -> setValues
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.RemoveRelationOp$1 -> com.avos.avoscloud.ops.RemoveRelationOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.ops.SetOp -> com.avos.avoscloud.ops.SetOp:
    java.lang.Object value -> value
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.avos.avoscloud.AVObject apply(com.avos.avoscloud.AVObject) -> apply
    java.util.Map encodeOp() -> encodeOp
    com.avos.avoscloud.ops.AVOp merge(com.avos.avoscloud.ops.AVOp) -> merge
com.avos.avoscloud.ops.SetOp$1 -> com.avos.avoscloud.ops.SetOp$1:
    int[] $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType -> $SwitchMap$com$avos$avoscloud$ops$AVOp$OpType
com.avos.avoscloud.signature.AES -> com.avos.avoscloud.signature.AES:
    java.lang.String KEY_GENERATION_ALG -> KEY_GENERATION_ALG
    int HASH_ITERATIONS -> HASH_ITERATIONS
    int KEY_LENGTH -> KEY_LENGTH
    char[] humanPassphrase -> humanPassphrase
    byte[] salt -> salt
    javax.crypto.spec.PBEKeySpec myKeyspec -> myKeyspec
    java.lang.String CIPHERMODEPADDING -> CIPHERMODEPADDING
    javax.crypto.SecretKeyFactory keyfactory -> keyfactory
    javax.crypto.SecretKey sk -> sk
    javax.crypto.spec.SecretKeySpec skforAES -> skforAES
    byte[] iv -> iv
    javax.crypto.spec.IvParameterSpec IV -> IV
    java.lang.String encrypt(byte[]) -> encrypt
    java.lang.String decrypt(java.lang.String) -> decrypt
    byte[] addPadding(byte[]) -> addPadding
    byte[] dropPadding(byte[]) -> dropPadding
    byte[] encrypt(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[]) -> encrypt
    byte[] decrypt(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[]) -> decrypt
com.avos.avoscloud.signature.Base64Decoder -> com.avos.avoscloud.signature.Base64Decoder:
    char[] chars -> chars
    int[] ints -> ints
    int charCount -> charCount
    int carryOver -> carryOver
    int read() -> read
    int read(byte[],int,int) -> read
    java.lang.String decode(java.lang.String) -> decode
    byte[] decodeToBytes(java.lang.String) -> decodeToBytes
    void main(java.lang.String[]) -> main
com.avos.avoscloud.signature.Base64Encoder -> com.avos.avoscloud.signature.Base64Encoder:
    char[] chars -> chars
    int charCount -> charCount
    int carryOver -> carryOver
    void write(int) -> write
    void write(byte[],int,int) -> write
    void close() -> close
    java.lang.String encode(java.lang.String) -> encode
    java.lang.String encode(byte[]) -> encode
com.avos.avospush.BuildConfig -> com.avos.avospush.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.avos.avospush.R -> com.avos.avospush.R:
com.avos.avospush.R$attr -> com.avos.avospush.R$attr:
com.avos.avospush.R$raw -> com.avos.avospush.R$raw:
    int avoscloud_us_ssl -> avoscloud_us_ssl
com.avos.avospush.notification.NotificationCompat -> com.avos.avospush.notification.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    com.avos.avospush.notification.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    com.avos.avospush.notification.NotificationCompat$NotificationCompatImpl access$000() -> access$000
com.avos.avospush.notification.NotificationCompat$Action -> com.avos.avospush.notification.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
com.avos.avospush.notification.NotificationCompat$BigPictureStyle -> com.avos.avospush.notification.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    com.avos.avospush.notification.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.avos.avospush.notification.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.avos.avospush.notification.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    com.avos.avospush.notification.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
com.avos.avospush.notification.NotificationCompat$BigTextStyle -> com.avos.avospush.notification.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    com.avos.avospush.notification.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.avos.avospush.notification.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.avos.avospush.notification.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
com.avos.avospush.notification.NotificationCompat$Builder -> com.avos.avospush.notification.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    com.avos.avospush.notification.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    com.avos.avospush.notification.NotificationCompat$Builder setWhen(long) -> setWhen
    com.avos.avospush.notification.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    com.avos.avospush.notification.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    com.avos.avospush.notification.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    com.avos.avospush.notification.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    com.avos.avospush.notification.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    com.avos.avospush.notification.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    com.avos.avospush.notification.NotificationCompat$Builder setNumber(int) -> setNumber
    com.avos.avospush.notification.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    com.avos.avospush.notification.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    com.avos.avospush.notification.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    com.avos.avospush.notification.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    com.avos.avospush.notification.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    com.avos.avospush.notification.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    com.avos.avospush.notification.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    com.avos.avospush.notification.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    com.avos.avospush.notification.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    com.avos.avospush.notification.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    com.avos.avospush.notification.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    com.avos.avospush.notification.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    com.avos.avospush.notification.NotificationCompat$Builder setLights(int,int,int) -> setLights
    com.avos.avospush.notification.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    com.avos.avospush.notification.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    com.avos.avospush.notification.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    com.avos.avospush.notification.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    com.avos.avospush.notification.NotificationCompat$Builder setPriority(int) -> setPriority
    com.avos.avospush.notification.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    com.avos.avospush.notification.NotificationCompat$Builder setStyle(com.avos.avospush.notification.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
com.avos.avospush.notification.NotificationCompat$InboxStyle -> com.avos.avospush.notification.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    com.avos.avospush.notification.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    com.avos.avospush.notification.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    com.avos.avospush.notification.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
com.avos.avospush.notification.NotificationCompat$NotificationCompatImpl -> com.avos.avospush.notification.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(com.avos.avospush.notification.NotificationCompat$Builder) -> build
com.avos.avospush.notification.NotificationCompat$NotificationCompatImplBase -> com.avos.avospush.notification.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(com.avos.avospush.notification.NotificationCompat$Builder) -> build
com.avos.avospush.notification.NotificationCompat$NotificationCompatImplHoneycomb -> com.avos.avospush.notification.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(com.avos.avospush.notification.NotificationCompat$Builder) -> build
com.avos.avospush.notification.NotificationCompat$NotificationCompatImplIceCreamSandwich -> com.avos.avospush.notification.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(com.avos.avospush.notification.NotificationCompat$Builder) -> build
com.avos.avospush.notification.NotificationCompat$NotificationCompatImplJellybean -> com.avos.avospush.notification.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(com.avos.avospush.notification.NotificationCompat$Builder) -> build
com.avos.avospush.notification.NotificationCompat$Style -> com.avos.avospush.notification.NotificationCompat$Style:
    com.avos.avospush.notification.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(com.avos.avospush.notification.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
com.avos.avospush.notification.NotificationCompatHoneycomb -> com.avos.avospush.notification.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
com.avos.avospush.notification.NotificationCompatIceCreamSandwich -> com.avos.avospush.notification.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
com.avos.avospush.notification.NotificationCompatJellybean -> com.avos.avospush.notification.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
com.avos.avospush.push.AVConnectivityListener -> com.avos.avospush.push.AVConnectivityListener:
    void onMobile(android.content.Context) -> onMobile
    void onWifi(android.content.Context) -> onWifi
    void onNotConnected(android.content.Context) -> onNotConnected
com.avos.avospush.push.AVConnectivityReceiver -> com.avos.avospush.push.AVConnectivityReceiver:
    com.avos.avospush.push.AVConnectivityListener listener -> listener
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.avos.avospush.push.AVPushRouter -> com.avos.avospush.push.AVPushRouter:
    java.lang.String SERVER -> SERVER
    java.lang.String GROUP_ID -> GROUP_ID
    java.lang.String EXPIRE_AT -> EXPIRE_AT
    java.lang.String SECONDARY -> SECONDARY
    java.lang.String CN_ROUTER_SERVICE_FMT -> CN_ROUTER_SERVICE_FMT
    java.lang.String US_ROUTER_SERVICE_FMT -> US_ROUTER_SERVICE_FMT
    java.lang.String PUSH_SERVER_CACHE_KEY_FMT -> PUSH_SERVER_CACHE_KEY_FMT
    java.lang.String US_PUSH_GROUP -> US_PUSH_GROUP
    java.lang.String CN_PUSH_GROUP -> CN_PUSH_GROUP
    java.lang.String CN_DEFAULT_PUSH_SERVER -> CN_DEFAULT_PUSH_SERVER
    java.lang.String US_DEFAULT_PUSH_SERVER -> US_DEFAULT_PUSH_SERVER
    android.content.Context context -> context
    java.lang.String currentPushGroup -> currentPushGroup
    java.lang.String currentRouterServiceFMT -> currentRouterServiceFMT
    java.lang.String currentDefaultPushServer -> currentDefaultPushServer
    java.lang.String installationId -> installationId
    int ttlInSecs -> ttlInSecs
    com.avos.avoscloud.PushConnectionRetryController$ConnectionResponseHandler connectionResponseHandler -> connectionResponseHandler
    java.lang.String getRouterUrl() -> getRouterUrl
    void fetchPushServer(int) -> fetchPushServer
    java.util.HashMap getPushServerFromCache() -> getPushServerFromCache
    void cleanPushServerCache() -> cleanPushServerCache
    void processRouterInformation(int,java.util.Map) -> processRouterInformation
    void cachePushServer(java.util.HashMap) -> cachePushServer
    void useAVOSCloudCN() -> useAVOSCloudCN
    void useAVOSCloudUS() -> useAVOSCloudUS
    java.lang.String access$002(java.lang.String) -> access$002
    int access$102(com.avos.avospush.push.AVPushRouter,int) -> access$102
    java.lang.String access$000() -> access$000
    int access$100(com.avos.avospush.push.AVPushRouter) -> access$100
    void access$200(com.avos.avospush.push.AVPushRouter,java.util.HashMap) -> access$200
    void access$300(com.avos.avospush.push.AVPushRouter,int,java.util.Map) -> access$300
com.avos.avospush.push.AVPushRouter$1 -> com.avos.avospush.push.AVPushRouter$1:
    int val$code -> val$code
    com.avos.avospush.push.AVPushRouter this$0 -> this$0
    void onSuccess(java.lang.String,com.avos.avoscloud.AVException) -> onSuccess
    void onFailure(java.lang.Throwable,java.lang.String) -> onFailure
com.avos.avospush.push.AVPushRouterListener -> com.avos.avospush.push.AVPushRouterListener:
    void onResponse(java.util.Map,java.lang.String,java.lang.String) -> onResponse
com.avos.avospush.push.AVPushServiceAppManager -> com.avos.avospush.push.AVPushServiceAppManager:
    java.lang.String LOGTAG -> LOGTAG
    java.lang.String AV_PUSH_SERVICE_APP_DATA -> AV_PUSH_SERVICE_APP_DATA
    java.lang.String ICON_KEY -> ICON_KEY
    java.util.concurrent.ConcurrentHashMap defaultPushCallback -> defaultPushCallback
    android.content.Context context -> context
    int notificationIcon -> notificationIcon
    void readDataFromCache() -> readDataFromCache
    int getNotificationIcon() -> getNotificationIcon
    void setNotificationIcon(int) -> setNotificationIcon
    void addDefaultPushCallback(java.lang.String,java.lang.String) -> addDefaultPushCallback
    void removeDefaultPushCallback(java.lang.String) -> removeDefaultPushCallback
    boolean containsDefaultPushCallback(java.lang.String) -> containsDefaultPushCallback
    java.lang.String getDefaultPushCallback(java.lang.String) -> getDefaultPushCallback
    int size() -> size
com.avos.avospush.push.AVSessionCacheHelper -> com.avos.avospush.push.AVSessionCacheHelper:
    java.lang.String SESSION_CACHE_KEY -> SESSION_CACHE_KEY
    java.lang.String SESSION_KEY -> SESSION_KEY
    void addSession(java.lang.String) -> addSession
    void removeSession(java.lang.String) -> removeSession
    java.util.List getAllSession() -> getAllSession
com.avos.avospush.push.AVShutdownListener -> com.avos.avospush.push.AVShutdownListener:
    void onShutdown(android.content.Context) -> onShutdown
com.avos.avospush.push.AVShutdownReceiver -> com.avos.avospush.push.AVShutdownReceiver:
    com.avos.avospush.push.AVShutdownListener listener -> listener
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.avos.avospush.push.AVWebSocketListener -> com.avos.avospush.push.AVWebSocketListener:
    void onWebSocketOpen() -> onWebSocketOpen
    void onWebSocketClose() -> onWebSocketClose
    void onPresenceCommand(java.util.HashMap) -> onPresenceCommand
    void onDirectCommand(java.util.HashMap) -> onDirectCommand
    void onSessionCommand(java.util.HashMap) -> onSessionCommand
    void onAckReqCommand(java.util.HashMap) -> onAckReqCommand
    void onAckCommand(java.util.HashMap) -> onAckCommand
    void onGroupCommand(java.util.HashMap) -> onGroupCommand
    void onMessageReceipt(java.util.HashMap) -> onMessageReceipt
    void onListenerAdded(boolean) -> onListenerAdded
    void onListenerRemoved() -> onListenerRemoved
    void onConversationCommand(java.util.Map) -> onConversationCommand
    void onConversationQuery(java.util.Map) -> onConversationQuery
    void onError(java.util.Map) -> onError
    void onHistoryMessageQuery(java.util.Map) -> onHistoryMessageQuery
com.avos.avospush.session.AVMessageCourier -> com.avos.avospush.session.AVMessageCourier:
    void sendMessage(com.avos.avoscloud.AVMessage) -> sendMessage
com.avos.avospush.session.CommandPacket -> com.avos.avospush.session.CommandPacket:
    java.lang.String cmd -> cmd
    java.lang.String appId -> appId
    int requestId -> requestId
    java.lang.String installationId -> installationId
    java.lang.String OPERATION_KEY -> OPERATION_KEY
    java.lang.String MESSAGEID -> MESSAGEID
    int UNSUPPORTED_OPERATION -> UNSUPPORTED_OPERATION
    int getRequestId() -> getRequestId
    void setRequestId(int) -> setRequestId
    java.lang.String getCmd() -> getCmd
    void setCmd(java.lang.String) -> setCmd
    java.lang.String getAppId() -> getAppId
    void setAppId(java.lang.String) -> setAppId
    java.lang.String getInstallationId() -> getInstallationId
    void setInstallationId(java.lang.String) -> setInstallationId
    java.util.Map genDataMap() -> genDataMap
    java.lang.String toJson() -> toJson
com.avos.avospush.session.ConversationAckPacket -> com.avos.avospush.session.ConversationAckPacket:
    java.lang.String conversationId -> conversationId
    java.lang.String messageId -> messageId
    java.lang.String getConversationId() -> getConversationId
    void setConversationId(java.lang.String) -> setConversationId
    java.lang.String getMessageId() -> getMessageId
    void setMessageId(java.lang.String) -> setMessageId
    java.util.Map genDataMap() -> genDataMap
    com.avos.avospush.session.ConversationAckPacket getConversationAckPacket(java.lang.String,java.lang.String,java.lang.String) -> getConversationAckPacket
com.avos.avospush.session.ConversationControlPacket -> com.avos.avospush.session.ConversationControlPacket:
    java.lang.String CONVERSATION_CMD -> CONVERSATION_CMD
    java.util.List members -> members
    java.lang.String signature -> signature
    long timestamp -> timestamp
    java.lang.String nonce -> nonce
    java.lang.String conversationId -> conversationId
    java.lang.String op -> op
    java.util.Map attributes -> attributes
    boolean isTransient -> isTransient
    java.lang.String getConversationId() -> getConversationId
    void setConversationId(java.lang.String) -> setConversationId
    java.lang.String getOp() -> getOp
    void setOp(java.lang.String) -> setOp
    java.util.List getMembers() -> getMembers
    void setMembers(java.util.List) -> setMembers
    java.lang.String getSignature() -> getSignature
    void setSignature(java.lang.String) -> setSignature
    long getTimestamp() -> getTimestamp
    void setTimestamp(long) -> setTimestamp
    java.lang.String getNonce() -> getNonce
    void setNonce(java.lang.String) -> setNonce
    java.util.Map getAttributes() -> getAttributes
    void setAttributes(java.util.Map) -> setAttributes
    boolean isTransient() -> isTransient
    void setTransient(boolean) -> setTransient
    java.util.Map genDataMap() -> genDataMap
    com.avos.avospush.session.ConversationControlPacket genConversationCommand(java.lang.String,java.lang.String,java.util.List,java.lang.String,java.util.Map,com.avos.avoscloud.Signature,boolean,int) -> genConversationCommand
    com.avos.avospush.session.ConversationControlPacket genConversationCommand(java.lang.String,java.lang.String,java.util.List,java.lang.String,java.util.Map,com.avos.avoscloud.Signature,int) -> genConversationCommand
com.avos.avospush.session.ConversationControlPacket$ConversationControlOp -> com.avos.avospush.session.ConversationControlPacket$ConversationControlOp:
    java.lang.String START -> START
    java.lang.String ADD -> ADD
    java.lang.String REMOVE -> REMOVE
    java.lang.String QUERY -> QUERY
    java.lang.String UPDATE -> UPDATE
    java.lang.String MUTE -> MUTE
    java.lang.String UNMUTE -> UNMUTE
    java.lang.String COUNT -> COUNT
    java.lang.String STARTED -> STARTED
    java.lang.String JOINED -> JOINED
    java.lang.String MEMBER_JOINED -> MEMBER_JOINED
    java.lang.String MEMBER_LEFTED -> MEMBER_LEFTED
    java.lang.String ADDED -> ADDED
    java.lang.String REMOVED -> REMOVED
    java.lang.String LEFT -> LEFT
    java.lang.String QUERY_RESULT -> QUERY_RESULT
    java.lang.String MEMBER_COUNT_QUERY_RESULT -> MEMBER_COUNT_QUERY_RESULT
    java.lang.String UPDATED -> UPDATED
com.avos.avospush.session.ConversationControlPacket$ConversationResponseKey -> com.avos.avospush.session.ConversationControlPacket$ConversationResponseKey:
    java.lang.String CONVERSATION_ID -> CONVERSATION_ID
    java.lang.String OPERATIOR -> OPERATIOR
    java.lang.String CONVERSATION_MEMBERS -> CONVERSATION_MEMBERS
    java.lang.String OPERATION -> OPERATION
    java.lang.String REQUEST_ID -> REQUEST_ID
    java.lang.String ERROR_REASON -> ERROR_REASON
    java.lang.String ERROR_CODE -> ERROR_CODE
    java.lang.String QUERY_RESULT -> QUERY_RESULT
    java.lang.String MESSAGE_QUERY_RESULT -> MESSAGE_QUERY_RESULT
    java.lang.String MEMBER_COUNT -> MEMBER_COUNT
com.avos.avospush.session.ConversationDirectMessagePacket -> com.avos.avospush.session.ConversationDirectMessagePacket:
    java.lang.String conversationId -> conversationId
    boolean isReceipt -> isReceipt
    boolean isTransient -> isTransient
    java.lang.String message -> message
    java.lang.String getConversationId() -> getConversationId
    void setConversationId(java.lang.String) -> setConversationId
    boolean isReceipt() -> isReceipt
    void setReceipt(boolean) -> setReceipt
    boolean isTransient() -> isTransient
    void setTransient(boolean) -> setTransient
    java.lang.String getMessage() -> getMessage
    void setMessage(java.lang.String) -> setMessage
    java.util.Map genDataMap() -> genDataMap
    com.avos.avospush.session.ConversationDirectMessagePacket getConversationMessagePacket(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int) -> getConversationMessagePacket
com.avos.avospush.session.ConversationMessageQueryPacket -> com.avos.avospush.session.ConversationMessageQueryPacket:
    java.lang.String msgId -> msgId
    int limit -> limit
    long timestamp -> timestamp
    java.lang.String conversationId -> conversationId
    int requestId -> requestId
    java.lang.String getConversationId() -> getConversationId
    void setConversationId(java.lang.String) -> setConversationId
    java.lang.String getMsgId() -> getMsgId
    void setMsgId(java.lang.String) -> setMsgId
    int getLimit() -> getLimit
    void setLimit(int) -> setLimit
    long getTimestamp() -> getTimestamp
    void setTimestamp(long) -> setTimestamp
    int getRequestId() -> getRequestId
    void setRequestId(int) -> setRequestId
    java.util.Map genDataMap() -> genDataMap
    com.avos.avospush.session.ConversationMessageQueryPacket getConversationMessageQueryPacket(java.lang.String,java.lang.String,java.lang.String,long,int,int) -> getConversationMessageQueryPacket
com.avos.avospush.session.ConversationQueryPacket -> com.avos.avospush.session.ConversationQueryPacket:
    int limit -> limit
    int skip -> skip
    java.lang.String sort -> sort
    com.alibaba.fastjson.JSONObject where -> where
    int getLimit() -> getLimit
    void setLimit(int) -> setLimit
    int getSkip() -> getSkip
    void setSkip(int) -> setSkip
    java.lang.String getSort() -> getSort
    void setSort(java.lang.String) -> setSort
    com.alibaba.fastjson.JSONObject getWhere() -> getWhere
    void setWhere(com.alibaba.fastjson.JSONObject) -> setWhere
    java.util.Map genDataMap() -> genDataMap
    com.avos.avospush.session.ConversationQueryPacket getConversationQueryPacket(java.lang.String,com.alibaba.fastjson.JSONObject,java.lang.String,int,int,int) -> getConversationQueryPacket
com.avos.avospush.session.DirectMessagePacket -> com.avos.avospush.session.DirectMessagePacket:
    java.lang.String msg -> msg
    java.util.Collection toPeerIds -> toPeerIds
    java.lang.String roomId -> roomId
    boolean transi -> transi
    boolean receipt -> receipt
    java.lang.String getMsg() -> getMsg
    void setMsg(java.lang.String) -> setMsg
    java.util.Collection getToPeerIds() -> getToPeerIds
    void setToPeerIds(java.util.Collection) -> setToPeerIds
    boolean isTransient() -> isTransient
    void setTransient(boolean) -> setTransient
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    boolean isReceipt() -> isReceipt
    void setReceipt(boolean) -> setReceipt
    java.util.Map genDataMap() -> genDataMap
com.avos.avospush.session.GroupControlPacket -> com.avos.avospush.session.GroupControlPacket:
    java.lang.String signature -> signature
    long timestamp -> timestamp
    java.lang.String op -> op
    java.lang.String nonce -> nonce
    java.lang.String roomId -> roomId
    java.util.List groupPeerIds -> groupPeerIds
    java.lang.String id -> id
    java.lang.String getOp() -> getOp
    void setOp(java.lang.String) -> setOp
    java.lang.String getSignature() -> getSignature
    void setSignature(java.lang.String) -> setSignature
    long getTimestamp() -> getTimestamp
    void setTimestamp(long) -> setTimestamp
    java.lang.String getNonce() -> getNonce
    void setNonce(java.lang.String) -> setNonce
    java.lang.String getGroupId() -> getGroupId
    void setGroupId(java.lang.String) -> setGroupId
    java.util.List getGroupPeerIds() -> getGroupPeerIds
    void setGroupPeerIds(java.util.List) -> setGroupPeerIds
    java.util.Map genDataMap() -> genDataMap
    com.avos.avospush.session.GroupControlPacket genGroupCommand(java.lang.String,java.lang.String,java.util.List,java.lang.String,com.avos.avoscloud.Signature) -> genGroupCommand
    com.avos.avospush.session.GroupControlPacket genGroupCommand(java.lang.String,java.lang.String,java.util.List,java.lang.String,com.avos.avoscloud.Signature,int) -> genGroupCommand
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
com.avos.avospush.session.GroupControlPacket$GroupControlOp -> com.avos.avospush.session.GroupControlPacket$GroupControlOp:
    java.lang.String JOIN -> JOIN
    java.lang.String QUIT -> QUIT
    java.lang.String INVITE -> INVITE
    java.lang.String KICK -> KICK
com.avos.avospush.session.LoginPacket -> com.avos.avospush.session.LoginPacket:
com.avos.avospush.session.MessageQueue -> com.avos.avospush.session.MessageQueue:
    java.util.Queue messages -> messages
    java.lang.String queueKey -> queueKey
    java.lang.String MESSAGE_ZONE -> MESSAGE_ZONE
    java.lang.String QUEUE_KEY -> QUEUE_KEY
    java.lang.Class type -> type
    android.os.HandlerThread serializeThread -> serializeThread
    android.os.Handler serializeHanlder -> serializeHanlder
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    void storeMessageQueue() -> storeMessageQueue
    java.util.LinkedList restoreMessageQueue() -> restoreMessageQueue
    java.lang.String access$000(com.avos.avospush.session.MessageQueue) -> access$000
com.avos.avospush.session.MessageQueue$1 -> com.avos.avospush.session.MessageQueue$1:
    com.avos.avospush.session.MessageQueue this$0 -> this$0
    void run() -> run
com.avos.avospush.session.MessageQueue$HasId -> com.avos.avospush.session.MessageQueue$HasId:
    java.lang.String getId() -> getId
    void setId(java.lang.String) -> setId
com.avos.avospush.session.MessageReceiptCache -> com.avos.avospush.session.MessageReceiptCache:
    java.lang.String MESSAGE_ZONE -> MESSAGE_ZONE
    java.lang.String QUEUE_KEY -> QUEUE_KEY
    void add(java.lang.String,java.lang.String,java.lang.Object) -> add
    java.lang.Object get(java.lang.String,java.lang.String) -> get
    void clean(java.lang.String) -> clean
com.avos.avospush.session.PeerBasedCommandPacket -> com.avos.avospush.session.PeerBasedCommandPacket:
    java.lang.String peerId -> peerId
    java.lang.String getPeerId() -> getPeerId
    void setPeerId(java.lang.String) -> setPeerId
    java.util.Map genDataMap() -> genDataMap
com.avos.avospush.session.PushAckPacket -> com.avos.avospush.session.PushAckPacket:
    java.lang.Object ids -> ids
    void setMessageIds(java.lang.Object) -> setMessageIds
    java.util.Map genDataMap() -> genDataMap
com.avos.avospush.session.SessionAckPacket -> com.avos.avospush.session.SessionAckPacket:
    java.util.List ids -> ids
    void setMessageId(java.lang.String) -> setMessageId
    java.util.Map genDataMap() -> genDataMap
com.avos.avospush.session.SessionControlPacket -> com.avos.avospush.session.SessionControlPacket:
    java.lang.String USERAGENT -> USERAGENT
    java.lang.String op -> op
    java.util.Collection sessionPeerIds -> sessionPeerIds
    java.lang.String signature -> signature
    long timestamp -> timestamp
    java.lang.String nonce -> nonce
    boolean reconnectionRequest -> reconnectionRequest
    java.lang.String getSignature() -> getSignature
    void setSignature(java.lang.String) -> setSignature
    long getTimestamp() -> getTimestamp
    void setTimestamp(long) -> setTimestamp
    java.lang.String getNonce() -> getNonce
    void setNonce(java.lang.String) -> setNonce
    java.lang.String getOp() -> getOp
    void setOp(java.lang.String) -> setOp
    java.util.Collection getSessionPeerIds() -> getSessionPeerIds
    void setSessionPeerIds(java.util.Collection) -> setSessionPeerIds
    boolean isReconnectionRequest() -> isReconnectionRequest
    void setReconnectionRequest(boolean) -> setReconnectionRequest
    java.util.Map genDataMap() -> genDataMap
    com.avos.avospush.session.SessionControlPacket genSessionCommand(java.lang.String,java.util.List,java.lang.String,com.avos.avoscloud.Signature) -> genSessionCommand
    com.avos.avospush.session.SessionControlPacket genSessionCommand(java.lang.String,java.util.List,java.lang.String,com.avos.avoscloud.Signature,int) -> genSessionCommand
com.avos.avospush.session.SessionControlPacket$SessionControlOp -> com.avos.avospush.session.SessionControlPacket$SessionControlOp:
    java.lang.String OPEN -> OPEN
    java.lang.String ADD -> ADD
    java.lang.String REMOVE -> REMOVE
    java.lang.String CLOSE -> CLOSE
    java.lang.String QUERY -> QUERY
    java.lang.String OPENED -> OPENED
    java.lang.String ADDED -> ADDED
    java.lang.String QUERY_RESULT -> QUERY_RESULT
    java.lang.String REMOVED -> REMOVED
    java.lang.String CLOSED -> CLOSED
com.avos.avospush.session.StaleMessageDepot -> com.avos.avospush.session.StaleMessageDepot:
    com.avos.avospush.session.MessageQueue messageDepot -> messageDepot
    int MAXLENGTH -> MAXLENGTH
    boolean putStableMessage(java.lang.String) -> putStableMessage
com.avos.avospush.util.FieldAttribute -> com.avos.avospush.util.FieldAttribute:
    java.lang.String fieldName -> fieldName
    java.lang.reflect.Method getterMethod -> getterMethod
    java.lang.reflect.Method setterMethod -> setterMethod
    java.lang.String aliaName -> aliaName
    java.lang.Class fieldType -> fieldType
    java.lang.String getFieldName() -> getFieldName
    void setFieldName(java.lang.String) -> setFieldName
    java.lang.reflect.Method getGetterMethod() -> getGetterMethod
    void setGetterMethod(java.lang.reflect.Method) -> setGetterMethod
    java.lang.reflect.Method getSetterMethod() -> getSetterMethod
    void setSetterMethod(java.lang.reflect.Method) -> setSetterMethod
    java.lang.String getAliaName() -> getAliaName
    void setAliaName(java.lang.String) -> setAliaName
    java.lang.Class getFieldType() -> getFieldType
    void setFieldType(java.lang.Class) -> setFieldType
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
com.avos.avosstatistics.BuildConfig -> com.avos.avosstatistics.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.avos.avosstatistics.R -> com.avos.avosstatistics.R:
com.avos.avosstatistics.R$attr -> com.avos.avosstatistics.R$attr:
com.avos.avosstatistics.R$layout -> com.avos.avosstatistics.R$layout:
    int activity_main -> activity_main
com.avos.avosstatistics.R$raw -> com.avos.avosstatistics.R$raw:
    int avoscloud_us_ssl -> avoscloud_us_ssl
com.avos.avosstatistics.R$string -> com.avos.avosstatistics.R$string:
    int app_name -> app_name
com.baidu.android.pushservice.ADPushManager -> com.baidu.android.pushservice.ADPushManager:
    java.lang.String TAG -> TAG
    void startWorkForAD(android.content.Context,int,java.lang.String) -> startWorkForAD
    void stopWork(android.content.Context) -> stopWork
    boolean isNullContext(android.content.Context) -> isNullContext
    void setPushADMsgEnable(android.content.Context,boolean) -> setPushADMsgEnable
com.baidu.android.pushservice.BasicPushNotificationBuilder -> com.baidu.android.pushservice.BasicPushNotificationBuilder:
    android.app.Notification construct(android.content.Context) -> construct
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.baidu.android.pushservice.CommandService -> com.baidu.android.pushservice.CommandService:
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void a(android.content.Intent) -> a
com.baidu.android.pushservice.CustomPushNotificationBuilder -> com.baidu.android.pushservice.CustomPushNotificationBuilder:
    int mLayoutId -> mLayoutId
    int mLayoutIconId -> mLayoutIconId
    int mLayoutTitleId -> mLayoutTitleId
    int mLayoutTextId -> mLayoutTextId
    int mLayoutIconDrawable -> mLayoutIconDrawable
    void setLayoutDrawable(int) -> setLayoutDrawable
    android.app.Notification construct(android.content.Context) -> construct
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.baidu.android.pushservice.IPushLightappListener -> com.baidu.android.pushservice.IPushLightappListener:
    void initialComplete(com.baidu.android.pushservice.PushLightapp) -> initialComplete
    void onSubscribeResult(int,java.lang.String) -> onSubscribeResult
    void onUnsubscribeResult(int,java.lang.String) -> onUnsubscribeResult
    void onUnbindLightResult(int,java.lang.String) -> onUnbindLightResult
    void onSubscribeByApiKey(int,java.lang.String) -> onSubscribeByApiKey
com.baidu.android.pushservice.PushConstants -> com.baidu.android.pushservice.PushConstants:
    java.lang.String TAG -> TAG
    java.lang.String EXTRA_PUSH_MESSAGE -> EXTRA_PUSH_MESSAGE
    java.lang.String EXTRA_PUSH_MESSAGE_STRING -> EXTRA_PUSH_MESSAGE_STRING
    java.lang.String EXTRA_PUSH_MESSAGE_BODY -> EXTRA_PUSH_MESSAGE_BODY
    java.lang.String EXTRA_PUSH_MESSAGE_SECUR_INFO -> EXTRA_PUSH_MESSAGE_SECUR_INFO
    java.lang.String EXTRA_PUSH_MESSAGE_TYPE -> EXTRA_PUSH_MESSAGE_TYPE
    java.lang.String EXTRA_PUSH_MESSAGE_MESSAGE_ID -> EXTRA_PUSH_MESSAGE_MESSAGE_ID
    java.lang.String KEY_MESSAGE_RECEIVED_IDS -> KEY_MESSAGE_RECEIVED_IDS
    java.lang.String ACTION_MESSAGE -> ACTION_MESSAGE
    java.lang.String ACTION_SDK_MESSAGE -> ACTION_SDK_MESSAGE
    java.lang.String ACTION_LAPP_MESSAGE -> ACTION_LAPP_MESSAGE
    java.lang.String ACTION_FB_MESSAGE -> ACTION_FB_MESSAGE
    java.lang.String ACTION_METHOD -> ACTION_METHOD
    java.lang.String ACTION_RECEIVE -> ACTION_RECEIVE
    java.lang.String ACTION_SDK_RECEIVE -> ACTION_SDK_RECEIVE
    java.lang.String ACTION_WEB_RECEIVE -> ACTION_WEB_RECEIVE
    java.lang.String ACTION_LAPP_RECEIVE -> ACTION_LAPP_RECEIVE
    java.lang.String EXTRA_WEB_BIND_API_KEY -> EXTRA_WEB_BIND_API_KEY
    java.lang.String ACTION_RECEIVER_NOTIFICATION_CLICK -> ACTION_RECEIVER_NOTIFICATION_CLICK
    java.lang.String ACTION_RECEIVER_NOTIFICATION_ARRIVED -> ACTION_RECEIVER_NOTIFICATION_ARRIVED
    java.lang.String EXTRA_METHOD -> EXTRA_METHOD
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String EXTRA_ERROR_CODE -> EXTRA_ERROR_CODE
    java.lang.String EXTRA_CONTENT -> EXTRA_CONTENT
    java.lang.String EXTRA_TAGS_LIST -> EXTRA_TAGS_LIST
    java.lang.String EXTRA_APP_ID -> EXTRA_APP_ID
    java.lang.String EXTRA_USER_ID -> EXTRA_USER_ID
    java.lang.String EXTRA_APP -> EXTRA_APP
    java.lang.String EXTRA_ACCESS_TOKEN -> EXTRA_ACCESS_TOKEN
    java.lang.String EXTRA_API_KEY -> EXTRA_API_KEY
    java.lang.String EXTRA_REAL_BIND -> EXTRA_REAL_BIND
    java.lang.String EXTRA_BIND_NAME -> EXTRA_BIND_NAME
    java.lang.String EXTRA_BIND_STATUS -> EXTRA_BIND_STATUS
    java.lang.String EXTRA_PUSH_SDK_VERSION -> EXTRA_PUSH_SDK_VERSION
    java.lang.String EXTRA_BIND_NOTIFY_STATUS -> EXTRA_BIND_NOTIFY_STATUS
    java.lang.String EXTRA_MSG_KEY -> EXTRA_MSG_KEY
    java.lang.String EXTRA_MSG -> EXTRA_MSG
    java.lang.String EXTRA_CB_URL -> EXTRA_CB_URL
    java.lang.String EXTRA_TIMESTAMP -> EXTRA_TIMESTAMP
    java.lang.String EXTRA_MSGID -> EXTRA_MSGID
    java.lang.String EXTRA_HASHCODE -> EXTRA_HASHCODE
    java.lang.String EXTRA_OPENTYPE -> EXTRA_OPENTYPE
    java.lang.String EXTRA_EXTRA -> EXTRA_EXTRA
    java.lang.String EXTRA_CLIENT_SDK_VERSION -> EXTRA_CLIENT_SDK_VERSION
    java.lang.String EXTRA_LAPP_BIND_STATE -> EXTRA_LAPP_BIND_STATE
    int OPEN_BY_USER -> OPEN_BY_USER
    int OPEN_BY_NOTIFICATION -> OPEN_BY_NOTIFICATION
    int BIND_STATUS_ONLINE -> BIND_STATUS_ONLINE
    int BIND_STATUS_OFFLINE -> BIND_STATUS_OFFLINE
    java.lang.String METHOD_SEND_MSG_TO_SERVER -> METHOD_SEND_MSG_TO_SERVER
    java.lang.String METHOD_SEND_MSG_TO_USER -> METHOD_SEND_MSG_TO_USER
    java.lang.String METHOD_APPSTART -> METHOD_APPSTART
    java.lang.String METHOD_APPSTOP -> METHOD_APPSTOP
    java.lang.String METHOD_SEND -> METHOD_SEND
    java.lang.String METHOD_BIND -> METHOD_BIND
    java.lang.String METHOD_SDK_BIND -> METHOD_SDK_BIND
    java.lang.String METHOD_WEBAPP_BIND_FROM_DEEPLINK -> METHOD_WEBAPP_BIND_FROM_DEEPLINK
    java.lang.String METHOD_WEBAPP_BIND_INTENT -> METHOD_WEBAPP_BIND_INTENT
    java.lang.String METHOD_LAPP_BIND_INTENT -> METHOD_LAPP_BIND_INTENT
    java.lang.String METHOD_UNBIND -> METHOD_UNBIND
    java.lang.String METHOD_SDK_UNBIND -> METHOD_SDK_UNBIND
    java.lang.String METHOD_LAPP_UNBIND -> METHOD_LAPP_UNBIND
    java.lang.String METHOD_GET_LAPP_BIND_STATE -> METHOD_GET_LAPP_BIND_STATE
    java.lang.String EXTRA_FETCH_TYPE -> EXTRA_FETCH_TYPE
    java.lang.String EXTRA_FETCH_NUM -> EXTRA_FETCH_NUM
    java.lang.String METHOD_FETCH -> METHOD_FETCH
    java.lang.String METHOD_COUNT -> METHOD_COUNT
    java.lang.String EXTRA_MSG_IDS -> EXTRA_MSG_IDS
    java.lang.String METHOD_DELETE -> METHOD_DELETE
    java.lang.String METHOD_GBIND -> METHOD_GBIND
    java.lang.String EXTRA_GID -> EXTRA_GID
    java.lang.String METHOD_SET_TAGS -> METHOD_SET_TAGS
    java.lang.String METHOD_SET_SDK_TAGS -> METHOD_SET_SDK_TAGS
    java.lang.String METHOD_SET_LAPP_TAGS -> METHOD_SET_LAPP_TAGS
    java.lang.String METHOD_DEL_TAGS -> METHOD_DEL_TAGS
    java.lang.String METHOD_DEL_SDK_TAGS -> METHOD_DEL_SDK_TAGS
    java.lang.String METHOD_DEL_LAPP_TAGS -> METHOD_DEL_LAPP_TAGS
    java.lang.String EXTRA_TAGS -> EXTRA_TAGS
    java.lang.String EXTRA_NOTIFICATION_TITLE -> EXTRA_NOTIFICATION_TITLE
    java.lang.String EXTRA_NOTIFICATION_CONTENT -> EXTRA_NOTIFICATION_CONTENT
    java.lang.String EXTRA_FORCE_SEND -> EXTRA_FORCE_SEND
    java.lang.String METHOD_GUNBIND -> METHOD_GUNBIND
    java.lang.String METHOD_GINFO -> METHOD_GINFO
    java.lang.String METHOD_GLIST -> METHOD_GLIST
    java.lang.String METHOD_LISTTAGS -> METHOD_LISTTAGS
    java.lang.String METHOD_LIST_SDK_TAGS -> METHOD_LIST_SDK_TAGS
    java.lang.String METHOD_LIST_LAPP_TAGS -> METHOD_LIST_LAPP_TAGS
    java.lang.String METHOD_FETCHGMSG -> METHOD_FETCHGMSG
    java.lang.String EXTRA_GROUP_FETCH_TYPE -> EXTRA_GROUP_FETCH_TYPE
    java.lang.String EXTRA_GROUP_FETCH_NUM -> EXTRA_GROUP_FETCH_NUM
    java.lang.String METHOD_COUNTGMSG -> METHOD_COUNTGMSG
    java.lang.String METHOD_ONLINE -> METHOD_ONLINE
    java.lang.String ERROR_AIDL_FAIL_EXCEPTION -> ERROR_AIDL_FAIL_EXCEPTION
    java.lang.String ERROR_AIDL_FAIL_NO_PUSHSERVICE -> ERROR_AIDL_FAIL_NO_PUSHSERVICE
    short ORIGINAL_VERSION -> ORIGINAL_VERSION
    int ERROR_SUCCESS -> ERROR_SUCCESS
    int ERROR_NETWORK_ERROR -> ERROR_NETWORK_ERROR
    int ERROR_APP_CHECK_FAILED -> ERROR_APP_CHECK_FAILED
    int ERROR_SERVICE_NOT_AVAILABLE -> ERROR_SERVICE_NOT_AVAILABLE
    int ERROR_SERVICE_NOT_AVAILABLE_TEMP -> ERROR_SERVICE_NOT_AVAILABLE_TEMP
    int ERROR_UNKNOWN -> ERROR_UNKNOWN
    int ERROR_SERVER_INTERNAL_ERROR -> ERROR_SERVER_INTERNAL_ERROR
    int ERROR_METHOD_ERROR -> ERROR_METHOD_ERROR
    int ERROR_PARAMS_ERROR -> ERROR_PARAMS_ERROR
    int ERROR_AUTHENTICATION_FAILED -> ERROR_AUTHENTICATION_FAILED
    int ERROR_QUOTA_USE_UP -> ERROR_QUOTA_USE_UP
    int ERROR_DATA_NOT_FOUND -> ERROR_DATA_NOT_FOUND
    int ERROR_TIME_EXPIRES -> ERROR_TIME_EXPIRES
    int ERROR_CHANNEL_TOKEN_TIMEOUT -> ERROR_CHANNEL_TOKEN_TIMEOUT
    int ERROR_BIND_NOT_EXIST -> ERROR_BIND_NOT_EXIST
    int ERROR_BIND_OVERLOAD -> ERROR_BIND_OVERLOAD
    int ERROR_DUPLICATE_OPERATION -> ERROR_DUPLICATE_OPERATION
    int ERROR_GROUP_NOT_FOUND -> ERROR_GROUP_NOT_FOUND
    int ERROR_APP_FORBIDDEN -> ERROR_APP_FORBIDDEN
    int ERROR_APP_NEED_INIAL -> ERROR_APP_NEED_INIAL
    int ERROR_TOO_MANY_TAG_FOR_USER -> ERROR_TOO_MANY_TAG_FOR_USER
    int ERROR_TOO_MANY_TAG_FOR_APP -> ERROR_TOO_MANY_TAG_FOR_APP
    int ERROR_LIGHTAPP_NO_UNICAST_CAPABILITY -> ERROR_LIGHTAPP_NO_UNICAST_CAPABILITY
    int ERROR_LIGHTAPP_NO_MULTICAST_CAPABILITY -> ERROR_LIGHTAPP_NO_MULTICAST_CAPABILITY
    int ERROR_LIGHTAPP_NOT_APPROVED -> ERROR_LIGHTAPP_NOT_APPROVED
    int ERROR_REQUEST_TOO_FREQUENT -> ERROR_REQUEST_TOO_FREQUENT
    int ERROR_AIDL_FAIL -> ERROR_AIDL_FAIL
    int ERROR_GET_LIGHT_INFO_FAIL -> ERROR_GET_LIGHT_INFO_FAIL
    java.lang.String ERROR_GET_LIGHT_INFO_FAIL_MSG -> ERROR_GET_LIGHT_INFO_FAIL_MSG
    int ERROR_NOT_REGISTER_OR_FOUND -> ERROR_NOT_REGISTER_OR_FOUND
    java.lang.String ERROR_NOT_REGISTER_FOUND -> ERROR_NOT_REGISTER_FOUND
    java.lang.String REG_ERROR_UNKNOWN -> REG_ERROR_UNKNOWN
    int ERROR_WEAK_SUBSCRIBE_BLACKED -> ERROR_WEAK_SUBSCRIBE_BLACKED
    int LOGIN_TYPE_API_KEY -> LOGIN_TYPE_API_KEY
    int LOGIN_TYPE_ACCESS_TOKEN -> LOGIN_TYPE_ACCESS_TOKEN
    int LOGIN_TYPE_BDUSS -> LOGIN_TYPE_BDUSS
    int LOGIN_TYPE_WEB_APP_API_KEY -> LOGIN_TYPE_WEB_APP_API_KEY
    int LOGIN_TYPE_LIGHT_APP_API_KEY -> LOGIN_TYPE_LIGHT_APP_API_KEY
    int LOGIN_TYPE_UNKNOWN -> LOGIN_TYPE_UNKNOWN
    java.lang.String EXTRA_BIND_FOR_ADVERTISE -> EXTRA_BIND_FOR_ADVERTISE
    java.lang.String ADVERTISE_ENABLE -> ADVERTISE_ENABLE
    java.lang.String NOTIFY_ENABLE -> NOTIFY_ENABLE
    java.lang.String NOTIFY_DISABLE -> NOTIFY_DISABLE
    java.lang.String MESSAGE_CHECK_RSA_KEY -> MESSAGE_CHECK_RSA_KEY
    java.lang.String rsaEncrypt(java.lang.String) -> rsaEncrypt
    android.content.Intent createWebMethodIntent(android.content.Context) -> createWebMethodIntent
    android.content.Intent createSDKMethodIntent(android.content.Context) -> createSDKMethodIntent
    java.lang.String getErrorMsg(int) -> getErrorMsg
com.baidu.android.pushservice.PushKeepAlive -> com.baidu.android.pushservice.PushKeepAlive:
    android.os.Handler a -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.baidu.android.pushservice.PushLightapp -> com.baidu.android.pushservice.PushLightapp:
    int ERROR_CODE_AIDL_FAIL -> ERROR_CODE_AIDL_FAIL
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    com.baidu.android.pushservice.PushLightapp sInstance -> sInstance
    com.baidu.android.pushservice.IPushLightappListener sListener -> sListener
    android.content.Context mContext -> mContext
    boolean mBound -> mBound
    java.lang.String PUSHSERVICE -> PUSHSERVICE
    java.lang.String ACTION_PUSH_SERVICE -> ACTION_PUSH_SERVICE
    boolean EVER_BIND -> EVER_BIND
    int BIND_TIME_OUT -> BIND_TIME_OUT
    int RUNNING_PUSH_VERSION -> RUNNING_PUSH_VERSION
    int PUSH_VERSION_LEGAL_41 -> PUSH_VERSION_LEGAL_41
    int PUSH_VERSION_LEGAL_42 -> PUSH_VERSION_LEGAL_42
    int PUSH_VERSION_LEGAL_43 -> PUSH_VERSION_LEGAL_43
    int PUSH_VERSION_LEGAL_44 -> PUSH_VERSION_LEGAL_44
    int bind_times -> bind_times
    com.baidu.android.pushservice.b.a mIPushService -> mIPushService
    android.content.ServiceConnection mConnection -> mConnection
    java.lang.String ACTION_REGISTER_SYNC -> ACTION_REGISTER_SYNC
    java.lang.String SHARED_NAME_SETTINGS -> SHARED_NAME_SETTINGS
    int CONTEXT_FLAG_MODE_MULTI_PROCESS -> CONTEXT_FLAG_MODE_MULTI_PROCESS
    java.lang.String KEY_PRIORITY2 -> KEY_PRIORITY2
    java.lang.String SETTINGS_KEY_CURRENT_PACKAGE_NAME -> SETTINGS_KEY_CURRENT_PACKAGE_NAME
    void tryBindPush() -> tryBindPush
    com.baidu.android.pushservice.PushLightapp getInstance(android.content.Context) -> getInstance
    void getInstanceAsync(android.content.Context,com.baidu.android.pushservice.IPushLightappListener) -> getInstanceAsync
    boolean isReady() -> isReady
    void destroy() -> destroy
    void unbindService() -> unbindService
    void subscribeLight(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLight
    void subscribeLight(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLight
    void subscribeLightByApiKey(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> subscribeLightByApiKey
    void unsubscribeLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> unsubscribeLight
    void unbindLight(java.lang.String,java.lang.String,com.baidu.android.pushservice.IPushLightappListener) -> unbindLight
    java.lang.String getSubcribeApps() -> getSubcribeApps
    java.lang.String getSubscribedAppids() -> getSubscribedAppids
    java.lang.String getSubscribedAppinfos(java.lang.String) -> getSubscribedAppinfos
    java.lang.String getMsgs(java.lang.String,int,boolean,int,int) -> getMsgs
    int getUnreadMsgNumber(java.lang.String,int) -> getUnreadMsgNumber
    int setMsgRead(java.lang.String) -> setMsgRead
    int setAllMsgRead(java.lang.String,int) -> setAllMsgRead
    int deleteMsg(java.lang.String) -> deleteMsg
    int deleteAllMsg(java.lang.String,int) -> deleteAllMsg
    boolean register(java.lang.String,java.lang.String) -> register
    boolean register(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> register
    boolean updateBlacklist(java.lang.String,java.lang.String,int) -> updateBlacklist
    boolean removeBlacklist(java.lang.String,java.lang.String) -> removeBlacklist
    boolean setNotifySwitch(java.lang.String,boolean) -> setNotifySwitch
    int getNewMsgNum(java.lang.String) -> getNewMsgNum
    boolean clearNewMsgNum(java.lang.String) -> clearNewMsgNum
    java.lang.String getBlackList(java.lang.String) -> getBlackList
    int getRunningServiceVersion() -> getRunningServiceVersion
    java.lang.String getCurPushPackageName(android.content.Context) -> getCurPushPackageName
    java.lang.String pickPushPackageName(android.content.Context,java.lang.String) -> pickPushPackageName
    java.util.List getFriendPackages(android.content.Context) -> getFriendPackages
    boolean isAppInstalled(android.content.Context,java.lang.String) -> isAppInstalled
    boolean checkPushServiceEnable(android.content.Context,java.lang.String) -> checkPushServiceEnable
    int access$000() -> access$000
    boolean access$100() -> access$100
    boolean access$200(com.baidu.android.pushservice.PushLightapp) -> access$200
    void access$300(com.baidu.android.pushservice.PushLightapp) -> access$300
    boolean access$202(com.baidu.android.pushservice.PushLightapp,boolean) -> access$202
    int access$402(int) -> access$402
    int access$500(com.baidu.android.pushservice.PushLightapp) -> access$500
    com.baidu.android.pushservice.IPushLightappListener access$600() -> access$600
    com.baidu.android.pushservice.PushLightapp access$700() -> access$700
    android.content.Context access$800(com.baidu.android.pushservice.PushLightapp) -> access$800
    com.baidu.android.pushservice.PushLightapp access$702(com.baidu.android.pushservice.PushLightapp) -> access$702
    int access$902(com.baidu.android.pushservice.PushLightapp,int) -> access$902
    int access$900(com.baidu.android.pushservice.PushLightapp) -> access$900
    void access$1000(com.baidu.android.pushservice.PushLightapp) -> access$1000
com.baidu.android.pushservice.PushManager -> com.baidu.android.pushservice.PushManager:
    java.lang.String TAG -> TAG
    android.os.Handler mHandler -> mHandler
    java.util.HashMap mStatisticsMap -> mStatisticsMap
    void startWork(android.content.Context,java.lang.String,java.lang.String) -> startWork
    void startWork(android.content.Context,int,java.lang.String) -> startWork
    void sdkStartWork(android.content.Context,java.lang.String,int) -> sdkStartWork
    void startWork(android.content.Context,int,java.lang.String,boolean) -> startWork
    boolean installStatus(android.content.Context,int,java.lang.String) -> installStatus
    boolean isRunningNormal(android.content.Context) -> isRunningNormal
    void bindPushService(android.content.Context,int,java.lang.String) -> bindPushService
    java.lang.String bindinfoTojson(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> bindinfoTojson
    void stopWork(android.content.Context) -> stopWork
    void resumeWork(android.content.Context) -> resumeWork
    boolean isPushEnabled(android.content.Context) -> isPushEnabled
    void bind(android.content.Context,int) -> bind
    void sdkBind(android.content.Context,int,java.lang.String,int) -> sdkBind
    void webAppBind(android.content.Context,int,java.lang.String) -> webAppBind
    void lightAppBind(android.content.Context,int,java.lang.String) -> lightAppBind
    void unbind(android.content.Context) -> unbind
    void sdkUnbind(android.content.Context,java.lang.String) -> sdkUnbind
    void getLappBindState(android.content.Context,java.lang.String) -> getLappBindState
    android.content.Intent createSDKMethodIntent(android.content.Context,java.lang.String) -> createSDKMethodIntent
    android.content.Intent createLappMethodIntent(android.content.Context,java.lang.String) -> createLappMethodIntent
    void fetchMessages(android.content.Context,int,int) -> fetchMessages
    void getMessageCounts(android.content.Context) -> getMessageCounts
    void deleteMessages(android.content.Context,java.lang.String[]) -> deleteMessages
    void sendMsgToUser(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> sendMsgToUser
    void bindGroup(android.content.Context,java.lang.String) -> bindGroup
    void setTags(android.content.Context,java.util.List) -> setTags
    void setSDKTags(android.content.Context,java.lang.String,java.util.List) -> setSDKTags
    void setLappTags(android.content.Context,java.lang.String,java.util.List) -> setLappTags
    void listTags(android.content.Context) -> listTags
    void listSDKTags(android.content.Context,java.lang.String) -> listSDKTags
    void listLappTags(android.content.Context,java.lang.String) -> listLappTags
    void delTags(android.content.Context,java.util.List) -> delTags
    void delSDKTags(android.content.Context,java.lang.String,java.util.List) -> delSDKTags
    void delLappTags(android.content.Context,java.lang.String,java.util.List) -> delLappTags
    void unbindGroup(android.content.Context,java.lang.String) -> unbindGroup
    void getGroupInfo(android.content.Context,java.lang.String) -> getGroupInfo
    void getGroupList(android.content.Context) -> getGroupList
    void fetchGroupMessages(android.content.Context,java.lang.String,int,int) -> fetchGroupMessages
    void getGroupMessageCounts(android.content.Context,java.lang.String) -> getGroupMessageCounts
    void setDefaultNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setDefaultNotificationBuilder
    void setNotificationBuilder(android.content.Context,int,com.baidu.android.pushservice.PushNotificationBuilder) -> setNotificationBuilder
    void setMediaNotificationBuilder(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> setMediaNotificationBuilder
    boolean isConnected(android.content.Context) -> isConnected
    void tryConnect(android.content.Context) -> tryConnect
    android.content.Intent createMethodIntent(android.content.Context) -> createMethodIntent
    android.content.Intent createWebMethodIntent(android.content.Context) -> createWebMethodIntent
    android.content.Intent createSDKMethodIntent(android.content.Context) -> createSDKMethodIntent
    void enableLbs(android.content.Context) -> enableLbs
    void disableLbs(android.content.Context) -> disableLbs
    boolean isNullContext(android.content.Context) -> isNullContext
    void setNoDisturbMode(android.content.Context,int,int,int,int) -> setNoDisturbMode
    void sendRedirecctionIntent(android.content.Context,android.content.Intent) -> sendRedirecctionIntent
    void checkedSendForUser(android.content.Context,int) -> checkedSendForUser
    void insertPassThroughMessageClick(android.content.Context,java.lang.String,java.lang.String) -> insertPassThroughMessageClick
    void insertPassThroughMessageDelete(android.content.Context,java.lang.String,java.lang.String) -> insertPassThroughMessageDelete
    void insertPassThroughMessageNotified(android.content.Context,java.lang.String,java.lang.String) -> insertPassThroughMessageNotified
    void access$000(android.content.Context,int,java.lang.String) -> access$000
    void access$100(android.content.Context,int,java.lang.String) -> access$100
com.baidu.android.pushservice.PushMessageReceiver -> com.baidu.android.pushservice.PushMessageReceiver:
    java.lang.String TAG -> TAG
    java.lang.String ACTION_LAPP_RECEIVE -> ACTION_LAPP_RECEIVE
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onBind
    void onUnbind(android.content.Context,int,java.lang.String) -> onUnbind
    void onCheckBindState(android.content.Context,int,java.lang.String,boolean) -> onCheckBindState
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onSetTags
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onDelTags
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> onListTags
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> onMessage
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationClicked
    void onNotificationArrived(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationArrived
com.baidu.android.pushservice.PushNotificationBuilder -> com.baidu.android.pushservice.PushNotificationBuilder:
    int mStatusbarIcon -> mStatusbarIcon
    int mNotificationFlags -> mNotificationFlags
    int mNotificationDefaults -> mNotificationDefaults
    java.lang.String mNotificationsound -> mNotificationsound
    long[] mVibratePattern -> mVibratePattern
    java.lang.String mNotificationTitle -> mNotificationTitle
    java.lang.String mNotificationText -> mNotificationText
    void setStatusbarIcon(int) -> setStatusbarIcon
    void setNotificationTitle(java.lang.String) -> setNotificationTitle
    void setNotificationText(java.lang.String) -> setNotificationText
    void setNotificationFlags(int) -> setNotificationFlags
    void setNotificationDefaults(int) -> setNotificationDefaults
    void setNotificationSound(java.lang.String) -> setNotificationSound
    void setNotificationVibrate(long[]) -> setNotificationVibrate
    android.app.Notification construct(android.content.Context) -> construct
com.baidu.android.pushservice.PushSDK -> com.baidu.android.pushservice.PushSDK:
    java.lang.String TAG -> TAG
    com.baidu.android.pushservice.PushSDK mPushSDK -> mPushSDK
    int ALARM_TIMEOUT -> ALARM_TIMEOUT
    int ALARM_NETWORKLESS_TIMEOUT -> ALARM_NETWORKLESS_TIMEOUT
    int alarmTimeout -> alarmTimeout
    com.baidu.android.pushservice.h mPushConnection -> mPushConnection
    java.lang.Object mPushConnLock -> mPushConnLock
    android.net.LocalServerSocket mLocalSocket -> mLocalSocket
    java.lang.String LOCAL_SOCKET_ADDRESS -> LOCAL_SOCKET_ADDRESS
    com.baidu.android.pushservice.ak mRegistrationService -> mRegistrationService
    java.lang.Boolean mIsAlive -> mIsAlive
    java.lang.Boolean mIsInited -> mIsInited
    java.lang.Object mIsAlive_lock -> mIsAlive_lock
    android.content.Context mContext -> mContext
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mStartRunnable -> mStartRunnable
    java.lang.Runnable mRegisterRunnable -> mRegisterRunnable
    java.lang.Runnable mConnectRunnable -> mConnectRunnable
    com.baidu.android.pushservice.PushSDK getInstance(android.content.Context) -> getInstance
    boolean initPushSDK() -> initPushSDK
    void destroy() -> destroy
    com.baidu.android.pushservice.ak getRegistrationService() -> getRegistrationService
    boolean handleOnStart(android.content.Intent) -> handleOnStart
    void setAlarmTimeout(int) -> setAlarmTimeout
    void doDestroy() -> doDestroy
    boolean shouldStopSelf(android.content.Context) -> shouldStopSelf
    void newPushConnection() -> newPushConnection
    void setAlarmRepeat() -> setAlarmRepeat
    void cancelAlarmRepeat() -> cancelAlarmRepeat
    void sendRequestTokenIntent() -> sendRequestTokenIntent
    void tryConnect() -> tryConnect
    boolean seizeLocalSocket() -> seizeLocalSocket
    boolean heartbeat() -> heartbeat
    void scheduleRegister() -> scheduleRegister
    void scheduleConnect() -> scheduleConnect
    android.content.Context getContext() -> getContext
    void tryUpdateGlobalPriority() -> tryUpdateGlobalPriority
    com.baidu.android.pushservice.PushSDK access$000() -> access$000
    android.content.Context access$100(com.baidu.android.pushservice.PushSDK) -> access$100
    java.lang.String access$200() -> access$200
    void access$300(com.baidu.android.pushservice.PushSDK) -> access$300
    void access$400(com.baidu.android.pushservice.PushSDK) -> access$400
    java.lang.Object access$500() -> access$500
com.baidu.android.pushservice.PushService -> com.baidu.android.pushservice.PushService:
    java.lang.String TAG -> TAG
    boolean mExitOnDestroy -> mExitOnDestroy
    android.os.Handler mHandler -> mHandler
    int FLAG_INCLUDE_STOPPED_PACKAGES -> FLAG_INCLUDE_STOPPED_PACKAGES
    int SERVICE_STOPPED_DELAY -> SERVICE_STOPPED_DELAY
    com.baidu.android.pushservice.SDcardRemovedReceiver sdcardRemovedReceiver -> sdcardRemovedReceiver
    boolean initSuc -> initSuc
    java.lang.Runnable mDestroyRunnable -> mDestroyRunnable
    int bindCnt -> bindCnt
    com.baidu.android.pushservice.b.a$a mBinder -> mBinder
    void onCreate() -> onCreate
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onDestroy() -> onDestroy
    void stopSelf(boolean,boolean) -> stopSelf
    android.os.IBinder onBind(android.content.Intent) -> onBind
    boolean onUnbind(android.content.Intent) -> onUnbind
    int access$000(com.baidu.android.pushservice.PushService) -> access$000
com.baidu.android.pushservice.PushServiceReceiver -> com.baidu.android.pushservice.PushServiceReceiver:
    java.lang.String TAG -> TAG
    java.util.concurrent.locks.ReentrantLock lock -> lock
    short BROWERINDEX -> BROWERINDEX
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void startOwnPushService(android.content.Context) -> startOwnPushService
    void showAdvertiseNotifiation(android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> showAdvertiseNotifiation
    void showPrivateNotification(android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> showPrivateNotification
    void showRichNotification(android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> showRichNotification
    void handleRichMediaClick(android.content.Context,com.baidu.android.pushservice.message.PublicMsg) -> handleRichMediaClick
    void sendNotificationArrivedReceiver(android.content.Context,java.lang.String,com.baidu.android.pushservice.message.PublicMsg) -> sendNotificationArrivedReceiver
    android.content.Intent getCommandServiceIntent(android.content.Context,android.content.Intent,java.lang.String) -> getCommandServiceIntent
    void access$000(android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> access$000
    void access$100(android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> access$100
    java.util.concurrent.locks.ReentrantLock access$200(com.baidu.android.pushservice.PushServiceReceiver) -> access$200
    void access$300(com.baidu.android.pushservice.PushServiceReceiver,android.content.Context,java.lang.String,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> access$300
com.baidu.android.pushservice.PushServiceReceiver$a -> com.baidu.android.pushservice.PushServiceReceiver$a:
    android.content.Context a -> a
    android.widget.RemoteViews b -> b
    int c -> c
    int d -> d
    int e -> e
    int f -> f
    android.app.NotificationManager g -> g
    void a(com.baidu.android.pushservice.richmedia.b) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.m) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.p) -> a
    void a(com.baidu.android.pushservice.richmedia.b,java.lang.Throwable) -> a
    void b(com.baidu.android.pushservice.richmedia.b) -> b
com.baidu.android.pushservice.PushSettings -> com.baidu.android.pushservice.PushSettings:
    int a -> a
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,int,java.lang.String) -> a
    void a(java.util.HashMap) -> a
    java.util.HashMap a() -> a
    boolean b(android.content.Context) -> b
    void enableDebugMode(android.content.Context,boolean) -> enableDebugMode
    void c(android.content.Context,boolean) -> c
    boolean c(android.content.Context) -> c
    void a(android.content.Context,boolean) -> a
    void a(android.content.Context,int) -> a
    int d(android.content.Context) -> d
    void a(android.content.Context,long) -> a
    long e(android.content.Context) -> e
    void b(android.content.Context,long) -> b
    long f(android.content.Context) -> f
    void b(android.content.Context,int) -> b
    boolean g(android.content.Context) -> g
    void c(android.content.Context,int) -> c
    int h(android.content.Context) -> h
    void b(android.content.Context,boolean) -> b
    boolean i(android.content.Context) -> i
    boolean j(android.content.Context) -> j
    void k(android.content.Context) -> k
    void l(android.content.Context) -> l
    void b(android.content.Context,java.lang.String) -> b
    void m(android.content.Context) -> m
com.baidu.android.pushservice.RegistrationReceiver -> com.baidu.android.pushservice.RegistrationReceiver:
    java.lang.String TAG -> TAG
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void handleRegisterSync(android.content.Context,android.content.Intent) -> handleRegisterSync
    void handleRegisterWebSync(android.content.Context,android.content.Intent) -> handleRegisterWebSync
    void handleRegisterLappSync(android.content.Context,android.content.Intent) -> handleRegisterLappSync
    void handleRegisterSDKSync(android.content.Context,android.content.Intent) -> handleRegisterSDKSync
    void packageUninstalled(android.content.Context,com.baidu.android.pushservice.c.h) -> packageUninstalled
    void access$000(android.content.Context,android.content.Intent) -> access$000
    void access$100(android.content.Context,android.content.Intent) -> access$100
    void access$200(android.content.Context,android.content.Intent) -> access$200
    void access$300(android.content.Context,android.content.Intent) -> access$300
com.baidu.android.pushservice.SDcardRemovedReceiver -> com.baidu.android.pushservice.SDcardRemovedReceiver:
    java.lang.String a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.baidu.android.pushservice.a -> com.baidu.android.pushservice.a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    short a() -> a
    boolean a(android.content.Context) -> a
    void a(android.content.Context,boolean) -> a
    boolean b(android.content.Context) -> b
    void b(android.content.Context,boolean) -> b
    java.lang.String c(android.content.Context) -> c
    int b() -> b
com.baidu.android.pushservice.a.a.a -> com.baidu.android.pushservice.a.a.a:
    com.baidu.android.pushservice.a.a.a$a a -> a
    android.net.Uri[] b -> b
    int c -> c
    void run() -> run
    android.graphics.Bitmap[] a(android.net.Uri[]) -> a
    byte[] a(android.net.Uri) -> a
    byte[] a(java.io.InputStream) -> a
    int a(android.graphics.BitmapFactory$Options,int,int) -> a
    int b(android.graphics.BitmapFactory$Options,int,int) -> b
    void a(android.graphics.Bitmap[]) -> a
com.baidu.android.pushservice.a.a.a$a -> com.baidu.android.pushservice.a.a.a$a:
    void a(android.graphics.Bitmap[]) -> a
com.baidu.android.pushservice.a.a.a$b -> com.baidu.android.pushservice.a.a.a$b:
    java.security.KeyStore a -> a
    com.baidu.android.pushservice.a.a.a$b b -> b
    javax.net.ssl.SSLContext c -> c
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    com.baidu.android.pushservice.a.a.a$b a() -> a
com.baidu.android.pushservice.a.a.b -> com.baidu.android.pushservice.a.a.b:
    com.baidu.android.pushservice.a.a.a$b a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.baidu.android.pushservice.a.a.c -> com.baidu.android.pushservice.a.a.c:
    java.lang.String a -> a
    com.baidu.android.pushservice.a.a.d b -> b
    int c -> c
    int d -> d
    java.util.Map e -> e
    android.graphics.Bitmap a(java.lang.String) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    boolean b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
com.baidu.android.pushservice.a.a.d -> com.baidu.android.pushservice.a.a.d:
    void a(java.lang.String,android.graphics.Bitmap) -> a
com.baidu.android.pushservice.a.a.e -> com.baidu.android.pushservice.a.a.e:
    java.lang.String a -> a
    com.baidu.android.pushservice.a.a.h b -> b
    com.baidu.android.pushservice.a.a.c c -> c
    int d -> d
    com.baidu.android.pushservice.a.a.e e -> e
    com.baidu.android.pushservice.a.a.e a() -> a
    void a(android.content.Context,com.baidu.android.pushservice.a.a.a$a,android.net.Uri[]) -> a
    android.graphics.Bitmap[] a(android.net.Uri[]) -> a
    com.baidu.android.pushservice.a.a.c a(com.baidu.android.pushservice.a.a.e) -> a
    com.baidu.android.pushservice.a.a.h b(com.baidu.android.pushservice.a.a.e) -> b
    android.graphics.Bitmap[] a(com.baidu.android.pushservice.a.a.e,android.net.Uri[]) -> a
com.baidu.android.pushservice.a.a.f -> com.baidu.android.pushservice.a.a.f:
    java.util.List a -> a
    com.baidu.android.pushservice.a.a.a$a b -> b
    android.net.Uri[] c -> c
    com.baidu.android.pushservice.a.a.e d -> d
    void a(android.graphics.Bitmap[]) -> a
com.baidu.android.pushservice.a.a.g -> com.baidu.android.pushservice.a.a.g:
    boolean a(android.net.Uri) -> a
com.baidu.android.pushservice.a.a.h -> com.baidu.android.pushservice.a.a.h:
    int a -> a
    com.baidu.android.pushservice.a.a.h$b b -> b
    java.util.Map c -> c
    android.graphics.Bitmap a(java.lang.String) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    void b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
com.baidu.android.pushservice.a.a.h$a -> com.baidu.android.pushservice.a.a.h$a:
    android.graphics.Bitmap a -> a
    int b -> b
    long c -> c
com.baidu.android.pushservice.a.a.h$b -> com.baidu.android.pushservice.a.a.h$b:
    java.lang.String a(java.util.Map) -> a
    void a(com.baidu.android.pushservice.a.a.h$a) -> a
com.baidu.android.pushservice.a.a.h$c -> com.baidu.android.pushservice.a.a.h$c:
    java.lang.String a(java.util.Map) -> a
    void a(com.baidu.android.pushservice.a.a.h$a) -> a
com.baidu.android.pushservice.a.b.a -> com.baidu.android.pushservice.a.b.a:
    android.widget.RemoteViews d -> d
    void a(android.graphics.Bitmap) -> a
    void b(android.graphics.Bitmap) -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void c(android.graphics.Bitmap) -> c
    void a(long) -> a
    void a(android.content.Intent) -> a
com.baidu.android.pushservice.a.b.b -> com.baidu.android.pushservice.a.b.b:
    android.widget.RemoteViews d -> d
    void a(android.graphics.Bitmap) -> a
    void a(android.content.Intent) -> a
com.baidu.android.pushservice.a.b.c -> com.baidu.android.pushservice.a.b.c:
    com.baidu.android.pushservice.a.b.f b(com.baidu.android.pushservice.a.b.c$a,android.content.Context,java.lang.String,java.lang.String) -> b
    boolean a() -> a
    boolean b() -> b
    boolean c() -> c
    boolean d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean h() -> h
    void a(com.baidu.android.pushservice.a.b.c$a,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.content.Intent[]) -> a
    void a(int,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.content.Intent[]) -> a
    void a(com.baidu.android.pushservice.a.b.c$a,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.content.Intent) -> a
    void a(int,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.content.Intent) -> a
    void a(com.baidu.android.pushservice.a.b.f,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
    com.baidu.android.pushservice.a.b.f a(com.baidu.android.pushservice.a.b.c$a,android.content.Context,java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.a.b.c$1 -> com.baidu.android.pushservice.a.b.c$1:
    int[] a -> a
com.baidu.android.pushservice.a.b.c$a -> com.baidu.android.pushservice.a.b.c$a:
    com.baidu.android.pushservice.a.b.c$a a -> a
    com.baidu.android.pushservice.a.b.c$a b -> b
    com.baidu.android.pushservice.a.b.c$a c -> c
    com.baidu.android.pushservice.a.b.c$a d -> d
    com.baidu.android.pushservice.a.b.c$a e -> e
    com.baidu.android.pushservice.a.b.c$a f -> f
    int g -> g
    com.baidu.android.pushservice.a.b.c$a[] h -> h
    com.baidu.android.pushservice.a.b.c$a[] values() -> values
    com.baidu.android.pushservice.a.b.c$a valueOf(java.lang.String) -> valueOf
    com.baidu.android.pushservice.a.b.c$a a(int) -> a
com.baidu.android.pushservice.a.b.d -> com.baidu.android.pushservice.a.b.d:
    com.baidu.android.pushservice.a.b.f a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    android.content.Intent[] e -> e
    java.lang.String f -> f
    void a(android.graphics.Bitmap[]) -> a
com.baidu.android.pushservice.a.b.e -> com.baidu.android.pushservice.a.b.e:
    android.content.Context a -> a
    com.baidu.android.pushservice.a.b.f b -> b
    java.lang.String c -> c
    android.content.Intent d -> d
    void a(android.graphics.Bitmap[]) -> a
com.baidu.android.pushservice.a.b.f -> com.baidu.android.pushservice.a.b.f:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    android.app.Notification a() -> a
    void b(android.graphics.Bitmap) -> b
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void a(long) -> a
    void c(android.graphics.Bitmap) -> c
    void a(android.content.Intent) -> a
    void a(android.app.PendingIntent) -> a
com.baidu.android.pushservice.a.b.g -> com.baidu.android.pushservice.a.b.g:
    int a(android.content.Context,java.lang.String) -> a
    int b(android.content.Context,java.lang.String) -> b
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
com.baidu.android.pushservice.a.b.h -> com.baidu.android.pushservice.a.b.h:
    java.lang.String d -> d
    android.app.Notification a -> a
    android.widget.RemoteViews b -> b
    android.content.Context c -> c
    void b(android.graphics.Bitmap) -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    android.app.Notification a() -> a
    void a(int) -> a
    void c(int) -> c
    void b(int) -> b
    void c(android.graphics.Bitmap) -> c
    void a(long) -> a
    void a(android.content.Intent) -> a
    void a(android.app.PendingIntent) -> a
    int b() -> b
com.baidu.android.pushservice.a.b.i -> com.baidu.android.pushservice.a.b.i:
    android.app.Notification a -> a
    android.content.Context b -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    android.app.Notification a() -> a
    void b(android.graphics.Bitmap) -> b
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void a(long) -> a
    void c(android.graphics.Bitmap) -> c
    void a(android.content.Intent) -> a
    void a(android.app.PendingIntent) -> a
com.baidu.android.pushservice.aa -> com.baidu.android.pushservice.aa:
    com.baidu.android.pushservice.PushService a -> a
    void run() -> run
com.baidu.android.pushservice.ab -> com.baidu.android.pushservice.ab:
    com.baidu.android.pushservice.PushService a -> a
    void a(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.b.b) -> a
    void a(java.lang.String,java.lang.String,com.baidu.android.pushservice.b.b) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,int,boolean,int,int) -> a
    int a(java.lang.String,int) -> a
    int b(java.lang.String) -> b
    int b(java.lang.String,int) -> b
    int c(java.lang.String) -> c
    int c(java.lang.String,int) -> c
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    int d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    boolean a(java.lang.String,boolean) -> a
    void b(java.lang.String,java.lang.String,com.baidu.android.pushservice.b.b) -> b
    int c() -> c
    void a(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.b.b) -> a
    java.lang.String f(java.lang.String) -> f
com.baidu.android.pushservice.ac -> com.baidu.android.pushservice.ac:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    byte[] d -> d
    byte[] e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    com.baidu.android.pushservice.PushServiceReceiver i -> i
    void run() -> run
com.baidu.android.pushservice.ad -> com.baidu.android.pushservice.ad:
    android.content.Context a -> a
    android.content.Intent b -> b
    com.baidu.android.pushservice.PushServiceReceiver c -> c
    void run() -> run
com.baidu.android.pushservice.ae -> com.baidu.android.pushservice.ae:
    android.content.Context a -> a
    void run() -> run
com.baidu.android.pushservice.af -> com.baidu.android.pushservice.af:
    com.baidu.android.pushservice.PushServiceReceiver$a a -> a
    void run() -> run
com.baidu.android.pushservice.ag -> com.baidu.android.pushservice.ag:
    java.lang.String a -> a
    com.baidu.android.pushservice.PushServiceReceiver$a b -> b
    void run() -> run
com.baidu.android.pushservice.ah -> com.baidu.android.pushservice.ah:
    java.lang.String d -> d
    java.lang.String[] e -> e
    java.lang.String f -> f
    java.lang.String[] g -> g
    int h -> h
    java.lang.String[] i -> i
    java.lang.String[] j -> j
    boolean k -> k
    java.lang.String l -> l
    java.lang.String a -> a
    java.util.ArrayList m -> m
    java.util.ArrayList n -> n
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    int c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    void a(android.content.Context) -> a
    java.lang.String a(android.content.Context,boolean) -> a
    java.lang.String b(android.content.Context,boolean) -> b
    java.util.ArrayList a(android.content.Context,java.lang.String) -> a
    java.util.ArrayList b(android.content.Context,java.lang.String) -> b
    void b(android.content.Context) -> b
    boolean b(android.content.Context,java.lang.String,java.lang.String) -> b
    java.lang.String f() -> f
    boolean a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String g() -> g
com.baidu.android.pushservice.ai -> com.baidu.android.pushservice.ai:
    android.content.Context a -> a
    android.content.SharedPreferences b -> b
    void run() -> run
com.baidu.android.pushservice.aj -> com.baidu.android.pushservice.aj:
    android.content.Intent a -> a
    android.content.Context b -> b
    com.baidu.android.pushservice.RegistrationReceiver c -> c
    void run() -> run
com.baidu.android.pushservice.ak -> com.baidu.android.pushservice.ak:
    android.content.Context a -> a
    com.baidu.android.pushservice.f.v b -> b
    java.util.concurrent.ExecutorService c -> c
    boolean a(android.content.Intent) -> a
    void b(android.content.Intent) -> b
    void c(android.content.Intent) -> c
    void d(android.content.Intent) -> d
    void e(android.content.Intent) -> e
    void f(android.content.Intent) -> f
    void g(android.content.Intent) -> g
    void h(android.content.Intent) -> h
    void i(android.content.Intent) -> i
    boolean j(android.content.Intent) -> j
    void k(android.content.Intent) -> k
    void l(android.content.Intent) -> l
    void m(android.content.Intent) -> m
    void n(android.content.Intent) -> n
    void o(android.content.Intent) -> o
    void p(android.content.Intent) -> p
    void q(android.content.Intent) -> q
    void r(android.content.Intent) -> r
    void s(android.content.Intent) -> s
    void t(android.content.Intent) -> t
    void u(android.content.Intent) -> u
    void v(android.content.Intent) -> v
    void w(android.content.Intent) -> w
    void x(android.content.Intent) -> x
    void y(android.content.Intent) -> y
    void z(android.content.Intent) -> z
    void A(android.content.Intent) -> A
    void B(android.content.Intent) -> B
    boolean a(com.baidu.android.pushservice.d.a) -> a
com.baidu.android.pushservice.al -> com.baidu.android.pushservice.al:
    com.baidu.android.pushservice.al a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.Thread d -> d
    boolean e -> e
    android.content.Context f -> f
    com.baidu.android.pushservice.al a(android.content.Context) -> a
    boolean a() -> a
    void a(boolean) -> a
    void a(android.content.Context,boolean) -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    void a(java.lang.String,java.lang.String) -> a
    boolean d() -> d
com.baidu.android.pushservice.b -> com.baidu.android.pushservice.b:
    java.lang.String a -> a
    android.content.Context b -> b
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void b(java.lang.Throwable) -> b
    java.lang.String a(java.lang.Throwable) -> a
    java.lang.String a() -> a
com.baidu.android.pushservice.b.a -> com.baidu.android.pushservice.b.a:
    void a(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.b.b) -> a
    void a(java.lang.String,java.lang.String,com.baidu.android.pushservice.b.b) -> a
    void b(java.lang.String,java.lang.String,com.baidu.android.pushservice.b.b) -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,int,boolean,int,int) -> a
    int a(java.lang.String,int) -> a
    int b(java.lang.String) -> b
    int b(java.lang.String,int) -> b
    int c(java.lang.String) -> c
    int c(java.lang.String,int) -> c
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    int d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    boolean a(java.lang.String,boolean) -> a
    int c() -> c
    void a(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.b.b) -> a
    java.lang.String f(java.lang.String) -> f
com.baidu.android.pushservice.b.a$a -> com.baidu.android.pushservice.b.a$a:
    com.baidu.android.pushservice.b.a a(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.b.a$a$a -> com.baidu.android.pushservice.b.a$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void a(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.b.b) -> a
    void a(java.lang.String,java.lang.String,com.baidu.android.pushservice.b.b) -> a
    void b(java.lang.String,java.lang.String,com.baidu.android.pushservice.b.b) -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,int,boolean,int,int) -> a
    int a(java.lang.String,int) -> a
    int b(java.lang.String) -> b
    int b(java.lang.String,int) -> b
    int c(java.lang.String) -> c
    int c(java.lang.String,int) -> c
    boolean a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    int d(java.lang.String) -> d
    boolean e(java.lang.String) -> e
    boolean a(java.lang.String,boolean) -> a
    int c() -> c
    void a(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.b.b) -> a
    java.lang.String f(java.lang.String) -> f
com.baidu.android.pushservice.b.b -> com.baidu.android.pushservice.b.b:
    void b(int,java.lang.String) -> b
    void a(int,java.lang.String) -> a
    void c(int,java.lang.String) -> c
com.baidu.android.pushservice.b.b$a -> com.baidu.android.pushservice.b.b$a:
    com.baidu.android.pushservice.b.b a(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.baidu.android.pushservice.b.b$a$a -> com.baidu.android.pushservice.b.b$a$a:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    void b(int,java.lang.String) -> b
    void a(int,java.lang.String) -> a
    void c(int,java.lang.String) -> c
com.baidu.android.pushservice.c -> com.baidu.android.pushservice.c:
    int a -> a
    int b -> b
    int c -> c
    android.net.Uri d -> d
    long[] e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    java.util.HashMap i -> i
    java.lang.String j -> j
    com.baidu.android.pushservice.c k -> k
    com.baidu.android.pushservice.c a() -> a
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(boolean) -> a
    void b(int) -> b
    void c(int) -> c
    void a(android.content.Context,android.app.PendingIntent,android.app.PendingIntent,com.baidu.android.pushservice.message.PublicMsg,boolean) -> a
    void c(java.lang.String) -> c
    void a(android.graphics.Bitmap,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    android.app.Notification a(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap) -> a
    int b(android.content.Context,java.lang.String) -> b
    int a(android.content.Context,java.lang.String) -> a
    int c(android.content.Context,java.lang.String) -> c
    java.util.HashMap a(com.baidu.android.pushservice.c,java.util.HashMap) -> a
    java.util.HashMap a(com.baidu.android.pushservice.c) -> a
    java.lang.String b(com.baidu.android.pushservice.c) -> b
    android.app.Notification a(com.baidu.android.pushservice.c,android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap) -> a
    void a(com.baidu.android.pushservice.c,android.graphics.Bitmap,java.lang.String) -> a
com.baidu.android.pushservice.c.a -> com.baidu.android.pushservice.c.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void a(int) -> a
    int d() -> d
com.baidu.android.pushservice.c.b -> com.baidu.android.pushservice.c.b:
    com.baidu.android.pushservice.c.b b -> b
    android.content.Context c -> c
    java.util.ArrayList a -> a
    java.util.HashMap d -> d
    com.baidu.android.pushservice.c.b a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    void a(java.lang.String,java.lang.String) -> a
    com.baidu.android.pushservice.c.h c(java.lang.String) -> c
    com.baidu.android.pushservice.c.h d(java.lang.String) -> d
    void a() -> a
    void a(java.lang.String,java.util.ArrayList) -> a
    com.baidu.android.pushservice.c.h g(java.lang.String) -> g
    java.util.ArrayList h(java.lang.String) -> h
    java.lang.String a(java.util.List) -> a
    java.lang.String a(com.baidu.android.pushservice.c.h,boolean) -> a
    java.lang.String a(com.baidu.android.pushservice.c.h,boolean,java.util.ArrayList,java.lang.String) -> a
    java.lang.String e(java.lang.String) -> e
    void a(java.lang.String,com.baidu.android.pushservice.d.h) -> a
    void f(java.lang.String) -> f
    boolean b(java.lang.String,java.lang.String) -> b
com.baidu.android.pushservice.c.c -> com.baidu.android.pushservice.c.c:
    com.baidu.android.pushservice.c.c a -> a
    com.baidu.android.pushservice.c.c b -> b
    com.baidu.android.pushservice.c.c c -> c
    com.baidu.android.pushservice.c.c d -> d
    com.baidu.android.pushservice.c.c e -> e
    com.baidu.android.pushservice.c.c[] f -> f
    com.baidu.android.pushservice.c.c[] values() -> values
    com.baidu.android.pushservice.c.c valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.c.d -> com.baidu.android.pushservice.c.d:
    com.baidu.android.pushservice.c.c d -> d
    com.baidu.android.pushservice.c.h a -> a
    com.baidu.android.pushservice.c.i b -> b
    com.baidu.android.pushservice.c.f c -> c
    com.baidu.android.pushservice.c.c a() -> a
    com.baidu.android.pushservice.c.d a(android.content.Context,java.lang.String) -> a
com.baidu.android.pushservice.c.e -> com.baidu.android.pushservice.c.e:
    java.util.ArrayList a -> a
    android.content.Context b -> b
    com.baidu.android.pushservice.c.c c -> c
    void a() -> a
    void b() -> b
    java.util.ArrayList a(java.lang.String) -> a
    java.lang.String a(com.baidu.android.pushservice.c.a,boolean) -> a
    java.lang.String a(java.util.List) -> a
    com.baidu.android.pushservice.c.a b(java.lang.String) -> b
    com.baidu.android.pushservice.c.a c(java.lang.String) -> c
com.baidu.android.pushservice.c.e$1 -> com.baidu.android.pushservice.c.e$1:
    int[] a -> a
com.baidu.android.pushservice.c.f -> com.baidu.android.pushservice.c.f:
    java.lang.String toString() -> toString
com.baidu.android.pushservice.c.g -> com.baidu.android.pushservice.c.g:
    com.baidu.android.pushservice.c.g d -> d
    com.baidu.android.pushservice.c.g a(android.content.Context) -> a
com.baidu.android.pushservice.c.h -> com.baidu.android.pushservice.c.h:
    java.lang.String e -> e
    java.lang.String toString() -> toString
com.baidu.android.pushservice.c.i -> com.baidu.android.pushservice.c.i:
    java.lang.String toString() -> toString
com.baidu.android.pushservice.c.j -> com.baidu.android.pushservice.c.j:
    com.baidu.android.pushservice.c.j d -> d
    java.lang.String e -> e
    com.baidu.android.pushservice.c.j a(android.content.Context) -> a
    java.util.ArrayList a(java.lang.String) -> a
    void a(com.baidu.android.pushservice.c.i) -> a
    java.lang.String a(java.util.List) -> a
    com.baidu.android.pushservice.c.i d(java.lang.String) -> d
    com.baidu.android.pushservice.c.a b(java.lang.String) -> b
com.baidu.android.pushservice.c.k -> com.baidu.android.pushservice.c.k:
    java.lang.String toString() -> toString
com.baidu.android.pushservice.c.l -> com.baidu.android.pushservice.c.l:
    com.baidu.android.pushservice.c.l d -> d
    com.baidu.android.pushservice.c.l a(android.content.Context) -> a
com.baidu.android.pushservice.d -> com.baidu.android.pushservice.d:
    com.baidu.android.pushservice.message.PublicMsg a -> a
    java.io.File b -> b
    android.content.Context c -> c
    android.app.PendingIntent d -> d
    android.app.PendingIntent e -> e
    boolean f -> f
    com.baidu.android.pushservice.c g -> g
    void run() -> run
com.baidu.android.pushservice.d.a -> com.baidu.android.pushservice.d.a:
    android.content.Context a -> a
    com.baidu.android.pushservice.d.m b -> b
    java.lang.String c -> c
    boolean d -> d
    void run() -> run
    void a() -> a
    boolean b() -> b
    int b(int) -> b
    void a(int) -> a
    void a(int,byte[]) -> a
    boolean c(java.lang.String) -> c
    void b(int,byte[]) -> b
    void a(java.lang.String) -> a
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(android.content.Intent) -> a
    void a(java.lang.String,int) -> a
com.baidu.android.pushservice.d.aa -> com.baidu.android.pushservice.d.aa:
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.ab -> com.baidu.android.pushservice.d.ab:
    java.lang.String e -> e
    com.baidu.android.pushservice.d.ab$a f -> f
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(android.content.Intent) -> a
com.baidu.android.pushservice.d.ab$a -> com.baidu.android.pushservice.d.ab$a:
    void a(int) -> a
com.baidu.android.pushservice.d.ac -> com.baidu.android.pushservice.d.ac:
    android.content.Context a -> a
    int b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    void run() -> run
    void a() -> a
    void a(int) -> a
    boolean b() -> b
    java.util.List c() -> c
    void d() -> d
com.baidu.android.pushservice.d.ad -> com.baidu.android.pushservice.d.ad:
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.ae -> com.baidu.android.pushservice.d.ae:
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.b -> com.baidu.android.pushservice.d.b:
    java.lang.String a -> a
    int b -> b
    com.baidu.android.pushservice.d.a c -> c
    void run() -> run
com.baidu.android.pushservice.d.c -> com.baidu.android.pushservice.d.c:
    void a(java.util.List) -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,java.util.ArrayList) -> a
com.baidu.android.pushservice.d.d -> com.baidu.android.pushservice.d.d:
    boolean b() -> b
com.baidu.android.pushservice.d.e -> com.baidu.android.pushservice.d.e:
    boolean e -> e
    java.lang.String b(java.lang.String) -> b
com.baidu.android.pushservice.d.f -> com.baidu.android.pushservice.d.f:
    boolean b() -> b
com.baidu.android.pushservice.d.g -> com.baidu.android.pushservice.d.g:
    int f -> f
    java.lang.String g -> g
    int h -> h
    java.lang.String i -> i
    void a(java.util.List) -> a
    void a(android.content.Intent) -> a
    java.lang.String b(java.lang.String) -> b
com.baidu.android.pushservice.d.h -> com.baidu.android.pushservice.d.h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String toString() -> toString
com.baidu.android.pushservice.d.i -> com.baidu.android.pushservice.d.i:
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.j -> com.baidu.android.pushservice.d.j:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.k -> com.baidu.android.pushservice.d.k:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.l -> com.baidu.android.pushservice.d.l:
    java.lang.String[] e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.m -> com.baidu.android.pushservice.d.m:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String toString() -> toString
com.baidu.android.pushservice.d.n -> com.baidu.android.pushservice.d.n:
    int e -> e
    int f -> f
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.o -> com.baidu.android.pushservice.d.o:
    int e -> e
    int f -> f
    java.lang.String g -> g
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.p -> com.baidu.android.pushservice.d.p:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.q -> com.baidu.android.pushservice.d.q:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.r -> com.baidu.android.pushservice.d.r:
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.s -> com.baidu.android.pushservice.d.s:
    java.lang.String e -> e
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.t -> com.baidu.android.pushservice.d.t:
    java.lang.String a -> a
    java.lang.String b -> b
    android.content.Context c -> c
    com.baidu.android.pushservice.e.c d -> d
    int e -> e
    int f -> f
    boolean g -> g
    com.baidu.android.pushservice.d.t$a h -> h
    void run() -> run
    void a() -> a
    boolean a(java.lang.String) -> a
    boolean b() -> b
    void c() -> c
    void a(int) -> a
com.baidu.android.pushservice.d.t$a -> com.baidu.android.pushservice.d.t$a:
    void a(boolean,com.baidu.android.pushservice.e.c) -> a
com.baidu.android.pushservice.d.u -> com.baidu.android.pushservice.d.u:
    int f -> f
    com.baidu.android.pushservice.e.l g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(int) -> a
    void a(int,byte[]) -> a
com.baidu.android.pushservice.d.v -> com.baidu.android.pushservice.d.v:
    com.baidu.android.pushservice.e.l f -> f
    java.lang.String e -> e
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(int) -> a
    void a(int,byte[]) -> a
    void b(int) -> b
com.baidu.android.pushservice.d.w -> com.baidu.android.pushservice.d.w:
    int f -> f
    com.baidu.android.pushservice.e.l g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    void a(java.util.List) -> a
    void a(int) -> a
    void a(int,byte[]) -> a
com.baidu.android.pushservice.d.x -> com.baidu.android.pushservice.d.x:
    java.util.ArrayList e -> e
    void a(java.util.List) -> a
    java.lang.String b(java.lang.String) -> b
    void a(int,byte[]) -> a
com.baidu.android.pushservice.d.y -> com.baidu.android.pushservice.d.y:
    void a(java.util.List) -> a
com.baidu.android.pushservice.d.z -> com.baidu.android.pushservice.d.z:
    java.lang.String f -> f
    void a(java.util.List) -> a
com.baidu.android.pushservice.db.LightAppDatabase -> com.baidu.android.pushservice.db.LightAppDatabase:
    java.lang.String TAG -> TAG
    com.baidu.android.pushservice.db.LightAppDatabase$a mDbHelper -> mDbHelper
    android.database.sqlite.SQLiteDatabase getWritableDb(android.content.Context) -> getWritableDb
    com.baidu.android.pushservice.db.LightAppDatabase$a getDBOpenHelper(android.content.Context) -> getDBOpenHelper
com.baidu.android.pushservice.db.LightAppDatabase$a -> com.baidu.android.pushservice.db.LightAppDatabase$a:
    android.content.Context a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
com.baidu.android.pushservice.db.LightAppTableDefine -> com.baidu.android.pushservice.db.LightAppTableDefine:
    java.lang.String DB_NAME -> DB_NAME
    int DB_VERSION_42 -> DB_VERSION_42
    int DB_VERSION_43 -> DB_VERSION_43
    int DB_VERSION_44 -> DB_VERSION_44
    int DB_VERSION -> DB_VERSION
    java.lang.String DB_TABLE_SUBSCRIBE -> DB_TABLE_SUBSCRIBE
    java.lang.String DB_TABLE_MESSAGE -> DB_TABLE_MESSAGE
    java.lang.String DB_TABLE_REGISTER -> DB_TABLE_REGISTER
    java.lang.String DB_TABLE_BLACKLIST -> DB_TABLE_BLACKLIST
    java.lang.String DB_TABLE_NOTIFICATION -> DB_TABLE_NOTIFICATION
    java.lang.String DB_TABLE_WEAK_SUBSCRIBE -> DB_TABLE_WEAK_SUBSCRIBE
    java.lang.String DB_TABLE_APP_INFO -> DB_TABLE_APP_INFO
    java.lang.String DB_DIR -> DB_DIR
    int Msg_Need_Clean_COUNT -> Msg_Need_Clean_COUNT
    int Weak_Subscribe_Need_Clean_COUNT -> Weak_Subscribe_Need_Clean_COUNT
    int PERAPP_RESERVED_MSG_COUNT -> PERAPP_RESERVED_MSG_COUNT
    int LIGHTAPP_BINDED -> LIGHTAPP_BINDED
    int LIGHTAPP_UNBIND -> LIGHTAPP_UNBIND
    int WEAKSUBSCIBE_BALCKED -> WEAKSUBSCIBE_BALCKED
    int WEAKSUBSCIBE_UN_BALCKED -> WEAKSUBSCIBE_UN_BALCKED
    java.lang.String SQL_CREATE_TABLE_SUBSCRIBE -> SQL_CREATE_TABLE_SUBSCRIBE
    java.lang.String SQL_CREATE_TABLE_MESSAGE -> SQL_CREATE_TABLE_MESSAGE
    java.lang.String SQL_CREATE_TABLE_REGISTER -> SQL_CREATE_TABLE_REGISTER
    java.lang.String SQL_CREATE_TABLE_APP_INFO -> SQL_CREATE_TABLE_APP_INFO
    java.lang.String SQL_CREATE_TABLE_BLACKLIST -> SQL_CREATE_TABLE_BLACKLIST
    java.lang.String SQL_CREATE_TABLE_NOTIFICATION -> SQL_CREATE_TABLE_NOTIFICATION
    java.lang.String SQL_CREATE_TABLE_WEAK_SUBSCRIBE -> SQL_CREATE_TABLE_WEAK_SUBSCRIBE
com.baidu.android.pushservice.db.a -> com.baidu.android.pushservice.db.a:
    android.content.Context a -> a
    java.util.concurrent.atomic.AtomicInteger b -> b
    android.database.sqlite.SQLiteDatabase c -> c
    java.util.concurrent.locks.ReentrantLock d -> d
    com.baidu.android.pushservice.db.a a() -> a
    void a(android.content.Context) -> a
    android.database.sqlite.SQLiteDatabase b() -> b
    void c() -> c
    void d() -> d
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(java.lang.String,java.lang.String) -> a
    java.lang.String e() -> e
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    int a(java.lang.String) -> a
    int b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.util.ArrayList f() -> f
    java.lang.String a(java.util.ArrayList) -> a
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int) -> a
    java.util.HashMap a(java.lang.String,int,boolean,int,int) -> a
    java.lang.String a(android.database.Cursor,int,int) -> a
    org.json.JSONObject a(android.database.Cursor) -> a
    int a(int,java.lang.String) -> a
    int b(java.util.ArrayList) -> b
    int b(int,java.lang.String) -> b
    int c(java.util.ArrayList) -> c
    int c(int,java.lang.String) -> c
    boolean e(java.lang.String) -> e
    boolean f(java.lang.String) -> f
    boolean b(java.lang.String,java.lang.String) -> b
    boolean b(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    java.lang.String g(java.lang.String) -> g
    java.util.HashMap g() -> g
    java.util.ArrayList h() -> h
    com.baidu.android.pushservice.f.h h(java.lang.String) -> h
    java.util.ArrayList a(java.lang.String,int) -> a
    java.util.ArrayList a(android.database.sqlite.SQLiteDatabase,java.lang.String) -> a
    java.lang.String i(java.lang.String) -> i
    void d(java.util.ArrayList) -> d
    int j(java.lang.String) -> j
    boolean k(java.lang.String) -> k
    boolean a(java.lang.String,boolean) -> a
    boolean c(java.lang.String,java.lang.String) -> c
    boolean a(java.lang.String,java.lang.String,int) -> a
    boolean b(java.lang.String,java.lang.String,int) -> b
    boolean d(java.lang.String,java.lang.String) -> d
    java.util.HashMap l(java.lang.String) -> l
    java.lang.String m(java.lang.String) -> m
    void e(java.lang.String,java.lang.String) -> e
    java.lang.String[] f(java.lang.String,java.lang.String) -> f
    boolean b(java.lang.String,int) -> b
    java.lang.String n(java.lang.String) -> n
    void a(java.util.List,java.util.List) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.db.a$a -> com.baidu.android.pushservice.db.a$a:
    com.baidu.android.pushservice.db.a a -> a
com.baidu.android.pushservice.e -> com.baidu.android.pushservice.e:
    java.lang.String i -> i
    int a -> a
    int b -> b
    int c -> c
    android.net.Uri d -> d
    long[] e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    boolean h -> h
    void a(int) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(boolean) -> a
    void b(int) -> b
    void c(int) -> c
    void a(android.content.Context,android.app.PendingIntent,java.lang.String) -> a
    android.graphics.Bitmap a(android.graphics.drawable.Drawable,android.content.Context) -> a
    java.lang.String a(com.baidu.android.pushservice.e) -> a
    android.graphics.Bitmap a(com.baidu.android.pushservice.e,android.graphics.drawable.Drawable,android.content.Context) -> a
com.baidu.android.pushservice.e.a -> com.baidu.android.pushservice.e.a:
    void a(int,java.lang.String) -> a
    void b(int,java.lang.String) -> b
    void c(int,java.lang.String) -> c
    void d(int,java.lang.String) -> d
    void e(int,java.lang.String) -> e
    void f(int,java.lang.String) -> f
    void g(int,java.lang.String) -> g
    void h(int,java.lang.String) -> h
    void a(int,java.lang.String,boolean) -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void d(int) -> d
    void e(int) -> e
com.baidu.android.pushservice.e.b -> com.baidu.android.pushservice.e.b:
    com.baidu.android.pushservice.b.b a -> a
    void a(int,java.lang.String) -> a
    void b(int,java.lang.String) -> b
    void c(int,java.lang.String) -> c
    void d(int,java.lang.String) -> d
    void e(int,java.lang.String) -> e
    void f(int,java.lang.String) -> f
    void g(int,java.lang.String) -> g
    void h(int,java.lang.String) -> h
    void a(int,java.lang.String,boolean) -> a
    void a(int) -> a
    void b(int) -> b
    void c(int) -> c
    void d(int) -> d
    void e(int) -> e
com.baidu.android.pushservice.e.c -> com.baidu.android.pushservice.e.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    byte[] d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    boolean k -> k
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void a(byte[]) -> a
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    void i(java.lang.String) -> i
    void a(boolean) -> a
    android.graphics.Bitmap a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    boolean g() -> g
com.baidu.android.pushservice.e.d -> com.baidu.android.pushservice.e.d:
    com.baidu.android.pushservice.ak a -> a
    android.content.Context b -> b
    com.baidu.android.pushservice.e.d c -> c
    com.baidu.android.pushservice.e.d a(android.content.Context) -> a
    void a(com.baidu.android.pushservice.d.a) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.e.a,int) -> a
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.e.a,int) -> b
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,java.lang.String,boolean,com.baidu.android.pushservice.e.a) -> a
    void a(java.lang.String,java.lang.String,boolean,java.lang.String,com.baidu.android.pushservice.e.a) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a,boolean) -> a
    void a(java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a) -> a
    void b(java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a) -> b
    java.lang.String a(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void d(java.lang.String,java.lang.String) -> d
    void b(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a,int) -> b
    void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a,int) -> a
    void a(java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.d.t$a) -> a
    void a(java.lang.String,com.baidu.android.pushservice.e.c) -> a
    void a(com.baidu.android.pushservice.e.c,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(boolean,java.lang.String,com.baidu.android.pushservice.e.c) -> a
    java.lang.String a(com.baidu.android.pushservice.e.a) -> a
    java.lang.String b(com.baidu.android.pushservice.e.a) -> b
    boolean a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String,boolean) -> a
    java.lang.String a(java.util.ArrayList,com.baidu.android.pushservice.e.a) -> a
    java.lang.String a(java.lang.String,int,boolean,int,int,com.baidu.android.pushservice.e.a) -> a
    long a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int) -> a
    int a(int,java.lang.String,com.baidu.android.pushservice.e.a) -> a
    int b(java.util.ArrayList,com.baidu.android.pushservice.e.a) -> b
    boolean b(java.lang.String) -> b
    int b(int,java.lang.String,com.baidu.android.pushservice.e.a) -> b
    int c(java.util.ArrayList,com.baidu.android.pushservice.e.a) -> c
    int c(int,java.lang.String,com.baidu.android.pushservice.e.a) -> c
    boolean a(java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
    int c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
    void a(java.util.ArrayList) -> a
    boolean a(java.lang.String,boolean) -> a
    boolean a(java.lang.String,java.lang.String,int) -> a
    boolean b(java.lang.String,java.lang.String) -> b
    int e(java.lang.String) -> e
    int f(java.lang.String) -> f
    java.util.ArrayList a(java.lang.String,int) -> a
    boolean a() -> a
    java.util.ArrayList b() -> b
    java.lang.String g(java.lang.String) -> g
    java.util.ArrayList b(java.lang.String,int) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.android.pushservice.f.h h(java.lang.String) -> h
    void c(java.lang.String,java.lang.String) -> c
    boolean c(java.lang.String,int) -> c
    java.lang.String i(java.lang.String) -> i
    android.content.Context a(com.baidu.android.pushservice.e.d) -> a
    void a(com.baidu.android.pushservice.e.d,java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.d.t$a) -> a
    java.lang.String a(com.baidu.android.pushservice.e.d,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> a
    void a(com.baidu.android.pushservice.e.d,com.baidu.android.pushservice.d.a) -> a
    void a(com.baidu.android.pushservice.e.d,java.lang.String,java.lang.String) -> a
    void a(com.baidu.android.pushservice.e.d,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.baidu.android.pushservice.e.a,int) -> a
com.baidu.android.pushservice.e.e -> com.baidu.android.pushservice.e.e:
    com.baidu.android.pushservice.e.a a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    boolean e -> e
    com.baidu.android.pushservice.e.d f -> f
    void a(int,java.util.HashMap) -> a
com.baidu.android.pushservice.e.f -> com.baidu.android.pushservice.e.f:
    java.lang.String a -> a
    com.baidu.android.pushservice.e.e b -> b
    void a(boolean,com.baidu.android.pushservice.e.c) -> a
com.baidu.android.pushservice.e.g -> com.baidu.android.pushservice.e.g:
    java.lang.String a -> a
    boolean b -> b
    com.baidu.android.pushservice.e.a c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    com.baidu.android.pushservice.e.d i -> i
    void a(boolean,com.baidu.android.pushservice.e.c) -> a
com.baidu.android.pushservice.e.h -> com.baidu.android.pushservice.e.h:
    com.baidu.android.pushservice.e.c a -> a
    com.baidu.android.pushservice.e.g b -> b
    void a(int,java.util.HashMap) -> a
com.baidu.android.pushservice.e.i -> com.baidu.android.pushservice.e.i:
    boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.baidu.android.pushservice.e.a d -> d
    com.baidu.android.pushservice.e.d e -> e
    void a(int,java.util.HashMap) -> a
com.baidu.android.pushservice.e.j -> com.baidu.android.pushservice.e.j:
    com.baidu.android.pushservice.e.a a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.e.d e -> e
    void a(int,java.util.HashMap) -> a
com.baidu.android.pushservice.e.k -> com.baidu.android.pushservice.e.k:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.baidu.android.pushservice.e.a g -> g
    int h -> h
    com.baidu.android.pushservice.e.d i -> i
    void a(boolean,com.baidu.android.pushservice.e.c) -> a
com.baidu.android.pushservice.e.l -> com.baidu.android.pushservice.e.l:
    void a(int,java.util.HashMap) -> a
com.baidu.android.pushservice.e.m -> com.baidu.android.pushservice.e.m:
    java.lang.String a -> a
    void a(android.content.Context,java.lang.String,com.baidu.android.pushservice.e.c) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,com.baidu.android.pushservice.e.c) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap a(android.content.Context,android.graphics.Bitmap) -> a
    android.graphics.Bitmap b(android.content.Context,android.graphics.Bitmap) -> b
    android.graphics.Bitmap c(android.content.Context,android.graphics.Bitmap) -> c
    android.graphics.Bitmap d(android.content.Context,android.graphics.Bitmap) -> d
    android.graphics.Bitmap a(android.graphics.drawable.Drawable,int,int) -> a
    int a(android.content.Context) -> a
    byte[] a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    byte[] a(java.io.InputStream) -> a
    void a(byte[],java.lang.String) -> a
    byte[] a(android.content.Context,boolean,java.lang.String) -> a
com.baidu.android.pushservice.f -> com.baidu.android.pushservice.f:
    android.content.Context a -> a
    android.app.PendingIntent b -> b
    java.lang.String c -> c
    com.baidu.android.pushservice.e d -> d
    void run() -> run
com.baidu.android.pushservice.f.a -> com.baidu.android.pushservice.f.a:
    int a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    void a(int) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    void a(long) -> a
    void b(java.lang.String) -> b
    void b(int) -> b
    void c(java.lang.String) -> c
    void c(int) -> c
    void d(java.lang.String) -> d
    void d(int) -> d
    java.lang.String b() -> b
    void e(java.lang.String) -> e
    void f(java.lang.String) -> f
    com.baidu.android.pushservice.f.r c() -> c
    com.baidu.android.pushservice.f.j d() -> d
    com.baidu.android.pushservice.f.b e() -> e
com.baidu.android.pushservice.f.b -> com.baidu.android.pushservice.f.b:
    java.lang.String a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.c -> com.baidu.android.pushservice.f.c:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.d -> com.baidu.android.pushservice.f.d:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    int g() -> g
    void a(int) -> a
    java.lang.String h() -> h
    void g(java.lang.String) -> g
    int i() -> i
    void b(int) -> b
com.baidu.android.pushservice.f.e -> com.baidu.android.pushservice.f.e:
    java.lang.String f -> f
    long g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
com.baidu.android.pushservice.f.f -> com.baidu.android.pushservice.f.f:
    int a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.String f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    int j -> j
    int k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    void a(int) -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    void a(long) -> a
    void b(java.lang.String) -> b
    void b(int) -> b
    void c(java.lang.String) -> c
    void c(int) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void d(int) -> d
    void e(int) -> e
    java.lang.String b() -> b
    void f(java.lang.String) -> f
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    com.baidu.android.pushservice.f.r c() -> c
    com.baidu.android.pushservice.f.j d() -> d
    com.baidu.android.pushservice.f.n e() -> e
    com.baidu.android.pushservice.f.c f() -> f
    com.baidu.android.pushservice.f.g g() -> g
com.baidu.android.pushservice.f.g -> com.baidu.android.pushservice.f.g:
    java.lang.String a -> a
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.h -> com.baidu.android.pushservice.f.h:
    java.lang.String c -> c
    boolean d -> d
    java.lang.String e -> e
    org.json.JSONArray f -> f
    java.lang.String a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(boolean) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    void c(java.lang.String) -> c
    org.json.JSONArray d() -> d
    org.json.JSONObject e() -> e
com.baidu.android.pushservice.f.i -> com.baidu.android.pushservice.f.i:
    java.lang.String c -> c
    com.baidu.android.pushservice.util.f d -> d
    com.baidu.android.pushservice.f.i e -> e
    com.baidu.android.pushservice.f.i a(android.content.Context) -> a
    boolean a() -> a
    java.lang.String a(boolean) -> a
    void a(java.lang.String) -> a
    void a(java.lang.String,java.util.List) -> a
    boolean b() -> b
    void a(com.baidu.android.pushservice.util.f) -> a
com.baidu.android.pushservice.f.j -> com.baidu.android.pushservice.f.j:
    int a -> a
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.k -> com.baidu.android.pushservice.f.k:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.l -> com.baidu.android.pushservice.f.l:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    long e -> e
    int a() -> a
    void a(int) -> a
    int b() -> b
    void b(int) -> b
    void c(int) -> c
    int c() -> c
    int d() -> d
    void d(int) -> d
    long e() -> e
    void a(long) -> a
com.baidu.android.pushservice.f.m -> com.baidu.android.pushservice.f.m:
    int c -> c
    int a -> a
    int b -> b
    void c(int) -> c
    int j() -> j
    org.json.JSONObject a(android.content.Context) -> a
com.baidu.android.pushservice.f.n -> com.baidu.android.pushservice.f.n:
    java.lang.String a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    org.json.JSONObject a() -> a
com.baidu.android.pushservice.f.o -> com.baidu.android.pushservice.f.o:
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,int,byte[],int,int) -> a
    void b(android.content.Context,java.lang.String,java.lang.String,int,byte[],int,int) -> b
    void a(android.content.Context,com.baidu.android.pushservice.c.h,com.baidu.android.pushservice.f.n,com.baidu.android.pushservice.f.m) -> a
com.baidu.android.pushservice.f.p -> com.baidu.android.pushservice.f.p:
    android.content.Context a -> a
    java.lang.String b -> b
    boolean c -> c
    boolean d -> d
    void b(boolean) -> b
    boolean a() -> a
    java.lang.String a(boolean) -> a
    void a(java.lang.String,java.util.List) -> a
    void a(java.lang.String) -> a
    boolean b() -> b
    void c(boolean) -> c
    void a(org.apache.http.HttpResponse) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    boolean c() -> c
    void a(com.baidu.android.pushservice.f.p,boolean) -> a
    boolean b(com.baidu.android.pushservice.f.p,boolean) -> b
com.baidu.android.pushservice.f.q -> com.baidu.android.pushservice.f.q:
    boolean a -> a
    com.baidu.android.pushservice.f.p b -> b
    void run() -> run
com.baidu.android.pushservice.f.r -> com.baidu.android.pushservice.f.r:
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
com.baidu.android.pushservice.f.s -> com.baidu.android.pushservice.f.s:
    android.content.Context b -> b
    java.lang.String a -> a
    com.baidu.android.pushservice.f.u c -> c
    boolean d -> d
    java.lang.String a() -> a
    java.lang.String a(long,long,int,int) -> a
    void b() -> b
    void c() -> c
    boolean d() -> d
    boolean b(long,long,int,int) -> b
    boolean a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    boolean a(com.baidu.android.pushservice.f.s) -> a
    android.content.Context b(com.baidu.android.pushservice.f.s) -> b
    void c(com.baidu.android.pushservice.f.s) -> c
com.baidu.android.pushservice.f.t -> com.baidu.android.pushservice.f.t:
    com.baidu.android.pushservice.f.s a -> a
    void run() -> run
com.baidu.android.pushservice.f.u -> com.baidu.android.pushservice.f.u:
    java.lang.String a -> a
    com.baidu.android.pushservice.f.u b -> b
    android.content.Context c -> c
    com.baidu.android.pushservice.f.u a(android.content.Context) -> a
    java.lang.String a(long,long,int,int) -> a
com.baidu.android.pushservice.f.v -> com.baidu.android.pushservice.f.v:
    android.content.Context a -> a
    com.baidu.android.pushservice.f.i b -> b
    com.baidu.android.pushservice.f.s c -> c
    void a() -> a
    void a(boolean,com.baidu.android.pushservice.util.f) -> a
    boolean b() -> b
    long a(android.content.Context,com.baidu.android.pushservice.f.n) -> a
    long a(android.content.Context,com.baidu.android.pushservice.f.c) -> a
    long a(android.content.Context,com.baidu.android.pushservice.f.j) -> a
    long a(android.content.Context,java.lang.String,int,java.lang.String) -> a
    long b(android.content.Context,com.baidu.android.pushservice.f.j) -> b
    long a(android.content.Context,com.baidu.android.pushservice.f.g) -> a
    long a(android.content.Context,com.baidu.android.pushservice.f.m) -> a
    long a(android.content.Context,com.baidu.android.pushservice.f.b) -> a
    void a(android.content.Context,java.lang.String) -> a
com.baidu.android.pushservice.f.w -> com.baidu.android.pushservice.f.w:
    android.content.Context a -> a
    java.lang.String b -> b
    void run() -> run
com.baidu.android.pushservice.g -> com.baidu.android.pushservice.g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.Object c -> c
    int d -> d
    android.app.Notification a(android.content.Context,int,java.lang.String,java.lang.String,boolean) -> a
    android.app.Notification a(android.content.Context,int,int,java.lang.String,java.lang.String,boolean) -> a
    void a(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> a
    void a(android.content.Context,int,com.baidu.android.pushservice.PushNotificationBuilder) -> a
    void b(android.content.Context,com.baidu.android.pushservice.PushNotificationBuilder) -> b
    com.baidu.android.pushservice.PushNotificationBuilder a(android.content.Context) -> a
    com.baidu.android.pushservice.PushNotificationBuilder b(android.content.Context) -> b
    com.baidu.android.pushservice.PushNotificationBuilder a(android.content.Context,int) -> a
com.baidu.android.pushservice.h -> com.baidu.android.pushservice.h:
    int a -> a
    boolean d -> d
    java.lang.Boolean e -> e
    boolean f -> f
    java.util.HashMap g -> g
    com.baidu.android.pushservice.h$b h -> h
    com.baidu.android.pushservice.h$a i -> i
    boolean j -> j
    int k -> k
    android.os.Handler b -> b
    android.content.Context l -> l
    boolean m -> m
    com.baidu.android.pushservice.message.d c -> c
    com.baidu.android.pushservice.h n -> n
    boolean o -> o
    java.lang.String p -> p
    int q -> q
    java.lang.Runnable r -> r
    java.lang.Runnable s -> s
    long t -> t
    int[] u -> u
    int[] v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    int A -> A
    com.baidu.android.pushservice.h a(android.content.Context) -> a
    boolean a() -> a
    void b() -> b
    void e() -> e
    void c() -> c
    void f() -> f
    void g() -> g
    void d() -> d
    void h() -> h
    void a(java.lang.String,int) -> a
    void a(boolean) -> a
    void a(int) -> a
    int i() -> i
    void j() -> j
    java.lang.String a(com.baidu.android.pushservice.h) -> a
    int b(com.baidu.android.pushservice.h) -> b
    android.content.Context c(com.baidu.android.pushservice.h) -> c
    void a(com.baidu.android.pushservice.h,java.lang.String,int) -> a
    boolean d(com.baidu.android.pushservice.h) -> d
    boolean a(com.baidu.android.pushservice.h,boolean) -> a
    java.lang.String a(com.baidu.android.pushservice.h,java.lang.String) -> a
    int a(com.baidu.android.pushservice.h,int) -> a
    java.lang.Boolean a(java.lang.Boolean) -> a
    void e(com.baidu.android.pushservice.h) -> e
    boolean b(com.baidu.android.pushservice.h,boolean) -> b
    com.baidu.android.pushservice.h$a f(com.baidu.android.pushservice.h) -> f
    com.baidu.android.pushservice.h$b g(com.baidu.android.pushservice.h) -> g
    boolean c(com.baidu.android.pushservice.h,boolean) -> c
    com.baidu.android.pushservice.h$a a(com.baidu.android.pushservice.h,com.baidu.android.pushservice.h$a) -> a
    com.baidu.android.pushservice.h$b a(com.baidu.android.pushservice.h,com.baidu.android.pushservice.h$b) -> a
    int[] h(com.baidu.android.pushservice.h) -> h
    int i(com.baidu.android.pushservice.h) -> i
    void j(com.baidu.android.pushservice.h) -> j
    boolean k(com.baidu.android.pushservice.h) -> k
    boolean d(com.baidu.android.pushservice.h,boolean) -> d
    void e(com.baidu.android.pushservice.h,boolean) -> e
    boolean l(com.baidu.android.pushservice.h) -> l
    java.lang.Runnable m(com.baidu.android.pushservice.h) -> m
    int b(com.baidu.android.pushservice.h,int) -> b
com.baidu.android.pushservice.h$a -> com.baidu.android.pushservice.h$a:
    com.baidu.android.pushservice.h a -> a
    void run() -> run
com.baidu.android.pushservice.h$b -> com.baidu.android.pushservice.h$b:
    com.baidu.android.pushservice.h a -> a
    void run() -> run
com.baidu.android.pushservice.i -> com.baidu.android.pushservice.i:
    com.baidu.android.pushservice.h a -> a
    void run() -> run
com.baidu.android.pushservice.j -> com.baidu.android.pushservice.j:
    com.baidu.android.pushservice.h a -> a
    void run() -> run
com.baidu.android.pushservice.jni.BaiduAppSSOJni -> com.baidu.android.pushservice.jni.BaiduAppSSOJni:
    java.lang.String TAG -> TAG
    byte[] getSsoHashNative(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> getSsoHashNative
    java.lang.String getPushHash(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> getPushHash
    java.lang.String getEncrypted(android.content.Context,java.lang.String,java.lang.String) -> getEncrypted
    byte[] encrypt(java.lang.String,java.lang.String) -> encrypt
    java.lang.String getDecrypted(android.content.Context,java.lang.String,java.lang.String) -> getDecrypted
    byte[] getKey(java.lang.String) -> getKey
com.baidu.android.pushservice.jni.PushSocket -> com.baidu.android.pushservice.jni.PushSocket:
    byte[] b -> b
    int c -> c
    java.lang.String d -> d
    int e -> e
    int f -> f
    boolean a -> a
    boolean a() -> a
    void a(int) -> a
    int createSocket(java.lang.String,int) -> createSocket
    int sendMsg(int,byte[],int) -> sendMsg
    byte[] rcvMsg(int) -> rcvMsg
    int getLastSocketError() -> getLastSocketError
    int closeSocket(int) -> closeSocket
    short a(byte[],int) -> a
    int b(byte[],int) -> b
    byte[] a(android.content.Context,int) -> a
    boolean b(int) -> b
com.baidu.android.pushservice.k -> com.baidu.android.pushservice.k:
    com.baidu.android.pushservice.h a -> a
    void run() -> run
com.baidu.android.pushservice.l -> com.baidu.android.pushservice.l:
    java.lang.String a -> a
    int b -> b
    com.baidu.android.pushservice.h c -> c
    void run() -> run
com.baidu.android.pushservice.m -> com.baidu.android.pushservice.m:
    com.baidu.android.pushservice.PushKeepAlive a -> a
    void run() -> run
com.baidu.android.pushservice.message.PublicMsg -> com.baidu.android.pushservice.message.PublicMsg:
    java.lang.String TAG -> TAG
    int FLAG_NEED_CLEAR -> FLAG_NEED_CLEAR
    int FLAG_NEED_VIBRATE -> FLAG_NEED_VIBRATE
    int FLAG_NEED_SOUND -> FLAG_NEED_SOUND
    java.lang.String mMsgId -> mMsgId
    java.lang.String mAppId -> mAppId
    java.lang.String mTitle -> mTitle
    java.lang.String mDescription -> mDescription
    java.lang.String mUrl -> mUrl
    java.lang.String mPkgName -> mPkgName
    int mPkgVercode -> mPkgVercode
    java.lang.String mPkgContent -> mPkgContent
    int mNetType -> mNetType
    int mNotificationBuilder -> mNotificationBuilder
    int mOpenType -> mOpenType
    int mNotificationBasicStyle -> mNotificationBasicStyle
    java.lang.String mCustomContent -> mCustomContent
    java.lang.String mSupportAppname -> mSupportAppname
    boolean mIsSupportApp -> mIsSupportApp
    int mUserConfirm -> mUserConfirm
    int mAdvertiseStyle -> mAdvertiseStyle
    java.lang.String mAdvertiseSmallIconUrl -> mAdvertiseSmallIconUrl
    java.lang.String mAdvertiseLargeIconUrl -> mAdvertiseLargeIconUrl
    java.lang.String mAdvertiseClickUrl -> mAdvertiseClickUrl
    java.lang.String mAdvertiseBigPictureUrl -> mAdvertiseBigPictureUrl
    java.lang.String mAdvertiseBigPictureClickUrl -> mAdvertiseBigPictureClickUrl
    java.lang.String mAdvertiseDownloadClickUrl -> mAdvertiseDownloadClickUrl
    java.lang.String mAdvertiseDetailClickUrl -> mAdvertiseDetailClickUrl
    java.lang.String mAdvertiseBigPictureTitle -> mAdvertiseBigPictureTitle
    java.lang.String mAdvertiseBigPictureContent -> mAdvertiseBigPictureContent
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void handle(android.content.Context,java.lang.String,java.lang.String) -> handle
    void handleRichMediaNotification(android.content.Context,java.lang.String,java.lang.String) -> handleRichMediaNotification
    void insertBehavior(android.content.Context,com.baidu.android.pushservice.c.h,com.baidu.android.pushservice.f.n,com.baidu.android.pushservice.f.m) -> insertBehavior
    void handlePrivateNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> handlePrivateNotification
    void insertNotiBehavior(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> insertNotiBehavior
    void handleADNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> handleADNotification
    void handleADShowNotification(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> handleADShowNotification
    void insertADSetEnableFailed(android.content.Context,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,short) -> insertADSetEnableFailed
    void insertADSendACKFailed(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> insertADSendACKFailed
    void insertADNotiBehavior(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> insertADNotiBehavior
    void insertADNoClientBehavior(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> insertADNoClientBehavior
    void insertADBehavior(android.content.Context,com.baidu.android.pushservice.c.h,com.baidu.android.pushservice.f.b,com.baidu.android.pushservice.f.m) -> insertADBehavior
    java.lang.String getLauncherActivityName(android.content.Context,java.lang.String) -> getLauncherActivityName
    void startApplicationLauncher(android.content.Context,java.lang.String,java.lang.String) -> startApplicationLauncher
    void addCustomContentToIntent(android.content.Intent) -> addCustomContentToIntent
    void sendResult(android.content.Context,java.lang.String,int) -> sendResult
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.baidu.android.pushservice.message.a -> com.baidu.android.pushservice.message.a:
    java.lang.String a -> a
    android.content.Context b -> b
    com.baidu.android.pushservice.message.c a(com.baidu.android.pushservice.message.g) -> a
com.baidu.android.pushservice.message.a$1 -> com.baidu.android.pushservice.message.a$1:
    int[] a -> a
com.baidu.android.pushservice.message.a.a -> com.baidu.android.pushservice.message.a.a:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,int,byte[],byte[]) -> a
    int a(java.lang.String) -> a
com.baidu.android.pushservice.message.a.a$1 -> com.baidu.android.pushservice.message.a.a$1:
    int[] a -> a
com.baidu.android.pushservice.message.a.a$a -> com.baidu.android.pushservice.message.a.a$a:
    com.baidu.android.pushservice.message.a.a$a a -> a
    com.baidu.android.pushservice.message.a.a$a b -> b
    com.baidu.android.pushservice.message.a.a$a c -> c
    com.baidu.android.pushservice.message.a.a$a d -> d
    com.baidu.android.pushservice.message.a.a$a e -> e
    com.baidu.android.pushservice.message.a.a$a f -> f
    com.baidu.android.pushservice.message.a.a$a[] g -> g
    com.baidu.android.pushservice.message.a.a$a[] values() -> values
    com.baidu.android.pushservice.message.a.a$a valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.message.a.b -> com.baidu.android.pushservice.message.a.b:
    java.lang.String b -> b
    android.content.Context c -> c
    int a(java.lang.String,java.lang.String,int,byte[],byte[]) -> a
com.baidu.android.pushservice.message.a.c -> com.baidu.android.pushservice.message.a.c:
    java.lang.String b -> b
    android.content.Context a -> a
    boolean a(byte[]) -> a
    int a(java.lang.String,java.lang.String,int,byte[],byte[]) -> a
com.baidu.android.pushservice.message.a.d -> com.baidu.android.pushservice.message.a.d:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,int,byte[],byte[]) -> a
    com.baidu.android.pushservice.message.PublicMsg a(android.content.Context,java.lang.String,java.lang.String,byte[],byte[]) -> a
com.baidu.android.pushservice.message.a.d$1 -> com.baidu.android.pushservice.message.a.d$1:
    int[] a -> a
com.baidu.android.pushservice.message.a.e -> com.baidu.android.pushservice.message.a.e:
    int a(android.content.Context,java.lang.String,java.lang.String,byte[],com.baidu.android.pushservice.message.PublicMsg) -> a
    boolean b(android.content.Context,java.lang.String,int) -> b
    java.lang.String a(android.content.Context,java.lang.String,int) -> a
    void a(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,int,byte[],byte[]) -> a
    void a(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String,int,byte[],byte[]) -> a
    android.content.ComponentName a(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> a
    void b(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String) -> b
    void a(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String,java.lang.String,int,boolean) -> a
    void a(android.content.Context,android.content.Intent) -> a
    void b(android.content.Context,android.content.Intent) -> b
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.Context,com.baidu.android.pushservice.message.PublicMsg) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context,com.baidu.android.pushservice.message.PublicMsg,java.lang.String) -> b
com.baidu.android.pushservice.message.a.f -> com.baidu.android.pushservice.message.a.f:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,int,byte[],byte[]) -> a
com.baidu.android.pushservice.message.a.f$1 -> com.baidu.android.pushservice.message.a.f$1:
    int[] a -> a
com.baidu.android.pushservice.message.a.g -> com.baidu.android.pushservice.message.a.g:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,int,byte[],byte[]) -> a
    java.lang.String[] a(android.content.Context,int,java.lang.String,java.lang.String,byte[],byte[]) -> a
com.baidu.android.pushservice.message.a.g$1 -> com.baidu.android.pushservice.message.a.g$1:
    int[] a -> a
com.baidu.android.pushservice.message.a.h -> com.baidu.android.pushservice.message.a.h:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,int,byte[],byte[]) -> a
com.baidu.android.pushservice.message.a.i -> com.baidu.android.pushservice.message.a.i:
    com.baidu.android.pushservice.message.PublicMsg a(android.content.Context,java.lang.String,java.lang.String,byte[]) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.message.a.j -> com.baidu.android.pushservice.message.a.j:
    java.lang.String a -> a
    android.content.Context b -> b
    com.baidu.android.pushservice.message.a.c a(com.baidu.android.pushservice.message.a.k) -> a
com.baidu.android.pushservice.message.a.j$1 -> com.baidu.android.pushservice.message.a.j$1:
    int[] a -> a
com.baidu.android.pushservice.message.a.k -> com.baidu.android.pushservice.message.a.k:
    com.baidu.android.pushservice.message.a.k a -> a
    com.baidu.android.pushservice.message.a.k b -> b
    com.baidu.android.pushservice.message.a.k c -> c
    com.baidu.android.pushservice.message.a.k d -> d
    com.baidu.android.pushservice.message.a.k e -> e
    com.baidu.android.pushservice.message.a.k f -> f
    com.baidu.android.pushservice.message.a.k g -> g
    com.baidu.android.pushservice.message.a.k h -> h
    com.baidu.android.pushservice.message.a.k i -> i
    com.baidu.android.pushservice.message.a.k j -> j
    int k -> k
    com.baidu.android.pushservice.message.a.k[] l -> l
    com.baidu.android.pushservice.message.a.k[] values() -> values
    com.baidu.android.pushservice.message.a.k valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.baidu.android.pushservice.message.a.k a(int) -> a
com.baidu.android.pushservice.message.a.l -> com.baidu.android.pushservice.message.a.l:
    java.lang.String b -> b
    int a(java.lang.String,java.lang.String,int,byte[],byte[]) -> a
com.baidu.android.pushservice.message.b -> com.baidu.android.pushservice.message.b:
    java.lang.String b -> b
    int a(com.baidu.android.pushservice.message.e) -> a
com.baidu.android.pushservice.message.c -> com.baidu.android.pushservice.message.c:
    android.content.Context a -> a
    int a(com.baidu.android.pushservice.message.e) -> a
com.baidu.android.pushservice.message.d -> com.baidu.android.pushservice.message.d:
    android.content.Context a -> a
    java.util.LinkedList b -> b
    void a(com.baidu.android.pushservice.message.e) -> a
    java.util.LinkedList a() -> a
    com.baidu.android.pushservice.message.e a(byte[],int) -> a
    void b(com.baidu.android.pushservice.message.e) -> b
    void a(int) -> a
    void b() -> b
    void c() -> c
com.baidu.android.pushservice.message.e -> com.baidu.android.pushservice.message.e:
    short a -> a
    short b -> b
    int c -> c
    byte[] d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    com.baidu.android.pushservice.message.k h -> h
    byte[] a() -> a
    boolean b() -> b
    boolean c() -> c
    void a(boolean) -> a
    com.baidu.android.pushservice.message.k d() -> d
    void a(com.baidu.android.pushservice.message.k) -> a
    java.lang.String toString() -> toString
com.baidu.android.pushservice.message.f -> com.baidu.android.pushservice.message.f:
    com.baidu.android.pushservice.util.h b -> b
    com.baidu.android.pushservice.message.e a(byte[],int) -> a
    void b(com.baidu.android.pushservice.message.e) -> b
    void a(int) -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    java.lang.String h() -> h
    void b() -> b
    void c() -> c
    byte[] a(short,byte[]) -> a
    byte[] a(long,int) -> a
    byte[] a(java.lang.String,int) -> a
com.baidu.android.pushservice.message.g -> com.baidu.android.pushservice.message.g:
    com.baidu.android.pushservice.message.g a -> a
    com.baidu.android.pushservice.message.g b -> b
    com.baidu.android.pushservice.message.g c -> c
    com.baidu.android.pushservice.message.g d -> d
    com.baidu.android.pushservice.message.g e -> e
    com.baidu.android.pushservice.message.g f -> f
    com.baidu.android.pushservice.message.g g -> g
    int h -> h
    com.baidu.android.pushservice.message.g[] i -> i
    com.baidu.android.pushservice.message.g[] values() -> values
    com.baidu.android.pushservice.message.g valueOf(java.lang.String) -> valueOf
    int a() -> a
    com.baidu.android.pushservice.message.g a(int) -> a
com.baidu.android.pushservice.message.h -> com.baidu.android.pushservice.message.h:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.message.PublicMsg e -> e
    void run() -> run
com.baidu.android.pushservice.message.i -> com.baidu.android.pushservice.message.i:
    com.baidu.android.pushservice.message.PublicMsg a(android.os.Parcel) -> a
    com.baidu.android.pushservice.message.PublicMsg[] a(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.baidu.android.pushservice.message.j -> com.baidu.android.pushservice.message.j:
    java.lang.String b -> b
    android.content.Context c -> c
    int a(com.baidu.android.pushservice.message.e) -> a
    java.lang.String a(byte[]) -> a
com.baidu.android.pushservice.message.k -> com.baidu.android.pushservice.message.k:
    java.lang.String a -> a
    long b -> b
    int c -> c
    byte[] d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    long b() -> b
    java.lang.String c() -> c
    void a(long) -> a
    int d() -> d
    void a(int) -> a
    void a(byte[]) -> a
    byte[] e() -> e
    java.lang.String toString() -> toString
com.baidu.android.pushservice.message.l -> com.baidu.android.pushservice.message.l:
    java.lang.String b -> b
    int a(com.baidu.android.pushservice.message.e) -> a
com.baidu.android.pushservice.n -> com.baidu.android.pushservice.n:
    com.baidu.android.pushservice.PushLightapp a -> a
    void run() -> run
com.baidu.android.pushservice.o -> com.baidu.android.pushservice.o:
    com.baidu.android.pushservice.PushLightapp a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.baidu.android.pushservice.p -> com.baidu.android.pushservice.p:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void a(int,java.lang.String) -> a
    void b(int,java.lang.String) -> b
    void c(int,java.lang.String) -> c
com.baidu.android.pushservice.q -> com.baidu.android.pushservice.q:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void a(int,java.lang.String) -> a
    void b(int,java.lang.String) -> b
    void c(int,java.lang.String) -> c
com.baidu.android.pushservice.r -> com.baidu.android.pushservice.r:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    java.lang.String b -> b
    com.baidu.android.pushservice.PushLightapp c -> c
    void a(int,java.lang.String) -> a
    void b(int,java.lang.String) -> b
    void c(int,java.lang.String) -> c
com.baidu.android.pushservice.richmedia.MediaListActivity -> com.baidu.android.pushservice.richmedia.MediaListActivity:
    android.widget.ListView c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    android.widget.LinearLayout l -> l
    android.widget.RemoteViews m -> m
    int n -> n
    int o -> o
    int p -> p
    int q -> q
    java.util.ArrayList a -> a
    java.lang.String r -> r
    android.app.NotificationManager b -> b
    android.widget.AdapterView$OnItemClickListener s -> s
    android.widget.AdapterView$OnItemLongClickListener t -> t
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String a() -> a
    void a(com.baidu.android.pushservice.richmedia.MediaListActivity,java.lang.String,java.lang.String,java.lang.String) -> a
    android.widget.RemoteViews a(com.baidu.android.pushservice.richmedia.MediaListActivity) -> a
    int b(com.baidu.android.pushservice.richmedia.MediaListActivity) -> b
    int c(com.baidu.android.pushservice.richmedia.MediaListActivity) -> c
    int d(com.baidu.android.pushservice.richmedia.MediaListActivity) -> d
    int e(com.baidu.android.pushservice.richmedia.MediaListActivity) -> e
    int f(com.baidu.android.pushservice.richmedia.MediaListActivity) -> f
    int g(com.baidu.android.pushservice.richmedia.MediaListActivity) -> g
    int h(com.baidu.android.pushservice.richmedia.MediaListActivity) -> h
    int i(com.baidu.android.pushservice.richmedia.MediaListActivity) -> i
    int j(com.baidu.android.pushservice.richmedia.MediaListActivity) -> j
com.baidu.android.pushservice.richmedia.MediaListActivity$a -> com.baidu.android.pushservice.richmedia.MediaListActivity$a:
    android.content.Context b -> b
    java.util.ArrayList c -> c
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.baidu.android.pushservice.richmedia.MediaViewActivity -> com.baidu.android.pushservice.richmedia.MediaViewActivity:
    android.widget.RelativeLayout b -> b
    android.webkit.WebView a -> a
    android.webkit.WebChromeClient c -> c
    android.webkit.WebViewClient d -> d
    void onCreate(android.os.Bundle) -> onCreate
    void a() -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onPause() -> onPause
    void onResume() -> onResume
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
com.baidu.android.pushservice.richmedia.a -> com.baidu.android.pushservice.richmedia.a:
    com.baidu.android.pushservice.richmedia.l b -> b
    org.apache.http.impl.client.DefaultHttpClient a -> a
    org.apache.http.HttpResponse a(java.lang.String,java.lang.String,java.util.Map,java.util.List) -> a
    void a() -> a
com.baidu.android.pushservice.richmedia.b -> com.baidu.android.pushservice.richmedia.b:
    com.baidu.android.pushservice.richmedia.l g -> g
    com.baidu.android.pushservice.richmedia.q a -> a
    java.lang.ref.WeakReference b -> b
    java.util.HashSet h -> h
    long c -> c
    com.baidu.android.pushservice.richmedia.n d -> d
    boolean i -> i
    int e -> e
    int f -> f
    void run() -> run
    com.baidu.android.pushservice.richmedia.p b() -> b
    void a(com.baidu.android.pushservice.richmedia.p) -> a
    void a(com.baidu.android.pushservice.richmedia.m) -> a
    int a(com.baidu.android.pushservice.richmedia.b) -> a
    long a() -> a
    boolean a(com.baidu.android.pushservice.richmedia.n) -> a
    boolean b(com.baidu.android.pushservice.richmedia.n) -> b
    com.baidu.android.pushservice.util.PushDatabase$g a(android.content.Context,java.lang.String) -> a
    int a(java.lang.String) -> a
    void a(java.io.File,java.lang.String) -> a
    int compareTo(java.lang.Object) -> compareTo
com.baidu.android.pushservice.richmedia.c -> com.baidu.android.pushservice.richmedia.c:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    void onClick(android.view.View) -> onClick
com.baidu.android.pushservice.richmedia.d -> com.baidu.android.pushservice.richmedia.d:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.baidu.android.pushservice.richmedia.e -> com.baidu.android.pushservice.richmedia.e:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.baidu.android.pushservice.richmedia.f -> com.baidu.android.pushservice.richmedia.f:
    com.baidu.android.pushservice.richmedia.e a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.baidu.android.pushservice.richmedia.g -> com.baidu.android.pushservice.richmedia.g:
    long a -> a
    com.baidu.android.pushservice.richmedia.e b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.baidu.android.pushservice.richmedia.h -> com.baidu.android.pushservice.richmedia.h:
    com.baidu.android.pushservice.richmedia.MediaListActivity a -> a
    void a(com.baidu.android.pushservice.richmedia.b) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.m) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.p) -> a
    void a(com.baidu.android.pushservice.richmedia.b,java.lang.Throwable) -> a
    void b(com.baidu.android.pushservice.richmedia.b) -> b
com.baidu.android.pushservice.richmedia.i -> com.baidu.android.pushservice.richmedia.i:
    com.baidu.android.pushservice.richmedia.h a -> a
    void run() -> run
com.baidu.android.pushservice.richmedia.j -> com.baidu.android.pushservice.richmedia.j:
    com.baidu.android.pushservice.richmedia.MediaViewActivity a -> a
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
com.baidu.android.pushservice.richmedia.k -> com.baidu.android.pushservice.richmedia.k:
    com.baidu.android.pushservice.richmedia.MediaViewActivity a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
com.baidu.android.pushservice.richmedia.l -> com.baidu.android.pushservice.richmedia.l:
    boolean a -> a
    java.util.Hashtable b -> b
    java.lang.String c -> c
    com.baidu.android.pushservice.richmedia.l a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
com.baidu.android.pushservice.richmedia.m -> com.baidu.android.pushservice.richmedia.m:
    long a -> a
    long b -> b
com.baidu.android.pushservice.richmedia.n -> com.baidu.android.pushservice.richmedia.n:
    com.baidu.android.pushservice.richmedia.l i -> i
    java.lang.String a -> a
    java.lang.String j -> j
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    com.baidu.android.pushservice.richmedia.n$a e -> e
    java.util.Map k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.util.List f -> f
    boolean g -> g
    boolean h -> h
    java.util.Map a() -> a
    com.baidu.android.pushservice.richmedia.n$a b() -> b
    void a(com.baidu.android.pushservice.richmedia.n$a) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.baidu.android.pushservice.richmedia.n$a -> com.baidu.android.pushservice.richmedia.n$a:
    com.baidu.android.pushservice.richmedia.n$a a -> a
    com.baidu.android.pushservice.richmedia.n$a[] b -> b
    com.baidu.android.pushservice.richmedia.n$a[] values() -> values
    com.baidu.android.pushservice.richmedia.n$a valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.richmedia.o -> com.baidu.android.pushservice.richmedia.o:
    com.baidu.android.pushservice.richmedia.n a(com.baidu.android.pushservice.richmedia.n$a,java.lang.String) -> a
com.baidu.android.pushservice.richmedia.o$1 -> com.baidu.android.pushservice.richmedia.o$1:
    int[] a -> a
com.baidu.android.pushservice.richmedia.p -> com.baidu.android.pushservice.richmedia.p:
    com.baidu.android.pushservice.richmedia.n$a a -> a
    int b -> b
    int c -> c
    com.baidu.android.pushservice.richmedia.n d -> d
    java.lang.String e -> e
com.baidu.android.pushservice.richmedia.q -> com.baidu.android.pushservice.richmedia.q:
    void a(com.baidu.android.pushservice.richmedia.b) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.m) -> a
    void a(com.baidu.android.pushservice.richmedia.b,com.baidu.android.pushservice.richmedia.p) -> a
    void a(com.baidu.android.pushservice.richmedia.b,java.lang.Throwable) -> a
    void b(com.baidu.android.pushservice.richmedia.b) -> b
com.baidu.android.pushservice.s -> com.baidu.android.pushservice.s:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void a(int,java.lang.String) -> a
    void b(int,java.lang.String) -> b
    void c(int,java.lang.String) -> c
com.baidu.android.pushservice.t -> com.baidu.android.pushservice.t:
    com.baidu.android.pushservice.IPushLightappListener a -> a
    com.baidu.android.pushservice.PushLightapp b -> b
    void c(int,java.lang.String) -> c
    void b(int,java.lang.String) -> b
    void a(int,java.lang.String) -> a
com.baidu.android.pushservice.u -> com.baidu.android.pushservice.u:
    int a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.util.NoProGuard -> com.baidu.android.pushservice.util.NoProGuard:
com.baidu.android.pushservice.util.PushADProvider -> com.baidu.android.pushservice.util.PushADProvider:
    android.database.sqlite.SQLiteDatabase a -> a
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
com.baidu.android.pushservice.util.PushClientDataBase -> com.baidu.android.pushservice.util.PushClientDataBase:
    com.baidu.android.pushservice.util.PushClientDataBase$b mDbHelper -> mDbHelper
    java.lang.Object myLock -> myLock
    int DB_VERSION -> DB_VERSION
    java.lang.String DB_DIR -> DB_DIR
    java.lang.String DATA_DIR -> DATA_DIR
    java.lang.String TAG -> TAG
    java.lang.String DB_NAME -> DB_NAME
    void close() -> close
    android.database.sqlite.SQLiteDatabase getDb(android.content.Context) -> getDb
    com.baidu.android.pushservice.util.PushClientDataBase$b getClientDbOpenHelper(android.content.Context) -> getClientDbOpenHelper
    void setPushADSwitch(android.content.Context,boolean) -> setPushADSwitch
    void setPushADMaxCount(android.content.Context,int) -> setPushADMaxCount
    void setPushADServerMaxCount(android.content.Context,int) -> setPushADServerMaxCount
    void setPushADCurCount(android.content.Context,int) -> setPushADCurCount
    void setPushADCurTimeStamp(android.content.Context,long) -> setPushADCurTimeStamp
    long setPushADClientInfo(android.content.Context,com.baidu.android.pushservice.f.k) -> setPushADClientInfo
    com.baidu.android.pushservice.f.l getPushADClientInfoEnumClass(android.content.Context) -> getPushADClientInfoEnumClass
com.baidu.android.pushservice.util.PushClientDataBase$a -> com.baidu.android.pushservice.util.PushClientDataBase$a:
    com.baidu.android.pushservice.util.PushClientDataBase$a a -> a
    com.baidu.android.pushservice.util.PushClientDataBase$a b -> b
    com.baidu.android.pushservice.util.PushClientDataBase$a c -> c
    com.baidu.android.pushservice.util.PushClientDataBase$a d -> d
    com.baidu.android.pushservice.util.PushClientDataBase$a e -> e
    com.baidu.android.pushservice.util.PushClientDataBase$a f -> f
    com.baidu.android.pushservice.util.PushClientDataBase$a[] g -> g
    com.baidu.android.pushservice.util.PushClientDataBase$a[] values() -> values
    com.baidu.android.pushservice.util.PushClientDataBase$a valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushClientDataBase$b -> com.baidu.android.pushservice.util.PushClientDataBase$b:
    android.content.Context a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.android.pushservice.util.PushDatabase -> com.baidu.android.pushservice.util.PushDatabase:
    com.baidu.android.pushservice.util.PushDatabase$e mDbHelper -> mDbHelper
    com.baidu.android.pushservice.util.PushDatabase$d mDbErrorHandler -> mDbErrorHandler
    java.lang.Object myLock -> myLock
    int DB_VERSION -> DB_VERSION
    int MSG_ID_COUNT_MAX -> MSG_ID_COUNT_MAX
    java.lang.String DB_NAME -> DB_NAME
    java.lang.String TAG -> TAG
    void close() -> close
    android.database.sqlite.SQLiteDatabase getDb(android.content.Context) -> getDb
    com.baidu.android.pushservice.util.PushDatabase$e getDbOpenHelper(android.content.Context) -> getDbOpenHelper
    void clearOldDBFile(java.lang.String,android.content.Context) -> clearOldDBFile
    int updateAppInfo(android.database.sqlite.SQLiteDatabase,int,com.baidu.android.pushservice.f.m) -> updateAppInfo
    com.baidu.android.pushservice.f.m needToInsertUpdate(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.f.m) -> needToInsertUpdate
    boolean needToInsertUpdatePromptBehavior(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.f.j) -> needToInsertUpdatePromptBehavior
    int updatePromptBehavior(android.database.sqlite.SQLiteDatabase,com.baidu.android.pushservice.f.j) -> updatePromptBehavior
    int getBehaviorEnumCount(android.content.Context,long,long) -> getBehaviorEnumCount
    boolean isNeedUpload(android.content.Context,long,long) -> isNeedUpload
    java.util.List getBehaviorEnumClassList(android.content.Context,long,long,int,int) -> getBehaviorEnumClassList
    java.util.List getADBehaviorEnumClassList(android.content.Context,long,long,int,int) -> getADBehaviorEnumClassList
    java.util.List getAppInfo(android.content.Context) -> getAppInfo
    java.util.List selectFileDownloadingInfo(android.content.Context) -> selectFileDownloadingInfo
    com.baidu.android.pushservice.util.PushDatabase$g getFileDownloadingInfo(android.content.Context,java.lang.String) -> getFileDownloadingInfo
    int deleteFileDownloadingInfo(android.content.Context,java.lang.String) -> deleteFileDownloadingInfo
    long insertPushBehavior(android.content.Context,com.baidu.android.pushservice.f.n) -> insertPushBehavior
    long insertADPushBehavior(android.content.Context,com.baidu.android.pushservice.f.b) -> insertADPushBehavior
    boolean insertMsgId(android.content.Context,java.lang.String) -> insertMsgId
    long insertApiBehavior(android.content.Context,com.baidu.android.pushservice.f.c) -> insertApiBehavior
    long insertPromptBehavior(android.content.Context,com.baidu.android.pushservice.f.j) -> insertPromptBehavior
    long insertAgentOrHttpBehavior(android.content.Context,com.baidu.android.pushservice.f.j) -> insertAgentOrHttpBehavior
    long insertCrashBehavior(android.content.Context,com.baidu.android.pushservice.f.g) -> insertCrashBehavior
    long insertLappMsgInfo(android.content.Context,com.baidu.android.pushservice.util.PushDatabase$h) -> insertLappMsgInfo
    long updateLappVisitedInfo(android.content.Context,com.baidu.android.pushservice.util.PushDatabase$h) -> updateLappVisitedInfo
    boolean getLappVisitedInfoByTime(android.content.Context,long) -> getLappVisitedInfoByTime
    long insertAppInfo(android.content.Context,com.baidu.android.pushservice.f.m) -> insertAppInfo
    long insertStatisticsInfo(android.content.Context,com.baidu.android.pushservice.util.PushDatabase$l) -> insertStatisticsInfo
    long insertFileDownloadingInfo(android.content.Context,com.baidu.android.pushservice.util.PushDatabase$g) -> insertFileDownloadingInfo
    long clearAppInfo(android.content.Context) -> clearAppInfo
    long clearBehaviorInfo(android.content.Context) -> clearBehaviorInfo
    int updateFileDownloadingInfo(android.content.Context,java.lang.String,com.baidu.android.pushservice.util.PushDatabase$g) -> updateFileDownloadingInfo
    long setNoDisturbMode(android.content.Context,java.lang.String,int,int,int,int) -> setNoDisturbMode
    int[] getNoDisturb(android.content.Context,java.lang.String) -> getNoDisturb
com.baidu.android.pushservice.util.PushDatabase$a -> com.baidu.android.pushservice.util.PushDatabase$a:
    com.baidu.android.pushservice.util.PushDatabase$a a -> a
    com.baidu.android.pushservice.util.PushDatabase$a b -> b
    com.baidu.android.pushservice.util.PushDatabase$a c -> c
    com.baidu.android.pushservice.util.PushDatabase$a d -> d
    com.baidu.android.pushservice.util.PushDatabase$a e -> e
    com.baidu.android.pushservice.util.PushDatabase$a f -> f
    com.baidu.android.pushservice.util.PushDatabase$a g -> g
    com.baidu.android.pushservice.util.PushDatabase$a h -> h
    com.baidu.android.pushservice.util.PushDatabase$a i -> i
    com.baidu.android.pushservice.util.PushDatabase$a j -> j
    com.baidu.android.pushservice.util.PushDatabase$a k -> k
    com.baidu.android.pushservice.util.PushDatabase$a[] l -> l
    com.baidu.android.pushservice.util.PushDatabase$a[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$a valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$b -> com.baidu.android.pushservice.util.PushDatabase$b:
    com.baidu.android.pushservice.util.PushDatabase$b a -> a
    com.baidu.android.pushservice.util.PushDatabase$b b -> b
    com.baidu.android.pushservice.util.PushDatabase$b c -> c
    com.baidu.android.pushservice.util.PushDatabase$b d -> d
    com.baidu.android.pushservice.util.PushDatabase$b e -> e
    com.baidu.android.pushservice.util.PushDatabase$b f -> f
    com.baidu.android.pushservice.util.PushDatabase$b g -> g
    com.baidu.android.pushservice.util.PushDatabase$b h -> h
    com.baidu.android.pushservice.util.PushDatabase$b i -> i
    com.baidu.android.pushservice.util.PushDatabase$b j -> j
    com.baidu.android.pushservice.util.PushDatabase$b k -> k
    com.baidu.android.pushservice.util.PushDatabase$b[] l -> l
    com.baidu.android.pushservice.util.PushDatabase$b[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$b valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$c -> com.baidu.android.pushservice.util.PushDatabase$c:
    com.baidu.android.pushservice.util.PushDatabase$c a -> a
    com.baidu.android.pushservice.util.PushDatabase$c b -> b
    com.baidu.android.pushservice.util.PushDatabase$c c -> c
    com.baidu.android.pushservice.util.PushDatabase$c d -> d
    com.baidu.android.pushservice.util.PushDatabase$c e -> e
    com.baidu.android.pushservice.util.PushDatabase$c f -> f
    com.baidu.android.pushservice.util.PushDatabase$c g -> g
    com.baidu.android.pushservice.util.PushDatabase$c h -> h
    com.baidu.android.pushservice.util.PushDatabase$c i -> i
    com.baidu.android.pushservice.util.PushDatabase$c j -> j
    com.baidu.android.pushservice.util.PushDatabase$c k -> k
    com.baidu.android.pushservice.util.PushDatabase$c l -> l
    com.baidu.android.pushservice.util.PushDatabase$c m -> m
    com.baidu.android.pushservice.util.PushDatabase$c n -> n
    com.baidu.android.pushservice.util.PushDatabase$c[] o -> o
    com.baidu.android.pushservice.util.PushDatabase$c[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$c valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$d -> com.baidu.android.pushservice.util.PushDatabase$d:
    void onCorruption(android.database.sqlite.SQLiteDatabase) -> onCorruption
    void a(java.lang.String) -> a
com.baidu.android.pushservice.util.PushDatabase$e -> com.baidu.android.pushservice.util.PushDatabase$e:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void a(android.database.sqlite.SQLiteDatabase) -> a
com.baidu.android.pushservice.util.PushDatabase$f -> com.baidu.android.pushservice.util.PushDatabase$f:
    com.baidu.android.pushservice.util.PushDatabase$f a -> a
    com.baidu.android.pushservice.util.PushDatabase$f b -> b
    com.baidu.android.pushservice.util.PushDatabase$f c -> c
    com.baidu.android.pushservice.util.PushDatabase$f d -> d
    com.baidu.android.pushservice.util.PushDatabase$f e -> e
    com.baidu.android.pushservice.util.PushDatabase$f f -> f
    com.baidu.android.pushservice.util.PushDatabase$f g -> g
    com.baidu.android.pushservice.util.PushDatabase$f h -> h
    com.baidu.android.pushservice.util.PushDatabase$f i -> i
    com.baidu.android.pushservice.util.PushDatabase$f j -> j
    com.baidu.android.pushservice.util.PushDatabase$f[] k -> k
    com.baidu.android.pushservice.util.PushDatabase$f[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$f valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$g -> com.baidu.android.pushservice.util.PushDatabase$g:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    int h -> h
    int i -> i
    long j -> j
com.baidu.android.pushservice.util.PushDatabase$h -> com.baidu.android.pushservice.util.PushDatabase$h:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    long e -> e
com.baidu.android.pushservice.util.PushDatabase$i -> com.baidu.android.pushservice.util.PushDatabase$i:
    com.baidu.android.pushservice.util.PushDatabase$i a -> a
    com.baidu.android.pushservice.util.PushDatabase$i b -> b
    com.baidu.android.pushservice.util.PushDatabase$i c -> c
    com.baidu.android.pushservice.util.PushDatabase$i d -> d
    com.baidu.android.pushservice.util.PushDatabase$i e -> e
    com.baidu.android.pushservice.util.PushDatabase$i f -> f
    com.baidu.android.pushservice.util.PushDatabase$i g -> g
    com.baidu.android.pushservice.util.PushDatabase$i[] h -> h
    com.baidu.android.pushservice.util.PushDatabase$i[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$i valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$j -> com.baidu.android.pushservice.util.PushDatabase$j:
    com.baidu.android.pushservice.util.PushDatabase$j a -> a
    com.baidu.android.pushservice.util.PushDatabase$j b -> b
    com.baidu.android.pushservice.util.PushDatabase$j c -> c
    com.baidu.android.pushservice.util.PushDatabase$j[] d -> d
    com.baidu.android.pushservice.util.PushDatabase$j[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$j valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$k -> com.baidu.android.pushservice.util.PushDatabase$k:
    com.baidu.android.pushservice.util.PushDatabase$k a -> a
    com.baidu.android.pushservice.util.PushDatabase$k b -> b
    com.baidu.android.pushservice.util.PushDatabase$k c -> c
    com.baidu.android.pushservice.util.PushDatabase$k d -> d
    com.baidu.android.pushservice.util.PushDatabase$k e -> e
    com.baidu.android.pushservice.util.PushDatabase$k[] f -> f
    com.baidu.android.pushservice.util.PushDatabase$k[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$k valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.PushDatabase$l -> com.baidu.android.pushservice.util.PushDatabase$l:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    org.json.JSONObject g -> g
com.baidu.android.pushservice.util.PushDatabase$m -> com.baidu.android.pushservice.util.PushDatabase$m:
    com.baidu.android.pushservice.util.PushDatabase$m a -> a
    com.baidu.android.pushservice.util.PushDatabase$m b -> b
    com.baidu.android.pushservice.util.PushDatabase$m c -> c
    com.baidu.android.pushservice.util.PushDatabase$m d -> d
    com.baidu.android.pushservice.util.PushDatabase$m e -> e
    com.baidu.android.pushservice.util.PushDatabase$m f -> f
    com.baidu.android.pushservice.util.PushDatabase$m g -> g
    com.baidu.android.pushservice.util.PushDatabase$m h -> h
    com.baidu.android.pushservice.util.PushDatabase$m[] i -> i
    com.baidu.android.pushservice.util.PushDatabase$m[] values() -> values
    com.baidu.android.pushservice.util.PushDatabase$m valueOf(java.lang.String) -> valueOf
com.baidu.android.pushservice.util.a -> com.baidu.android.pushservice.util.a:
    java.lang.String a -> a
    void a(android.content.Context,int) -> a
    void a(android.content.Context,java.util.List,int) -> a
    java.lang.String c(android.content.Context) -> c
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String) -> b
    boolean d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String a() -> a
com.baidu.android.pushservice.util.b -> com.baidu.android.pushservice.util.b:
    android.content.Context a -> a
    int b -> b
    void run() -> run
com.baidu.android.pushservice.util.c -> com.baidu.android.pushservice.util.c:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void run() -> run
com.baidu.android.pushservice.util.d -> com.baidu.android.pushservice.util.d:
    java.util.Properties a -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    com.baidu.android.pushservice.util.d a() -> a
com.baidu.android.pushservice.util.e -> com.baidu.android.pushservice.util.e:
    java.lang.Object a -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,int) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.Object) -> a
    java.lang.Object b(android.content.Context,java.lang.String) -> b
    org.json.JSONObject a(android.content.Context) -> a
com.baidu.android.pushservice.util.f -> com.baidu.android.pushservice.util.f:
    void a(int,java.lang.String) -> a
com.baidu.android.pushservice.util.g -> com.baidu.android.pushservice.util.g:
    int a -> a
    java.lang.String a(android.content.Context,org.json.JSONObject) -> a
    java.lang.String a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    java.lang.String e(android.content.Context) -> e
    long c(android.content.Context) -> c
    void a(android.content.Context,long) -> a
    java.lang.String a(android.content.Context,boolean) -> a
    java.lang.String a() -> a
    java.lang.String d(android.content.Context) -> d
com.baidu.android.pushservice.util.h -> com.baidu.android.pushservice.util.h:
    java.io.DataInputStream b -> b
    byte[] a -> a
    void a() -> a
    int a(int) -> a
    int b() -> b
    short c() -> c
    long d() -> d
    void a(byte[]) -> a
com.baidu.android.pushservice.util.i -> com.baidu.android.pushservice.util.i:
    java.io.DataOutputStream b -> b
    byte[] a -> a
    void a(int) -> a
    void b(int) -> b
    void a() -> a
    void a(byte[]) -> a
    void a(long) -> a
com.baidu.android.pushservice.util.j -> com.baidu.android.pushservice.util.j:
    boolean a(android.content.Context) -> a
com.baidu.android.pushservice.util.k -> com.baidu.android.pushservice.util.k:
    void a(android.content.Context,java.lang.String,int) -> a
    int b(android.content.Context,java.lang.String,int) -> b
    void c(android.content.Context,java.lang.String,int) -> c
    int d(android.content.Context,java.lang.String,int) -> d
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    long b(android.content.Context,java.lang.String) -> b
    void a(android.content.Context,java.lang.String,long) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,long,java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.util.l -> com.baidu.android.pushservice.util.l:
    java.lang.String a -> a
    boolean accept(java.io.File) -> accept
com.baidu.android.pushservice.util.m -> com.baidu.android.pushservice.util.m:
    void a(android.content.Context) -> a
    void a(android.content.Context,android.content.Intent,java.lang.String) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,android.content.Intent) -> a
    void b(android.content.Context) -> b
    void b(android.content.Context,android.content.Intent) -> b
    android.content.Intent c(android.content.Context) -> c
    void d(android.content.Context) -> d
com.baidu.android.pushservice.util.n -> com.baidu.android.pushservice.util.n:
    java.lang.String[] a -> a
    int b -> b
    boolean c -> c
    boolean a(android.content.Context) -> a
    android.content.pm.PackageInfo a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
    int[] b(android.content.Context) -> b
    int d(android.content.Context,java.lang.String) -> d
    boolean e(android.content.Context,java.lang.String) -> e
    boolean c(android.content.Context) -> c
    void a(android.content.Context,android.content.Intent,long) -> a
    android.content.Intent d(android.content.Context) -> d
    android.content.Intent e(android.content.Context) -> e
    android.content.Intent f(android.content.Context) -> f
    android.content.Intent g(android.content.Context) -> g
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String,java.lang.String) -> b
    void h(android.content.Context) -> h
    boolean a(android.content.Context,boolean) -> a
    boolean a(java.lang.String,java.lang.String[]) -> a
    void a(android.content.Context,long) -> a
    void i(android.content.Context) -> i
    void f(android.content.Context,java.lang.String) -> f
    long j(android.content.Context) -> j
    void a(android.content.Context,boolean,boolean) -> a
    long k(android.content.Context) -> k
    long g(android.content.Context,java.lang.String) -> g
    boolean h(android.content.Context,java.lang.String) -> h
    boolean a(java.lang.String) -> a
    boolean l(android.content.Context) -> l
    boolean i(android.content.Context,java.lang.String) -> i
    boolean m(android.content.Context) -> m
    boolean j(android.content.Context,java.lang.String) -> j
    boolean b(android.content.Context,boolean) -> b
    boolean c(android.content.Context,boolean) -> c
    boolean z(android.content.Context) -> z
    boolean a(android.content.Context,java.lang.String,java.lang.String,boolean) -> a
    int s(android.content.Context,java.lang.String) -> s
    boolean a(android.content.Context,java.lang.String,boolean) -> a
    boolean A(android.content.Context) -> A
    int n(android.content.Context) -> n
    java.util.List o(android.content.Context) -> o
    boolean p(android.content.Context) -> p
    java.lang.String q(android.content.Context) -> q
    java.util.ArrayList B(android.content.Context) -> B
    java.util.List r(android.content.Context) -> r
    void a(java.lang.String,android.content.Context) -> a
    boolean C(android.content.Context) -> C
    void b(java.lang.String,android.content.Context) -> b
    void a(java.lang.String,java.lang.String) -> a
    java.lang.String a(long) -> a
    java.lang.String a(java.lang.Throwable) -> a
    com.baidu.android.pushservice.f.m a(com.baidu.android.pushservice.f.m,android.content.Context,java.lang.String) -> a
    int k(android.content.Context,java.lang.String) -> k
    java.lang.String s(android.content.Context) -> s
    int t(android.content.Context) -> t
    java.lang.String b(java.lang.String) -> b
    java.lang.String l(android.content.Context,java.lang.String) -> l
    boolean m(android.content.Context,java.lang.String) -> m
    boolean a() -> a
    java.lang.String c(android.content.Context,java.lang.String,java.lang.String) -> c
    java.lang.String u(android.content.Context) -> u
    java.lang.String v(android.content.Context) -> v
    java.lang.String n(android.content.Context,java.lang.String) -> n
    long w(android.content.Context) -> w
    boolean o(android.content.Context,java.lang.String) -> o
    boolean a(int,int,int,int) -> a
    java.lang.String p(android.content.Context,java.lang.String) -> p
    int c(java.lang.String) -> c
    void a(android.content.Context,android.content.Intent,java.lang.String,java.lang.String) -> a
    android.content.ComponentName b(android.content.Context,android.content.Intent,java.lang.String,java.lang.String) -> b
    android.content.ComponentName a(android.content.Context,android.content.Intent,java.lang.String) -> a
    void a(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,short) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String) -> a
    java.lang.String d(android.content.Context,java.lang.String,java.lang.String) -> d
    java.util.HashMap b() -> b
    void a(java.util.HashMap) -> a
    long c() -> c
    java.lang.String x(android.content.Context) -> x
    java.lang.String y(android.content.Context) -> y
    int d(java.lang.String) -> d
    java.lang.String e(java.lang.String) -> e
    byte[] a(byte[],byte[]) -> a
    boolean q(android.content.Context,java.lang.String) -> q
    boolean d() -> d
    boolean r(android.content.Context,java.lang.String) -> r
com.baidu.android.pushservice.util.o -> com.baidu.android.pushservice.util.o:
    void a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    int b(android.content.Context,java.lang.String,java.lang.String,int) -> b
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
com.baidu.android.pushservice.v -> com.baidu.android.pushservice.v:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    byte[] e -> e
    byte[] f -> f
    com.baidu.android.pushservice.PushMessageReceiver g -> g
    void run() -> run
com.baidu.android.pushservice.w -> com.baidu.android.pushservice.w:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.android.pushservice.x -> com.baidu.android.pushservice.x:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.android.pushservice.y -> com.baidu.android.pushservice.y:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.android.pushservice.z -> com.baidu.android.pushservice.z:
    com.baidu.android.pushservice.PushSDK a -> a
    void run() -> run
com.baidu.frontia.base.a.a.a -> com.baidu.frontia.base.a.a.a:
    boolean a -> a
    boolean b -> b
    java.util.logging.Logger c -> c
    void a(java.lang.String,java.lang.String) -> a
    void b(java.lang.String,java.lang.String) -> b
    void c(java.lang.String,java.lang.String) -> c
    void d(java.lang.String,java.lang.String) -> d
    void e(java.lang.String,java.lang.String) -> e
    void a(java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    java.lang.String a(java.lang.Throwable) -> a
com.baidu.frontia.base.a.a.b -> com.baidu.frontia.base.a.a.b:
    void a(java.lang.String,java.lang.String,android.content.Context) -> a
    void b(java.lang.String,java.lang.String,android.content.Context) -> b
    void c(java.lang.String,java.lang.String,android.content.Context) -> c
    void d(java.lang.String,java.lang.String,android.content.Context) -> d
com.baidu.frontia.base.b.a -> com.baidu.frontia.base.b.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    java.lang.String f -> f
    void a(android.content.Context,android.net.NetworkInfo) -> a
    void c(android.content.Context) -> c
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
com.baidu.frontia.base.b.b -> com.baidu.frontia.base.b.b:
    boolean a -> a
    java.lang.RuntimeException b -> b
    org.apache.http.params.HttpParams createHttpParams() -> createHttpParams
    void a() -> a
com.baidu.frontia.base.b.b$a -> com.baidu.frontia.base.b.b$a:
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
com.baidu.frontia.base.b.c -> com.baidu.frontia.base.b.c:
    com.baidu.frontia.base.b.b a -> a
    org.apache.http.conn.ClientConnectionManager newInstance(org.apache.http.params.HttpParams,org.apache.http.conn.scheme.SchemeRegistry) -> newInstance
com.baidu.frontia.base.b.d -> com.baidu.frontia.base.b.d:
    com.baidu.frontia.base.b.b a -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.baidu.frontia.base.b.e -> com.baidu.frontia.base.b.e:
    com.baidu.frontia.base.b.b a -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.baidu.frontia.base.b.f -> com.baidu.frontia.base.b.f:
    org.apache.http.HttpResponse a(org.apache.http.client.methods.HttpRequestBase) -> a
com.baidu.frontia.base.b.g -> com.baidu.frontia.base.b.g:
    javax.net.ssl.SSLContext a -> a
    java.net.Socket createSocket() -> createSocket
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
com.baidu.frontia.base.b.h -> com.baidu.frontia.base.b.h:
    com.baidu.frontia.base.b.g a -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
com.baidu.frontia.base.c.a -> com.baidu.frontia.base.c.a:
    byte[] a(java.lang.String) -> a
com.baidu.frontia.base.c.b -> com.baidu.frontia.base.c.b:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    com.baidu.frontia.base.c.b$a a() -> a
    int e() -> e
    com.baidu.frontia.base.c.b$a a(java.lang.String) -> a
    java.lang.String a(java.io.InputStream) -> a
    long b() -> b
    int[] a(android.content.Context) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    org.json.JSONObject f(android.content.Context) -> f
    org.json.JSONObject g(android.content.Context) -> g
com.baidu.frontia.base.c.b$a -> com.baidu.frontia.base.c.b$a:
    int a -> a
    int b -> b
    int c -> c
    double d -> d
    long e -> e
com.baidu.frontia.base.c.b$b -> com.baidu.frontia.base.c.b$b:
    android.content.Context a -> a
    org.json.JSONObject b -> b
    com.baidu.frontia.base.c.b$b c -> c
    org.json.JSONObject a() -> a
    com.baidu.frontia.base.c.b$b a(android.content.Context) -> a
com.baidu.frontia.base.check.FrontiaError -> com.baidu.frontia.base.check.FrontiaError:
com.baidu.frontia.base.check.a -> com.baidu.frontia.base.check.a:
    android.net.ConnectivityManager a -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    android.net.ConnectivityManager e(android.content.Context) -> e
    android.net.NetworkInfo c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
com.baidu.frontia.base.d.a -> com.baidu.frontia.base.d.a:
    byte[] a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(java.lang.String,java.lang.String,byte[]) -> b
com.baidu.frontia.base.d.b -> com.baidu.frontia.base.d.b:
    byte[] a -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    java.lang.String a(byte[],java.lang.String) -> a
com.baidu.frontia.base.d.c -> com.baidu.frontia.base.d.c:
    java.lang.String a -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
com.baidu.frontia.base.d.d -> com.baidu.frontia.base.d.d:
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String c(android.content.Context) -> c
    java.lang.String a(java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
com.baidu.frontia.base.d.d$a -> com.baidu.frontia.base.d.d$a:
    java.lang.String a -> a
    boolean b -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    com.baidu.frontia.base.d.d$a a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
com.baidu.frontia.base.d.e -> com.baidu.frontia.base.d.e:
    java.lang.String a(byte[],boolean) -> a
    java.lang.String a(byte[],java.lang.String,boolean) -> a
com.baidu.frontia.base.d.f -> com.baidu.frontia.base.d.f:
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[],java.lang.String) -> b
    byte[] c(byte[],java.lang.String) -> c
    byte[] a(byte[],java.lang.String,int) -> a
com.baidu.loctp.str.BDLocManager -> com.baidu.loctp.str.BDLocManager:
    long a -> a
    android.content.Context b -> b
    android.telephony.TelephonyManager c -> c
    com.baidu.loctp.str.BDLocManager$a d -> d
    java.lang.reflect.Method e -> e
    java.lang.reflect.Method f -> f
    java.lang.reflect.Method g -> g
    java.lang.Class h -> h
    android.net.wifi.WifiManager i -> i
    com.baidu.loctp.str.BDLocManager$WifiList j -> j
    java.lang.Object k -> k
    java.lang.reflect.Method l -> l
    boolean m -> m
    long n -> n
    java.lang.String o -> o
    int p -> p
    java.lang.String q -> q
    char[] r -> r
    java.lang.String getLocString() -> getLocString
    java.lang.String getLocString(int) -> getLocString
    java.lang.String a(int) -> a
    void a(android.telephony.CellLocation) -> a
    boolean startWifiScan() -> startWifiScan
    boolean a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    boolean a(com.baidu.loctp.str.BDLocManager) -> a
    java.lang.String b(com.baidu.loctp.str.BDLocManager) -> b
    int a(com.baidu.loctp.str.BDLocManager,int) -> a
    int c(com.baidu.loctp.str.BDLocManager) -> c
com.baidu.loctp.str.BDLocManager$1 -> com.baidu.loctp.str.BDLocManager$1:
com.baidu.loctp.str.BDLocManager$WifiList -> com.baidu.loctp.str.BDLocManager$WifiList:
    java.util.List _WifiList -> _WifiList
    long b -> b
    com.baidu.loctp.str.BDLocManager a -> a
    int size() -> size
    java.lang.String toString(int) -> toString
    void a() -> a
    boolean b() -> b
    boolean a(com.baidu.loctp.str.BDLocManager$WifiList) -> a
com.baidu.loctp.str.BDLocManager$a -> com.baidu.loctp.str.BDLocManager$a:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    char e -> e
    com.baidu.loctp.str.BDLocManager f -> f
    boolean a() -> a
    java.lang.String toString() -> toString
    boolean a(com.baidu.loctp.str.BDLocManager$a) -> a
com.loopj.android.http.AssertUtils -> com.loopj.android.http.AssertUtils:
    void asserts(boolean,java.lang.String) -> asserts
com.loopj.android.http.AsyncHttpClient -> com.loopj.android.http.AsyncHttpClient:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String HEADER_CONTENT_TYPE -> HEADER_CONTENT_TYPE
    java.lang.String HEADER_CONTENT_RANGE -> HEADER_CONTENT_RANGE
    java.lang.String HEADER_CONTENT_ENCODING -> HEADER_CONTENT_ENCODING
    java.lang.String HEADER_CONTENT_DISPOSITION -> HEADER_CONTENT_DISPOSITION
    java.lang.String HEADER_ACCEPT_ENCODING -> HEADER_ACCEPT_ENCODING
    java.lang.String ENCODING_GZIP -> ENCODING_GZIP
    int DEFAULT_MAX_CONNECTIONS -> DEFAULT_MAX_CONNECTIONS
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_MAX_RETRIES -> DEFAULT_MAX_RETRIES
    int DEFAULT_RETRY_SLEEP_TIME_MILLIS -> DEFAULT_RETRY_SLEEP_TIME_MILLIS
    int DEFAULT_SOCKET_BUFFER_SIZE -> DEFAULT_SOCKET_BUFFER_SIZE
    int maxConnections -> maxConnections
    int connectTimeout -> connectTimeout
    int responseTimeout -> responseTimeout
    org.apache.http.impl.client.DefaultHttpClient httpClient -> httpClient
    org.apache.http.protocol.HttpContext httpContext -> httpContext
    java.util.concurrent.ExecutorService threadPool -> threadPool
    java.util.Map requestMap -> requestMap
    java.util.Map clientHeaderMap -> clientHeaderMap
    boolean isUrlEncodingEnabled -> isUrlEncodingEnabled
    org.apache.http.conn.scheme.SchemeRegistry getDefaultSchemeRegistry(boolean,int,int) -> getDefaultSchemeRegistry
    void allowRetryExceptionClass(java.lang.Class) -> allowRetryExceptionClass
    void blockRetryExceptionClass(java.lang.Class) -> blockRetryExceptionClass
    org.apache.http.client.HttpClient getHttpClient() -> getHttpClient
    org.apache.http.protocol.HttpContext getHttpContext() -> getHttpContext
    void setCookieStore(org.apache.http.client.CookieStore) -> setCookieStore
    void setThreadPool(java.util.concurrent.ExecutorService) -> setThreadPool
    java.util.concurrent.ExecutorService getThreadPool() -> getThreadPool
    java.util.concurrent.ExecutorService getDefaultThreadPool() -> getDefaultThreadPool
    void setEnableRedirects(boolean,boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean,boolean) -> setEnableRedirects
    void setEnableRedirects(boolean) -> setEnableRedirects
    void setRedirectHandler(org.apache.http.client.RedirectHandler) -> setRedirectHandler
    void setUserAgent(java.lang.String) -> setUserAgent
    int getMaxConnections() -> getMaxConnections
    void setMaxConnections(int) -> setMaxConnections
    int getTimeout() -> getTimeout
    void setTimeout(int) -> setTimeout
    int getConnectTimeout() -> getConnectTimeout
    void setConnectTimeout(int) -> setConnectTimeout
    int getResponseTimeout() -> getResponseTimeout
    void setResponseTimeout(int) -> setResponseTimeout
    void setProxy(java.lang.String,int) -> setProxy
    void setProxy(java.lang.String,int,java.lang.String,java.lang.String) -> setProxy
    void setSSLSocketFactory(org.apache.http.conn.ssl.SSLSocketFactory) -> setSSLSocketFactory
    void setMaxRetriesAndTimeout(int,int) -> setMaxRetriesAndTimeout
    void removeAllHeaders() -> removeAllHeaders
    void addHeader(java.lang.String,java.lang.String) -> addHeader
    void removeHeader(java.lang.String) -> removeHeader
    void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,boolean) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope) -> setBasicAuth
    void setBasicAuth(java.lang.String,java.lang.String,org.apache.http.auth.AuthScope,boolean) -> setBasicAuth
    void setCredentials(org.apache.http.auth.AuthScope,org.apache.http.auth.Credentials) -> setCredentials
    void setAuthenticationPreemptive(boolean) -> setAuthenticationPreemptive
    void clearBasicAuth() -> clearBasicAuth
    void clearCredentialsProvider() -> clearCredentialsProvider
    void cancelRequests(android.content.Context,boolean) -> cancelRequests
    void cancelAllRequests(boolean) -> cancelAllRequests
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle head(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> head
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle get(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> get
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle post(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> post
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle put(android.content.Context,java.lang.String,org.apache.http.Header[],org.apache.http.HttpEntity,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> put
    com.loopj.android.http.RequestHandle delete(java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.RequestHandle delete(android.content.Context,java.lang.String,org.apache.http.Header[],com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> delete
    com.loopj.android.http.AsyncHttpRequest newAsyncHttpRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> newAsyncHttpRequest
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
    void setURLEncodingEnabled(boolean) -> setURLEncodingEnabled
    java.lang.String getUrlWithQueryString(boolean,java.lang.String,com.loopj.android.http.RequestParams) -> getUrlWithQueryString
    boolean isInputStreamGZIPCompressed(java.io.PushbackInputStream) -> isInputStreamGZIPCompressed
    void silentCloseInputStream(java.io.InputStream) -> silentCloseInputStream
    void silentCloseOutputStream(java.io.OutputStream) -> silentCloseOutputStream
    org.apache.http.HttpEntity paramsToEntity(com.loopj.android.http.RequestParams,com.loopj.android.http.ResponseHandlerInterface) -> paramsToEntity
    boolean isUrlEncodingEnabled() -> isUrlEncodingEnabled
    org.apache.http.client.methods.HttpEntityEnclosingRequestBase addEntityToRequestBase(org.apache.http.client.methods.HttpEntityEnclosingRequestBase,org.apache.http.HttpEntity) -> addEntityToRequestBase
    void endEntityViaReflection(org.apache.http.HttpEntity) -> endEntityViaReflection
    java.util.Map access$000(com.loopj.android.http.AsyncHttpClient) -> access$000
    java.util.Map access$100(com.loopj.android.http.AsyncHttpClient) -> access$100
com.loopj.android.http.AsyncHttpClient$1 -> com.loopj.android.http.AsyncHttpClient$1:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$2 -> com.loopj.android.http.AsyncHttpClient$2:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$3 -> com.loopj.android.http.AsyncHttpClient$3:
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.AsyncHttpClient$4 -> com.loopj.android.http.AsyncHttpClient$4:
    android.content.Context val$context -> val$context
    boolean val$mayInterruptIfRunning -> val$mayInterruptIfRunning
    com.loopj.android.http.AsyncHttpClient this$0 -> this$0
    void run() -> run
com.loopj.android.http.AsyncHttpClient$InflatingEntity -> com.loopj.android.http.AsyncHttpClient$InflatingEntity:
    java.io.InputStream wrappedStream -> wrappedStream
    java.io.PushbackInputStream pushbackStream -> pushbackStream
    java.util.zip.GZIPInputStream gzippedStream -> gzippedStream
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void consumeContent() -> consumeContent
com.loopj.android.http.AsyncHttpRequest -> com.loopj.android.http.AsyncHttpRequest:
    org.apache.http.impl.client.AbstractHttpClient client -> client
    org.apache.http.protocol.HttpContext context -> context
    org.apache.http.client.methods.HttpUriRequest request -> request
    com.loopj.android.http.ResponseHandlerInterface responseHandler -> responseHandler
    int executionCount -> executionCount
    boolean isCancelled -> isCancelled
    boolean cancelIsNotified -> cancelIsNotified
    boolean isFinished -> isFinished
    boolean isRequestPreProcessed -> isRequestPreProcessed
    void onPreProcessRequest(com.loopj.android.http.AsyncHttpRequest) -> onPreProcessRequest
    void onPostProcessRequest(com.loopj.android.http.AsyncHttpRequest) -> onPostProcessRequest
    void run() -> run
    void makeRequest() -> makeRequest
    void makeRequestWithRetries() -> makeRequestWithRetries
    boolean isCancelled() -> isCancelled
    void sendCancelNotification() -> sendCancelNotification
    boolean isDone() -> isDone
    boolean cancel(boolean) -> cancel
com.loopj.android.http.AsyncHttpResponseHandler -> com.loopj.android.http.AsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    int SUCCESS_MESSAGE -> SUCCESS_MESSAGE
    int FAILURE_MESSAGE -> FAILURE_MESSAGE
    int START_MESSAGE -> START_MESSAGE
    int FINISH_MESSAGE -> FINISH_MESSAGE
    int PROGRESS_MESSAGE -> PROGRESS_MESSAGE
    int RETRY_MESSAGE -> RETRY_MESSAGE
    int CANCEL_MESSAGE -> CANCEL_MESSAGE
    int BUFFER_SIZE -> BUFFER_SIZE
    java.lang.String DEFAULT_CHARSET -> DEFAULT_CHARSET
    java.lang.String UTF8_BOM -> UTF8_BOM
    java.lang.String responseCharset -> responseCharset
    android.os.Handler handler -> handler
    boolean useSynchronousMode -> useSynchronousMode
    java.net.URI requestURI -> requestURI
    org.apache.http.Header[] requestHeaders -> requestHeaders
    android.os.Looper looper -> looper
    java.net.URI getRequestURI() -> getRequestURI
    org.apache.http.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestURI(java.net.URI) -> setRequestURI
    void setRequestHeaders(org.apache.http.Header[]) -> setRequestHeaders
    boolean getUseSynchronousMode() -> getUseSynchronousMode
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    void setCharset(java.lang.String) -> setCharset
    java.lang.String getCharset() -> getCharset
    void onProgress(int,int) -> onProgress
    void onStart() -> onStart
    void onFinish() -> onFinish
    void onPreProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPreProcessResponse
    void onPostProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPostProcessResponse
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onRetry(int) -> onRetry
    void onCancel() -> onCancel
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendRetryMessage(int) -> sendRetryMessage
    void sendCancelMessage() -> sendCancelMessage
    void handleMessage(android.os.Message) -> handleMessage
    void sendMessage(android.os.Message) -> sendMessage
    void postRunnable(java.lang.Runnable) -> postRunnable
    android.os.Message obtainMessage(int,java.lang.Object) -> obtainMessage
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler -> com.loopj.android.http.AsyncHttpResponseHandler$ResponderHandler:
    com.loopj.android.http.AsyncHttpResponseHandler mResponder -> mResponder
    void handleMessage(android.os.Message) -> handleMessage
com.loopj.android.http.Base64 -> com.loopj.android.http.Base64:
    int DEFAULT -> DEFAULT
    int NO_PADDING -> NO_PADDING
    int NO_WRAP -> NO_WRAP
    int CRLF -> CRLF
    int URL_SAFE -> URL_SAFE
    int NO_CLOSE -> NO_CLOSE
    byte[] decode(java.lang.String,int) -> decode
    byte[] decode(byte[],int) -> decode
    byte[] decode(byte[],int,int,int) -> decode
    java.lang.String encodeToString(byte[],int) -> encodeToString
    java.lang.String encodeToString(byte[],int,int,int) -> encodeToString
    byte[] encode(byte[],int) -> encode
    byte[] encode(byte[],int,int,int) -> encode
com.loopj.android.http.Base64$Coder -> com.loopj.android.http.Base64$Coder:
    byte[] output -> output
    int op -> op
    boolean process(byte[],int,int,boolean) -> process
    int maxOutputSize(int) -> maxOutputSize
com.loopj.android.http.Base64$Decoder -> com.loopj.android.http.Base64$Decoder:
    int[] DECODE -> DECODE
    int[] DECODE_WEBSAFE -> DECODE_WEBSAFE
    int SKIP -> SKIP
    int EQUALS -> EQUALS
    int state -> state
    int value -> value
    int[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64$Encoder -> com.loopj.android.http.Base64$Encoder:
    int LINE_GROUPS -> LINE_GROUPS
    byte[] ENCODE -> ENCODE
    byte[] ENCODE_WEBSAFE -> ENCODE_WEBSAFE
    byte[] tail -> tail
    int tailLen -> tailLen
    int count -> count
    boolean do_padding -> do_padding
    boolean do_newline -> do_newline
    boolean do_cr -> do_cr
    byte[] alphabet -> alphabet
    int maxOutputSize(int) -> maxOutputSize
    boolean process(byte[],int,int,boolean) -> process
com.loopj.android.http.Base64DataException -> com.loopj.android.http.Base64DataException:
com.loopj.android.http.Base64OutputStream -> com.loopj.android.http.Base64OutputStream:
    com.loopj.android.http.Base64$Coder coder -> coder
    int flags -> flags
    byte[] buffer -> buffer
    int bpos -> bpos
    byte[] EMPTY -> EMPTY
    void write(int) -> write
    void flushBuffer() -> flushBuffer
    void write(byte[],int,int) -> write
    void close() -> close
    void internalWrite(byte[],int,int,boolean) -> internalWrite
    byte[] embiggen(byte[],int) -> embiggen
com.loopj.android.http.BaseJsonHttpResponseHandler -> com.loopj.android.http.BaseJsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,org.apache.http.Header[],java.lang.String,java.lang.Object) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.lang.String,java.lang.Object) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(java.lang.String,boolean) -> parseResponse
com.loopj.android.http.BaseJsonHttpResponseHandler$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1:
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$1$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$1$2:
    java.lang.Throwable val$t -> val$t
    com.loopj.android.http.BaseJsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2:
    java.lang.String val$responseString -> val$responseString
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    com.loopj.android.http.BaseJsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$1 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BaseJsonHttpResponseHandler$2$2 -> com.loopj.android.http.BaseJsonHttpResponseHandler$2$2:
    com.loopj.android.http.BaseJsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.BinaryHttpResponseHandler -> com.loopj.android.http.BinaryHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String[] mAllowedContentTypes -> mAllowedContentTypes
    java.lang.String[] getAllowedContentTypes() -> getAllowedContentTypes
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
com.loopj.android.http.BuildConfig -> com.loopj.android.http.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String PACKAGE_NAME -> PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
com.loopj.android.http.DataAsyncHttpResponseHandler -> com.loopj.android.http.DataAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    int PROGRESS_DATA_MESSAGE -> PROGRESS_DATA_MESSAGE
    void onProgressData(byte[]) -> onProgressData
    void sendProgressDataMessage(byte[]) -> sendProgressDataMessage
    void handleMessage(android.os.Message) -> handleMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    byte[] copyOfRange(byte[],int,int) -> copyOfRange
com.loopj.android.http.FileAsyncHttpResponseHandler -> com.loopj.android.http.FileAsyncHttpResponseHandler:
    java.io.File mFile -> mFile
    boolean append -> append
    java.lang.String LOG_TAG -> LOG_TAG
    boolean $assertionsDisabled -> $assertionsDisabled
    boolean deleteTargetFile() -> deleteTargetFile
    java.io.File getTemporaryFile(android.content.Context) -> getTemporaryFile
    java.io.File getTargetFile() -> getTargetFile
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,java.io.File) -> onFailure
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],java.io.File) -> onSuccess
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
com.loopj.android.http.JsonHttpResponseHandler -> com.loopj.android.http.JsonHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onSuccess(int,org.apache.http.Header[],org.json.JSONObject) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],org.json.JSONArray) -> onSuccess
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONObject) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.Throwable,org.json.JSONArray) -> onFailure
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.Object parseResponse(byte[]) -> parseResponse
com.loopj.android.http.JsonHttpResponseHandler$1 -> com.loopj.android.http.JsonHttpResponseHandler$1:
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$1 -> com.loopj.android.http.JsonHttpResponseHandler$1$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$1$2 -> com.loopj.android.http.JsonHttpResponseHandler$1$2:
    org.json.JSONException val$ex -> val$ex
    com.loopj.android.http.JsonHttpResponseHandler$1 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2 -> com.loopj.android.http.JsonHttpResponseHandler$2:
    byte[] val$responseBytes -> val$responseBytes
    int val$statusCode -> val$statusCode
    org.apache.http.Header[] val$headers -> val$headers
    java.lang.Throwable val$throwable -> val$throwable
    com.loopj.android.http.JsonHttpResponseHandler this$0 -> this$0
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$1 -> com.loopj.android.http.JsonHttpResponseHandler$2$1:
    java.lang.Object val$jsonResponse -> val$jsonResponse
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonHttpResponseHandler$2$2 -> com.loopj.android.http.JsonHttpResponseHandler$2$2:
    org.json.JSONException val$ex -> val$ex
    com.loopj.android.http.JsonHttpResponseHandler$2 this$1 -> this$1
    void run() -> run
com.loopj.android.http.JsonStreamerEntity -> com.loopj.android.http.JsonStreamerEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.UnsupportedOperationException ERR_UNSUPPORTED -> ERR_UNSUPPORTED
    int BUFFER_SIZE -> BUFFER_SIZE
    byte[] buffer -> buffer
    java.lang.StringBuilder BUILDER -> BUILDER
    byte[] JSON_TRUE -> JSON_TRUE
    byte[] JSON_FALSE -> JSON_FALSE
    byte[] JSON_NULL -> JSON_NULL
    byte[] STREAM_NAME -> STREAM_NAME
    byte[] STREAM_TYPE -> STREAM_TYPE
    byte[] STREAM_CONTENTS -> STREAM_CONTENTS
    byte[] STREAM_ELAPSED -> STREAM_ELAPSED
    org.apache.http.Header HEADER_JSON_CONTENT -> HEADER_JSON_CONTENT
    org.apache.http.Header HEADER_GZIP_ENCODING -> HEADER_GZIP_ENCODING
    java.util.Map jsonParams -> jsonParams
    org.apache.http.Header contentEncoding -> contentEncoding
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    void addPart(java.lang.String,java.lang.Object) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    org.apache.http.Header getContentType() -> getContentType
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    void writeToFromStream(java.io.OutputStream,com.loopj.android.http.RequestParams$StreamWrapper) -> writeToFromStream
    void writeToFromFile(java.io.OutputStream,com.loopj.android.http.RequestParams$FileWrapper) -> writeToFromFile
    void writeMetaData(java.io.OutputStream,java.lang.String,java.lang.String) -> writeMetaData
    void endMetaData(java.io.OutputStream) -> endMetaData
    byte[] escape(java.lang.String) -> escape
com.loopj.android.http.JsonValueInterface -> com.loopj.android.http.JsonValueInterface:
    byte[] getEscapedJsonValue() -> getEscapedJsonValue
com.loopj.android.http.MyRedirectHandler -> com.loopj.android.http.MyRedirectHandler:
    java.lang.String REDIRECT_LOCATIONS -> REDIRECT_LOCATIONS
    boolean enableRedirects -> enableRedirects
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.loopj.android.http.MySSLSocketFactory -> com.loopj.android.http.MySSLSocketFactory:
    javax.net.ssl.SSLContext sslContext -> sslContext
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
    void fixHttpsURLConnection() -> fixHttpsURLConnection
    java.security.KeyStore getKeystoreOfCA(java.io.InputStream) -> getKeystoreOfCA
    java.security.KeyStore getKeystore() -> getKeystore
    org.apache.http.conn.ssl.SSLSocketFactory getFixedSocketFactory() -> getFixedSocketFactory
    org.apache.http.impl.client.DefaultHttpClient getNewHttpClient(java.security.KeyStore) -> getNewHttpClient
com.loopj.android.http.MySSLSocketFactory$1 -> com.loopj.android.http.MySSLSocketFactory$1:
    com.loopj.android.http.MySSLSocketFactory this$0 -> this$0
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.loopj.android.http.PersistentCookieStore -> com.loopj.android.http.PersistentCookieStore:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String COOKIE_PREFS -> COOKIE_PREFS
    java.lang.String COOKIE_NAME_STORE -> COOKIE_NAME_STORE
    java.lang.String COOKIE_NAME_PREFIX -> COOKIE_NAME_PREFIX
    boolean omitNonPersistentCookies -> omitNonPersistentCookies
    java.util.concurrent.ConcurrentHashMap cookies -> cookies
    android.content.SharedPreferences cookiePrefs -> cookiePrefs
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
    void setOmitNonPersistentCookies(boolean) -> setOmitNonPersistentCookies
    void deleteCookie(org.apache.http.cookie.Cookie) -> deleteCookie
    java.lang.String encodeCookie(com.loopj.android.http.SerializableCookie) -> encodeCookie
    org.apache.http.cookie.Cookie decodeCookie(java.lang.String) -> decodeCookie
    java.lang.String byteArrayToHexString(byte[]) -> byteArrayToHexString
    byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.loopj.android.http.PreemtiveAuthorizationHttpRequestInterceptor -> com.loopj.android.http.PreemtiveAuthorizationHttpRequestInterceptor:
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.loopj.android.http.RangeFileAsyncHttpResponseHandler -> com.loopj.android.http.RangeFileAsyncHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    long current -> current
    boolean append -> append
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    void updateRequestHeaders(org.apache.http.client.methods.HttpUriRequest) -> updateRequestHeaders
com.loopj.android.http.RequestHandle -> com.loopj.android.http.RequestHandle:
    java.lang.ref.WeakReference request -> request
    boolean cancel(boolean) -> cancel
    boolean isFinished() -> isFinished
    boolean isCancelled() -> isCancelled
    boolean shouldBeGarbageCollected() -> shouldBeGarbageCollected
com.loopj.android.http.RequestParams -> com.loopj.android.http.RequestParams:
    java.lang.String APPLICATION_OCTET_STREAM -> APPLICATION_OCTET_STREAM
    java.lang.String APPLICATION_JSON -> APPLICATION_JSON
    java.lang.String LOG_TAG -> LOG_TAG
    boolean isRepeatable -> isRepeatable
    boolean useJsonStreamer -> useJsonStreamer
    boolean autoCloseInputStreams -> autoCloseInputStreams
    java.util.concurrent.ConcurrentHashMap urlParams -> urlParams
    java.util.concurrent.ConcurrentHashMap streamParams -> streamParams
    java.util.concurrent.ConcurrentHashMap fileParams -> fileParams
    java.util.concurrent.ConcurrentHashMap urlParamsWithObjects -> urlParamsWithObjects
    java.lang.String contentEncoding -> contentEncoding
    void setContentEncoding(java.lang.String) -> setContentEncoding
    void put(java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.lang.String,java.io.File) -> put
    void put(java.lang.String,java.io.File,java.lang.String) -> put
    void put(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String) -> put
    void put(java.lang.String,java.io.InputStream,java.lang.String,java.lang.String,boolean) -> put
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void add(java.lang.String,java.lang.String) -> add
    void remove(java.lang.String) -> remove
    boolean has(java.lang.String) -> has
    java.lang.String toString() -> toString
    void setHttpEntityIsRepeatable(boolean) -> setHttpEntityIsRepeatable
    void setUseJsonStreamer(boolean) -> setUseJsonStreamer
    void setAutoCloseInputStreams(boolean) -> setAutoCloseInputStreams
    org.apache.http.HttpEntity getEntity(com.loopj.android.http.ResponseHandlerInterface) -> getEntity
    org.apache.http.HttpEntity createJsonStreamerEntity(com.loopj.android.http.ResponseHandlerInterface) -> createJsonStreamerEntity
    org.apache.http.HttpEntity createFormEntity() -> createFormEntity
    org.apache.http.HttpEntity createMultipartEntity(com.loopj.android.http.ResponseHandlerInterface) -> createMultipartEntity
    java.util.List getParamsList() -> getParamsList
    java.util.List getParamsList(java.lang.String,java.lang.Object) -> getParamsList
    java.lang.String getParamString() -> getParamString
com.loopj.android.http.RequestParams$1 -> com.loopj.android.http.RequestParams$1:
    java.lang.String val$key -> val$key
    java.lang.String val$value -> val$value
com.loopj.android.http.RequestParams$FileWrapper -> com.loopj.android.http.RequestParams$FileWrapper:
    java.io.File file -> file
    java.lang.String contentType -> contentType
    java.lang.String customFileName -> customFileName
com.loopj.android.http.RequestParams$StreamWrapper -> com.loopj.android.http.RequestParams$StreamWrapper:
    java.io.InputStream inputStream -> inputStream
    java.lang.String name -> name
    java.lang.String contentType -> contentType
    boolean autoClose -> autoClose
    com.loopj.android.http.RequestParams$StreamWrapper newInstance(java.io.InputStream,java.lang.String,java.lang.String,boolean) -> newInstance
com.loopj.android.http.ResponseHandlerInterface -> com.loopj.android.http.ResponseHandlerInterface:
    void sendResponseMessage(org.apache.http.HttpResponse) -> sendResponseMessage
    void sendStartMessage() -> sendStartMessage
    void sendFinishMessage() -> sendFinishMessage
    void sendProgressMessage(int,int) -> sendProgressMessage
    void sendCancelMessage() -> sendCancelMessage
    void sendSuccessMessage(int,org.apache.http.Header[],byte[]) -> sendSuccessMessage
    void sendFailureMessage(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> sendFailureMessage
    void sendRetryMessage(int) -> sendRetryMessage
    java.net.URI getRequestURI() -> getRequestURI
    org.apache.http.Header[] getRequestHeaders() -> getRequestHeaders
    void setRequestURI(java.net.URI) -> setRequestURI
    void setRequestHeaders(org.apache.http.Header[]) -> setRequestHeaders
    void setUseSynchronousMode(boolean) -> setUseSynchronousMode
    boolean getUseSynchronousMode() -> getUseSynchronousMode
    void onPreProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPreProcessResponse
    void onPostProcessResponse(com.loopj.android.http.ResponseHandlerInterface,org.apache.http.HttpResponse) -> onPostProcessResponse
com.loopj.android.http.RetryHandler -> com.loopj.android.http.RetryHandler:
    java.util.HashSet exceptionWhitelist -> exceptionWhitelist
    java.util.HashSet exceptionBlacklist -> exceptionBlacklist
    int maxRetries -> maxRetries
    int retrySleepTimeMS -> retrySleepTimeMS
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
    void addClassToWhitelist(java.lang.Class) -> addClassToWhitelist
    void addClassToBlacklist(java.lang.Class) -> addClassToBlacklist
    boolean isInList(java.util.HashSet,java.lang.Throwable) -> isInList
com.loopj.android.http.SaxAsyncHttpResponseHandler -> com.loopj.android.http.SaxAsyncHttpResponseHandler:
    org.xml.sax.helpers.DefaultHandler handler -> handler
    java.lang.String LOG_TAG -> LOG_TAG
    byte[] getResponseData(org.apache.http.HttpEntity) -> getResponseData
    void onSuccess(int,org.apache.http.Header[],org.xml.sax.helpers.DefaultHandler) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],org.xml.sax.helpers.DefaultHandler) -> onFailure
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
com.loopj.android.http.SerializableCookie -> com.loopj.android.http.SerializableCookie:
    long serialVersionUID -> serialVersionUID
    org.apache.http.cookie.Cookie cookie -> cookie
    org.apache.http.impl.cookie.BasicClientCookie clientCookie -> clientCookie
    org.apache.http.cookie.Cookie getCookie() -> getCookie
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.loopj.android.http.SimpleMultipartEntity -> com.loopj.android.http.SimpleMultipartEntity:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String STR_CR_LF -> STR_CR_LF
    byte[] CR_LF -> CR_LF
    byte[] TRANSFER_ENCODING_BINARY -> TRANSFER_ENCODING_BINARY
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    java.lang.String boundary -> boundary
    byte[] boundaryLine -> boundaryLine
    byte[] boundaryEnd -> boundaryEnd
    boolean isRepeatable -> isRepeatable
    java.util.List fileParts -> fileParts
    java.io.ByteArrayOutputStream out -> out
    com.loopj.android.http.ResponseHandlerInterface progressHandler -> progressHandler
    int bytesWritten -> bytesWritten
    int totalSize -> totalSize
    void addPart(java.lang.String,java.lang.String,java.lang.String) -> addPart
    void addPartWithCharset(java.lang.String,java.lang.String,java.lang.String) -> addPartWithCharset
    void addPart(java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String) -> addPart
    void addPart(java.lang.String,java.io.File,java.lang.String,java.lang.String) -> addPart
    void addPart(java.lang.String,java.lang.String,java.io.InputStream,java.lang.String) -> addPart
    java.lang.String normalizeContentType(java.lang.String) -> normalizeContentType
    byte[] createContentType(java.lang.String) -> createContentType
    byte[] createContentDisposition(java.lang.String) -> createContentDisposition
    byte[] createContentDisposition(java.lang.String,java.lang.String) -> createContentDisposition
    void updateProgress(int) -> updateProgress
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    boolean isChunked() -> isChunked
    void setIsRepeatable(boolean) -> setIsRepeatable
    boolean isRepeatable() -> isRepeatable
    boolean isStreaming() -> isStreaming
    void writeTo(java.io.OutputStream) -> writeTo
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    byte[] access$000(com.loopj.android.http.SimpleMultipartEntity) -> access$000
    byte[] access$100(com.loopj.android.http.SimpleMultipartEntity,java.lang.String,java.lang.String) -> access$100
    byte[] access$200(com.loopj.android.http.SimpleMultipartEntity,java.lang.String) -> access$200
    byte[] access$300() -> access$300
    byte[] access$400() -> access$400
    void access$500(com.loopj.android.http.SimpleMultipartEntity,int) -> access$500
com.loopj.android.http.SimpleMultipartEntity$FilePart -> com.loopj.android.http.SimpleMultipartEntity$FilePart:
    java.io.File file -> file
    byte[] header -> header
    com.loopj.android.http.SimpleMultipartEntity this$0 -> this$0
    byte[] createHeader(java.lang.String,java.lang.String,java.lang.String) -> createHeader
    long getTotalLength() -> getTotalLength
    void writeTo(java.io.OutputStream) -> writeTo
com.loopj.android.http.SyncHttpClient -> com.loopj.android.http.SyncHttpClient:
    com.loopj.android.http.RequestHandle sendRequest(org.apache.http.impl.client.DefaultHttpClient,org.apache.http.protocol.HttpContext,org.apache.http.client.methods.HttpUriRequest,java.lang.String,com.loopj.android.http.ResponseHandlerInterface,android.content.Context) -> sendRequest
com.loopj.android.http.TextHttpResponseHandler -> com.loopj.android.http.TextHttpResponseHandler:
    java.lang.String LOG_TAG -> LOG_TAG
    void onFailure(int,org.apache.http.Header[],java.lang.String,java.lang.Throwable) -> onFailure
    void onSuccess(int,org.apache.http.Header[],java.lang.String) -> onSuccess
    void onSuccess(int,org.apache.http.Header[],byte[]) -> onSuccess
    void onFailure(int,org.apache.http.Header[],byte[],java.lang.Throwable) -> onFailure
    java.lang.String getResponseString(byte[],java.lang.String) -> getResponseString
com.mob.commons.logcollector.LogsCollector -> com.mob.a.a.a:
    com.mob.commons.logcollector.c a -> a
    int getSDKVersion() -> a
    java.lang.String getAppkey() -> c
    java.lang.String getSDKTag() -> b
    void log(java.lang.String,int,int,java.lang.String,java.lang.String) -> a
    int a(int,java.lang.String) -> a
com.mob.commons.logcollector.a -> com.mob.a.a.b:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void close() -> close
com.mob.commons.logcollector.b -> com.mob.a.a.c:
    android.content.Context a -> a
    com.mob.commons.logcollector.a b -> b
    com.mob.commons.logcollector.b c -> c
    com.mob.commons.logcollector.b a(android.content.Context) -> a
    long a(java.lang.String,android.content.ContentValues) -> a
    int a(java.lang.String,java.lang.String,java.lang.String[]) -> a
    int a(java.lang.String) -> a
    android.database.Cursor a(java.lang.String,java.lang.String[]) -> a
com.mob.commons.logcollector.c -> com.mob.a.a.d:
    com.mob.commons.logcollector.c a -> b
    java.lang.String b -> c
    java.util.HashMap c -> d
    android.content.Context d -> e
    com.mob.tools.utils.DeviceHelper e -> f
    com.mob.tools.network.NetworkHelper f -> g
    com.mob.commons.logcollector.d g -> h
    java.io.File h -> i
    com.mob.tools.utils.FileLocker i -> j
    android.content.Context a() -> b
    com.mob.commons.logcollector.c a(android.content.Context) -> a
    void a(int,java.lang.String,java.lang.String) -> a
    void a(int,int,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.os.Message) -> d
    void b(int,int,java.lang.String,java.lang.String,java.lang.String) -> b
    void onMessage(android.os.Message) -> c
    void b(android.os.Message) -> e
    void c(android.os.Message) -> f
    java.lang.String b() -> c
    void b(int,java.lang.String,java.lang.String) -> b
    java.lang.String c() -> d
    void a(int,java.lang.String,java.lang.String,java.lang.String[]) -> a
    java.util.HashMap c(int,java.lang.String,java.lang.String) -> c
    java.lang.String a(java.lang.String) -> a
    boolean a(java.lang.String,boolean) -> a
com.mob.commons.logcollector.d -> com.mob.a.a.e:
    com.mob.commons.logcollector.d a -> a
    com.mob.tools.utils.SharePrefrenceHelper b -> b
    com.mob.commons.logcollector.d a(android.content.Context) -> a
    void a(long) -> a
    long a() -> a
    void a(boolean) -> a
    boolean b() -> b
    void b(boolean) -> b
    boolean c() -> c
    void c(boolean) -> c
    boolean d() -> d
    void d(boolean) -> d
    boolean e() -> e
    java.lang.String f() -> f
    void a(java.lang.String) -> a
com.mob.commons.logcollector.e -> com.mob.a.a.f:
    java.util.ArrayList a -> a
    java.util.ArrayList b -> b
com.mob.commons.logcollector.f -> com.mob.a.a.g:
    long a(android.content.Context,long,java.lang.String,int,java.lang.String) -> a
    long a(android.content.Context,java.util.ArrayList) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String,java.lang.String[]) -> a
    java.util.ArrayList a(android.content.Context,java.lang.String[]) -> a
com.mob.tools.FakeActivity -> com.mob.tools.a:
    java.lang.Class shellClass -> a
    android.app.Activity activity -> i
    com.mob.tools.FakeActivity resultReceiver -> b
    java.util.HashMap result -> c
    android.view.View contentView -> d
    void setActivity(android.app.Activity) -> a
    void setContentView(android.view.View) -> b
    android.view.View findViewById(int) -> a
    android.view.View findViewByResName(java.lang.String) -> a
    void onCreate() -> a
    void onNewIntent(android.content.Intent) -> a
    void onStart() -> d
    void onPause() -> e
    void onResume() -> f
    void onStop() -> g
    void onRestart() -> h
    boolean onFinish() -> b
    void onDestroy() -> i
    void finish() -> j
    boolean onKeyEvent(int,android.view.KeyEvent) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    void onConfigurationChanged(android.content.res.Configuration) -> a
    android.content.Context getContext() -> k
    void show(android.content.Context,android.content.Intent) -> a
    void showForResult(android.content.Context,android.content.Intent,com.mob.tools.FakeActivity) -> a
    void sendResult() -> l
    void onResult(java.util.HashMap) -> a
com.mob.tools.FakeActivity$1 -> com.mob.tools.b:
    com.mob.tools.FakeActivity this$0 -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.MobLog -> com.mob.tools.c:
    java.lang.String getSDKTag() -> a
    com.mob.tools.log.NLog getInstance() -> b
com.mob.tools.MobUIShell -> com.mob.tools.MobUIShell:
    java.util.HashMap executors -> b
    com.mob.tools.FakeActivity executor -> c
    int forceTheme -> a
    java.lang.String registerExecutor(java.lang.Object) -> a
    java.lang.String registerExecutor(java.lang.String,java.lang.Object) -> a
    void setTheme(int) -> setTheme
    void onCreate(android.os.Bundle) -> onCreate
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onRestart() -> onRestart
    void onDestroy() -> onDestroy
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void finish() -> finish
com.mob.tools.SSDKHandlerThread -> com.mob.tools.d:
    android.os.Handler handler -> a
    java.lang.String name -> b
    void startThread() -> a
    void startThread(int,int,java.lang.Object) -> a
    void stopThread() -> g
    void stopThread(int,int,java.lang.Object) -> b
    boolean handleMessage(android.os.Message) -> handleMessage
    void onStart(android.os.Message) -> a
    void onStop(android.os.Message) -> b
    void onMessage(android.os.Message) -> c
com.mob.tools.gui.CachePool -> com.mob.tools.a.a:
    int capacity -> a
    int size -> b
    com.mob.tools.gui.CachePool$Node head -> c
    com.mob.tools.gui.CachePool$Node tail -> d
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
com.mob.tools.gui.CachePool$Node -> com.mob.tools.a.b:
    java.lang.Object key -> a
    java.lang.Object value -> b
    com.mob.tools.gui.CachePool$Node previous -> c
    com.mob.tools.gui.CachePool$Node next -> d
    long cacheTime -> e
    void access$1(com.mob.tools.gui.CachePool$Node,long) -> a
com.mob.tools.gui.ViewPagerAdapter -> com.mob.tools.a.c:
    int getCount() -> a
    void onScreenChange(int,int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> a
com.mob.tools.gui.ViewPagerClassic -> com.mob.tools.a.d:
    int currentScreen -> a
    android.widget.Scroller scroller -> b
    android.view.VelocityTracker mVelocityTracker -> c
    float lastMotionX -> d
    float lastMotionY -> e
    int touchState -> f
    int touchSlop -> g
    int mMaximumVelocity -> h
    com.mob.tools.gui.ViewPagerAdapter adapter -> i
    void init(android.content.Context) -> a
    int getCurrentScreen() -> getCurrentScreen
    void setCurrentScreen(int) -> setCurrentScreen
    void computeScroll() -> computeScroll
    void setAdapter(com.mob.tools.gui.ViewPagerAdapter) -> setAdapter
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    boolean dispatchUnhandledMove(android.view.View,int) -> dispatchUnhandledMove
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    void handleInterceptMove(android.view.MotionEvent) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void handleScrollMove(android.view.MotionEvent) -> b
    void scrollToScreen(int) -> a
    void scrollToScreen(int,boolean) -> a
com.mob.tools.gui.ViewPagerClassic$1 -> com.mob.tools.a.e:
    float[] values -> a
    com.mob.tools.gui.ViewPagerClassic this$0 -> b
    float getInterpolation(float) -> getInterpolation
com.mob.tools.log.LogCollector -> com.mob.tools.log.a:
    void log(java.lang.String,int,int,java.lang.String,java.lang.String) -> a
com.mob.tools.log.LogPrinter -> com.mob.tools.log.b:
    java.util.HashMap collectors -> a
    java.lang.String packageName -> b
    java.lang.String scope -> c
    void setContext(android.content.Context) -> a
    void setCollector(java.lang.String,com.mob.tools.log.LogCollector) -> a
    int println(java.lang.String,int,int,java.lang.String) -> a
    void nativeCrashLog(java.lang.String,java.lang.String) -> a
    java.lang.String processMessage(java.lang.Thread,java.lang.String) -> a
    java.lang.String getScope(java.lang.Thread) -> a
com.mob.tools.log.MobUncaughtExceptionHandler -> com.mob.tools.log.c:
    boolean disable -> a
    boolean isDebug -> b
    java.lang.Thread$UncaughtExceptionHandler oriHandler -> c
    void register() -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.mob.tools.log.NLog -> com.mob.tools.log.d:
    com.mob.tools.log.LogPrinter printer -> a
    java.util.HashMap loggers -> b
    void setContext(android.content.Context) -> a
    void setCollector(java.lang.String,com.mob.tools.log.LogCollector) -> a
    com.mob.tools.log.NLog getInstanceForSDK(java.lang.String,boolean) -> a
    java.lang.String getSDKTag() -> a
    int d(java.lang.Throwable) -> a
    int d(java.lang.Object,java.lang.Object[]) -> a
    int i(java.lang.Object,java.lang.Object[]) -> b
    int w(java.lang.Throwable) -> b
    int w(java.lang.Object,java.lang.Object[]) -> c
    int w(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> a
    int crash(java.lang.Throwable) -> c
    void nativeCrashLog(java.lang.String) -> a
com.mob.tools.log.NLog$1 -> com.mob.tools.log.e:
    java.lang.String val$sdkTag -> a
    java.lang.String getSDKTag() -> a
com.mob.tools.log.NativeErrorHandler -> com.mob.tools.log.NativeErrorHandler:
    boolean enable -> a
    boolean prepare(android.content.Context) -> a
    java.lang.String getCachePath(android.content.Context) -> b
    void nativePrepare(java.lang.String) -> nativePrepare
    void uploadCreashLog(java.lang.String) -> a
    java.util.ArrayList parseIndex(java.lang.String) -> b
    java.lang.String parseLog(java.lang.String,com.mob.tools.log.NativeErrorHandler$NativeCrashInfo) -> a
com.mob.tools.log.NativeErrorHandler$NativeCrashInfo -> com.mob.tools.log.f:
    long time -> a
    int signal -> b
com.mob.tools.network.ByteCounterInputStream -> com.mob.tools.b.a:
    java.io.InputStream is -> a
    long readBytes -> b
    com.mob.tools.network.OnReadListener listener -> c
    int read() -> read
    int read(byte[],int,int) -> read
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    void reset() -> reset
    long skip(long) -> skip
    int available() -> available
    void close() -> close
    void setOnInputStreamReadListener(com.mob.tools.network.OnReadListener) -> a
com.mob.tools.network.FilePart -> com.mob.tools.b.b:
    java.io.File file -> a
    void setFile(java.lang.String) -> a
    java.io.InputStream getInputStream() -> a
    java.lang.String toString() -> toString
    long length() -> b
com.mob.tools.network.HTTPPart -> com.mob.tools.b.c:
    long offset -> a
    com.mob.tools.network.OnReadListener listener -> b
    java.io.InputStream getInputStream() -> a
    long length() -> b
    java.io.InputStream toInputStream() -> c
com.mob.tools.network.HttpConnection -> com.mob.tools.b.d:
    int getResponseCode() -> a
    java.io.InputStream getInputStream() -> b
    java.io.InputStream getErrorStream() -> c
com.mob.tools.network.HttpConnectionImpl23 -> com.mob.tools.b.e:
    java.net.HttpURLConnection conn -> a
    int getResponseCode() -> a
    java.io.InputStream getInputStream() -> b
    java.io.InputStream getErrorStream() -> c
com.mob.tools.network.HttpResponseCallback -> com.mob.tools.b.f:
    void onResponse(com.mob.tools.network.HttpConnection) -> a
com.mob.tools.network.KVPair -> com.mob.tools.b.g:
    java.lang.String name -> a
    java.lang.Object value -> b
    java.lang.String toString() -> toString
com.mob.tools.network.MultiPart -> com.mob.tools.b.h:
    java.util.ArrayList parts -> a
    com.mob.tools.network.MultiPart append(com.mob.tools.network.HTTPPart) -> a
    java.io.InputStream getInputStream() -> a
    java.lang.String toString() -> toString
    long length() -> b
com.mob.tools.network.MultiPartInputStream -> com.mob.tools.b.i:
    java.util.ArrayList isList -> a
    int curIs -> b
    void addInputStream(java.io.InputStream) -> a
    boolean isEmpty() -> a
    int available() -> available
    void close() -> close
    long skip(long) -> skip
    int read() -> read
    int read(byte[],int,int) -> read
com.mob.tools.network.NetworkHelper -> com.mob.tools.b.j:
    int connectionTimeout -> a
    int readTimout -> b
    java.lang.String httpGet(java.lang.String,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> a
    java.lang.String httpPost(java.lang.String,java.util.ArrayList,com.mob.tools.network.KVPair,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> a
    java.lang.String httpPostFiles(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> a
    void httpPost(java.lang.String,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,com.mob.tools.network.HttpResponseCallback,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> a
    com.mob.tools.network.HTTPPart getFilePostHTTPPart(java.net.HttpURLConnection,java.lang.String,java.util.ArrayList,java.util.ArrayList) -> a
    com.mob.tools.network.HTTPPart getTextPostHTTPPart(java.net.HttpURLConnection,java.lang.String,java.util.ArrayList) -> a
    java.lang.String kvPairsToUrl(java.util.ArrayList) -> a
    java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut) -> a
com.mob.tools.network.NetworkHelper$1 -> com.mob.tools.b.k:
    com.mob.tools.network.NetworkHelper this$0 -> a
    java.util.HashMap val$tmpMap -> b
    void onResponse(com.mob.tools.network.HttpConnection) -> a
com.mob.tools.network.NetworkHelper$2 -> com.mob.tools.b.l:
    com.mob.tools.network.NetworkHelper this$0 -> a
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
com.mob.tools.network.NetworkHelper$3 -> com.mob.tools.b.m:
    com.mob.tools.network.NetworkHelper this$0 -> a
    boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
com.mob.tools.network.NetworkHelper$NetworkTimeOut -> com.mob.tools.b.n:
    int readTimout -> a
    int connectionTimeout -> b
com.mob.tools.network.OnReadListener -> com.mob.tools.b.o:
    void onRead(long) -> a
com.mob.tools.network.StringPart -> com.mob.tools.b.p:
    java.lang.StringBuilder sb -> a
    com.mob.tools.network.StringPart append(java.lang.String) -> a
    java.io.InputStream getInputStream() -> a
    java.lang.String toString() -> toString
    long length() -> b
com.mob.tools.utils.BitmapHelper -> com.mob.tools.c.a:
    android.graphics.Bitmap$CompressFormat getBmpFormat(java.lang.String) -> a
    java.lang.String getMime(java.lang.String) -> b
    java.lang.String getMime(byte[]) -> a
    boolean bytesStartWith(byte[],byte[]) -> a
com.mob.tools.utils.Data -> com.mob.tools.c.b:
    byte[] SHA1(java.lang.String) -> a
    byte[] SHA1(byte[]) -> a
    byte[] AES128Encode(java.lang.String,java.lang.String) -> a
    byte[] AES128Decode(byte[],byte[]) -> a
    java.lang.String byteToHex(byte[]) -> b
    java.lang.String byteToHex(byte[],int,int) -> a
    java.lang.String MD5(java.lang.String) -> b
    java.lang.String MD5(byte[]) -> c
    byte[] rawMD5(java.lang.String) -> c
    byte[] rawMD5(byte[]) -> d
    byte[] rawMD5(java.io.InputStream) -> a
    java.lang.String Base64AES(java.lang.String,java.lang.String) -> b
    java.lang.String urlEncode(java.lang.String,java.lang.String) -> c
com.mob.tools.utils.DeviceHelper -> com.mob.tools.c.c:
    android.content.Context context -> a
    com.mob.tools.utils.DeviceHelper deviceHelper -> b
    com.mob.tools.utils.DeviceHelper getInstance(android.content.Context) -> a
    java.lang.String getSSID() -> a
    java.lang.String getBssid() -> b
    java.lang.String getMacAddress() -> c
    java.lang.String getCurrentNetworkHardwareAddress() -> E
    java.lang.String[] listNetworkHardwareAddress() -> F
    java.lang.String getHardwareAddressFromShell(java.lang.String) -> b
    java.lang.String getModel() -> d
    java.lang.String getManufacturer() -> e
    java.lang.String getDeviceId() -> f
    java.lang.String getIMEI() -> g
    java.lang.String getSerialno() -> h
    java.lang.String getDeviceData() -> i
    java.lang.String Base64AES(java.lang.String,java.lang.String) -> a
    int getOSVersionInt() -> j
    java.lang.String getScreenSize() -> k
    java.lang.String getCarrier() -> l
    java.lang.String getCarrierName() -> m
    java.lang.String getBluetoothName() -> n
    java.lang.String getSignMD5() -> o
    java.lang.Object getSystemService(java.lang.String) -> c
    java.lang.String getNetworkType() -> p
    java.lang.String getDetailNetworkTypeForStatic() -> q
    int getPlatformCode() -> r
    boolean is4GMobileNetwork() -> G
    boolean isFastMobileNetwork() -> H
    java.lang.String getDeviceKey() -> s
    java.lang.String getCharAndNumr(int) -> a
    java.lang.String getLocalDeviceKey() -> I
    void saveLocalDeviceKey(java.lang.String) -> d
    java.lang.String getPackageName() -> t
    java.lang.String getAppName() -> u
    int getAppVersion() -> v
    java.lang.String getAppVersionName() -> w
    java.util.ArrayList getInstalledApp(boolean) -> a
    boolean isSystemApp(android.content.pm.PackageInfo) -> a
    boolean checkPermission(java.lang.String) -> a
    java.lang.String getTopTaskPackageName() -> x
    boolean getSdcardState() -> y
    java.lang.String getSdcardPath() -> z
    java.lang.String getAndroidID() -> A
    java.lang.String getAdvertisingID() -> B
    boolean isMainProcess(int) -> b
    int getCellId() -> C
    int getCellLac() -> D
com.mob.tools.utils.DeviceHelper$GSConnection -> com.mob.tools.c.d:
    boolean got -> a
    java.util.concurrent.BlockingQueue iBinders -> c
    com.mob.tools.utils.DeviceHelper this$0 -> b
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    android.os.IBinder takeBinder() -> a
com.mob.tools.utils.FileLocker -> com.mob.tools.c.e:
    java.io.FileOutputStream fos -> a
    java.nio.channels.FileLock lock -> b
    void setLockFile(java.lang.String) -> a
    boolean lock(boolean) -> a
    void unlock() -> a
    void release() -> b
com.mob.tools.utils.HEX -> com.mob.tools.c.f:
    char[] DIGITS -> a
    java.lang.String toHex(byte[]) -> a
com.mob.tools.utils.Hashon -> com.mob.tools.c.g:
    java.util.HashMap fromJson(java.lang.String) -> a
    java.util.HashMap fromJson(org.json.JSONObject) -> a
    java.util.ArrayList fromJson(org.json.JSONArray) -> a
    java.lang.String fromHashMap(java.util.HashMap) -> a
    org.json.JSONObject getJSONObject(java.util.HashMap) -> b
    boolean isBasicArray(java.lang.Object) -> a
    java.util.ArrayList arrayToList(java.lang.Object) -> b
    org.json.JSONArray getJSONArray(java.util.ArrayList) -> a
com.mob.tools.utils.JsonValidator -> com.mob.tools.c.h:
    java.text.CharacterIterator it -> a
    char c -> b
    int col -> c
    boolean validate(java.lang.String) -> a
    boolean valid(java.lang.String) -> b
    boolean value() -> a
    boolean literal(java.lang.String) -> c
    boolean array() -> b
    boolean object() -> c
    boolean aggregate(char,char,boolean) -> a
    boolean number() -> d
    boolean string() -> e
    boolean escape() -> f
    boolean ishex(char) -> a
    char nextCharacter() -> g
    void skipWhiteSpace() -> h
    boolean error(java.lang.String,int) -> a
com.mob.tools.utils.LocalDB -> com.mob.tools.c.i:
    java.io.File dbFile -> a
    java.util.HashMap map -> b
    void open(java.lang.String) -> a
    void commit() -> a
    void put(java.lang.String,java.lang.Object) -> b
    java.lang.Object get(java.lang.String) -> e
    void putString(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> b
    void putLong(java.lang.String,java.lang.Long) -> a
    long getLong(java.lang.String) -> c
    void putObject(java.lang.String,java.lang.Object) -> a
    java.lang.Object getObject(java.lang.String) -> d
com.mob.tools.utils.R -> com.mob.tools.c.j:
    float density -> a
    java.lang.Object rp -> b
    int dipToPx(android.content.Context,int) -> a
    int[] getScreenSize(android.content.Context) -> a
    int getScreenWidth(android.content.Context) -> b
    int getScreenHeight(android.content.Context) -> c
    int getResId(android.content.Context,java.lang.String,java.lang.String) -> a
    int getIdRes(android.content.Context,java.lang.String) -> a
    java.lang.String getCacheRoot(android.content.Context) -> d
    java.lang.String getCachePath(android.content.Context,java.lang.String) -> b
    void deleteFileAndFolder(java.io.File) -> a
    android.os.Bundle urlToBundle(java.lang.String) -> a
    android.os.Bundle decodeUrl(java.lang.String) -> b
    int parseInt(java.lang.String) -> c
    int parseInt(java.lang.String,int) -> a
    int parseInt(java.lang.String,int,int,boolean) -> a
    int digit(int,int) -> a
    java.lang.Throwable invalidInt(java.lang.String) -> e
    long parseLong(java.lang.String) -> d
    long parseLong(java.lang.String,int) -> b
    long parseLong(java.lang.String,int,int,boolean) -> b
com.mob.tools.utils.ReflectHelper -> com.mob.tools.c.k:
    java.util.HashSet packageSet -> a
    java.util.HashMap classMap -> b
    com.mob.tools.gui.CachePool cachedMethod -> c
    com.mob.tools.gui.CachePool cachedConstr -> d
    void importClass(java.lang.String) -> a
    void importClass(java.lang.String,java.lang.String) -> a
    java.lang.Class getClass(java.lang.String) -> b
    java.lang.Class[] getTypes(java.lang.Object[]) -> a
    boolean primitiveEquals(java.lang.Class,java.lang.Class) -> a
    boolean matchParams(java.lang.Class[],java.lang.Class[]) -> a
    java.lang.Object invokeInstanceMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> a
    java.lang.Object onInvokeInstanceMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> b
    java.lang.Object getStaticField(java.lang.String,java.lang.String) -> b
    java.lang.Object onGetStaticField(java.lang.String,java.lang.String) -> c
    void setStaticField(java.lang.String,java.lang.String,java.lang.Object) -> a
    void onSetStaticField(java.lang.String,java.lang.String,java.lang.Object) -> b
    java.lang.Object getInstanceField(java.lang.Object,java.lang.String) -> a
    java.lang.Object onGetInstanceField(java.lang.Object,java.lang.String) -> b
    void setInstanceField(java.lang.Object,java.lang.String,java.lang.Object) -> a
    void onSetInstanceField(java.lang.Object,java.lang.String,java.lang.Object) -> b
com.mob.tools.utils.SharePrefrenceHelper -> com.mob.tools.c.l:
    android.content.Context context -> a
    android.content.SharedPreferences prefrence -> b
    void open(java.lang.String,int) -> a
    void putString(java.lang.String,java.lang.String) -> a
    java.lang.String getString(java.lang.String) -> a
    void putBoolean(java.lang.String,java.lang.Boolean) -> a
    boolean getBoolean(java.lang.String) -> b
    void putLong(java.lang.String,java.lang.Long) -> a
    long getLong(java.lang.String) -> c
    void putInt(java.lang.String,java.lang.Integer) -> a
    int getInt(java.lang.String) -> d
    void put(java.lang.String,java.lang.Object) -> a
    java.lang.Object get(java.lang.String) -> e
com.mob.tools.utils.UIHandler -> com.mob.tools.c.m:
    java.lang.String[] prays -> a
    android.os.Handler handler -> b
    void prepare() -> a
    void reset() -> b
    void printPray() -> c
    void handleMessage(android.os.Message) -> b
    android.os.Message getShellMessage(android.os.Message,android.os.Handler$Callback) -> b
    android.os.Message getShellMessage(int,android.os.Handler$Callback) -> b
    boolean sendMessage(android.os.Message,android.os.Handler$Callback) -> a
    boolean sendEmptyMessage(int,android.os.Handler$Callback) -> a
    void access$0(android.os.Message) -> a
com.mob.tools.utils.UIHandler$1 -> com.mob.tools.c.n:
    boolean handleMessage(android.os.Message) -> handleMessage
com.mob.tools.utils.UIHandler$InnerObj -> com.mob.tools.c.o:
    android.os.Message msg -> a
    android.os.Handler$Callback callback -> b
com.slidingmenu.lib.CustomViewAbove -> com.slidingmenu.lib.a:
    android.view.animation.Interpolator sInterpolator -> e
    android.view.View mContent -> f
    int mCurItem -> g
    android.widget.Scroller mScroller -> h
    boolean mScrollingCacheEnabled -> i
    boolean mScrolling -> j
    boolean mIsBeingDragged -> k
    boolean mIsUnableToDrag -> l
    int mTouchSlop -> m
    float mInitialMotionX -> n
    float mLastMotionX -> o
    float mLastMotionY -> p
    int mActivePointerId -> a
    android.view.VelocityTracker mVelocityTracker -> b
    int mMinimumVelocity -> q
    int mMaximumVelocity -> c
    int mFlingDistance -> r
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> s
    boolean mEnabled -> t
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mOnPageChangeListener -> u
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener mInternalPageChangeListener -> v
    com.slidingmenu.lib.SlidingMenu$OnClosedListener mClosedListener -> w
    com.slidingmenu.lib.SlidingMenu$OnOpenedListener mOpenedListener -> x
    java.util.List mIgnoredViews -> y
    int mTouchMode -> d
    boolean mQuickReturn -> z
    float mScrollX -> A
    void initCustomViewAbove() -> a
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void setOnPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> setOnPageChangeListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener setInternalPageChangeListener(com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener) -> a
    float distanceInfluenceForSnapDuration(float) -> a
    int getDestScrollX(int) -> a
    int getLeftBound() -> getLeftBound
    int getRightBound() -> getRightBound
    int getContentLeft() -> getContentLeft
    boolean isMenuOpen() -> b
    boolean isInIgnoredView(android.view.MotionEvent) -> a
    int getBehindWidth() -> getBehindWidth
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void smoothScrollTo(int,int,int) -> a
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setCustomViewBehind(com.slidingmenu.lib.CustomViewBehind) -> setCustomViewBehind
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onLayout(boolean,int,int,int,int) -> onLayout
    void setAboveOffset(int) -> setAboveOffset
    void computeScroll() -> computeScroll
    void pageScrolled(int) -> c
    void onPageScrolled(int,float,int) -> a
    void completeScroll() -> e
    void setTouchMode(int) -> setTouchMode
    int getTouchMode() -> getTouchMode
    boolean thisTouchAllowed(android.view.MotionEvent) -> b
    boolean thisSlideAllowed(float) -> b
    int getPointerIndex(android.view.MotionEvent,int) -> a
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void determineDrag(android.view.MotionEvent) -> c
    void scrollTo(int,int) -> scrollTo
    int determineTargetPage(float,int,int) -> a
    float getPercentOpen() -> getPercentOpen
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> d
    void startDrag() -> f
    void endDrag() -> g
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> b
    boolean pageLeft() -> c
    boolean pageRight() -> d
    com.slidingmenu.lib.CustomViewBehind access$000(com.slidingmenu.lib.CustomViewAbove) -> a
com.slidingmenu.lib.CustomViewAbove$1 -> com.slidingmenu.lib.b:
    float getInterpolation(float) -> getInterpolation
com.slidingmenu.lib.CustomViewAbove$2 -> com.slidingmenu.lib.c:
    com.slidingmenu.lib.CustomViewAbove this$0 -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewAbove$OnPageChangeListener -> com.slidingmenu.lib.d:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewAbove$SimpleOnPageChangeListener -> com.slidingmenu.lib.e:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.CustomViewBehind -> com.slidingmenu.lib.f:
    int mTouchMode -> a
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    android.view.View mContent -> c
    android.view.View mSecondaryContent -> d
    int mMarginThreshold -> e
    int mWidthOffset -> f
    com.slidingmenu.lib.SlidingMenu$CanvasTransformer mTransformer -> g
    boolean mChildrenEnabled -> h
    int mMode -> i
    boolean mFadeEnabled -> j
    android.graphics.Paint mFadePaint -> k
    float mScrollScale -> l
    android.graphics.drawable.Drawable mShadowDrawable -> m
    android.graphics.drawable.Drawable mSecondaryShadowDrawable -> n
    int mShadowWidth -> o
    float mFadeDegree -> p
    boolean mSelectorEnabled -> q
    android.graphics.Bitmap mSelectorDrawable -> r
    android.view.View mSelectedView -> s
    void setCustomViewAbove(com.slidingmenu.lib.CustomViewAbove) -> setCustomViewAbove
    void setCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setCanvasTransformer
    void setWidthOffset(int) -> setWidthOffset
    int getBehindWidth() -> getBehindWidth
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setSecondaryContent(android.view.View) -> setSecondaryContent
    android.view.View getSecondaryContent() -> getSecondaryContent
    void setChildrenEnabled(boolean) -> setChildrenEnabled
    void scrollTo(int,int) -> scrollTo
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onMeasure(int,int) -> onMeasure
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setScrollScale(float) -> setScrollScale
    float getScrollScale() -> getScrollScale
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    int getMenuPage(int) -> a
    void scrollBehindTo(android.view.View,int,int) -> a
    int getMenuLeft(android.view.View,int) -> a
    int getAbsLeftBound(android.view.View) -> a
    int getAbsRightBound(android.view.View) -> b
    boolean marginTouchAllowed(android.view.View,int) -> b
    void setTouchMode(int) -> setTouchMode
    boolean menuOpenTouchAllowed(android.view.View,int,float) -> a
    boolean menuTouchInQuickReturn(android.view.View,int,float) -> b
    boolean menuClosedSlideAllowed(float) -> a
    boolean menuOpenSlideAllowed(float) -> b
    void drawShadow(android.view.View,android.graphics.Canvas) -> a
    void drawFade(android.view.View,android.graphics.Canvas,float) -> a
    void drawSelector(android.view.View,android.graphics.Canvas,float) -> b
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    int getSelectorTop() -> getSelectorTop
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
com.slidingmenu.lib.R -> com.slidingmenu.lib.g:
com.slidingmenu.lib.R$id -> com.slidingmenu.lib.h:
    int fullscreen -> fullscreen
    int left -> left
    int margin -> margin
    int right -> right
    int selected_view -> selected_view
    int slidingmenumain -> slidingmenumain
com.slidingmenu.lib.R$layout -> com.slidingmenu.lib.i:
    int main -> main
    int slidingmenumain -> slidingmenumain
com.slidingmenu.lib.R$styleable -> com.slidingmenu.lib.j:
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.slidingmenu.lib.SlidingMenu -> com.slidingmenu.lib.SlidingMenu:
    boolean mActionbarOverlay -> a
    com.slidingmenu.lib.CustomViewAbove mViewAbove -> b
    com.slidingmenu.lib.CustomViewBehind mViewBehind -> c
    com.slidingmenu.lib.SlidingMenu$OnOpenListener mOpenListener -> d
    com.slidingmenu.lib.SlidingMenu$OnCloseListener mCloseListener -> e
    android.os.Handler mHandler -> f
    void attachToActivity(android.app.Activity,int) -> a
    void attachToActivity(android.app.Activity,int,boolean) -> a
    void setContent(int) -> setContent
    void setContent(android.view.View) -> setContent
    android.view.View getContent() -> getContent
    void setMenu(int) -> setMenu
    void setMenu(android.view.View) -> setMenu
    android.view.View getMenu() -> getMenu
    void setSecondaryMenu(int) -> setSecondaryMenu
    void setSecondaryMenu(android.view.View) -> setSecondaryMenu
    android.view.View getSecondaryMenu() -> getSecondaryMenu
    void setSlidingEnabled(boolean) -> setSlidingEnabled
    void setMode(int) -> setMode
    int getMode() -> getMode
    void setStatic(boolean) -> setStatic
    void showMenu(boolean) -> a
    void showSecondaryMenu(boolean) -> b
    void showContent() -> a
    void showContent(boolean) -> c
    void toggle() -> b
    void toggle(boolean) -> d
    boolean isMenuShowing() -> c
    boolean isSecondaryMenuShowing() -> d
    int getBehindOffset() -> getBehindOffset
    void setBehindOffset(int) -> setBehindOffset
    void setBehindOffsetRes(int) -> setBehindOffsetRes
    void setAboveOffset(int) -> setAboveOffset
    void setAboveOffsetRes(int) -> setAboveOffsetRes
    void setBehindWidth(int) -> setBehindWidth
    void setBehindWidthRes(int) -> setBehindWidthRes
    float getBehindScrollScale() -> getBehindScrollScale
    void setBehindScrollScale(float) -> setBehindScrollScale
    void setBehindCanvasTransformer(com.slidingmenu.lib.SlidingMenu$CanvasTransformer) -> setBehindCanvasTransformer
    int getTouchModeAbove() -> getTouchModeAbove
    void setTouchModeAbove(int) -> setTouchModeAbove
    void setTouchModeBehind(int) -> setTouchModeBehind
    void setShadowDrawable(int) -> setShadowDrawable
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setSecondaryShadowDrawable(int) -> setSecondaryShadowDrawable
    void setSecondaryShadowDrawable(android.graphics.drawable.Drawable) -> setSecondaryShadowDrawable
    void setShadowWidthRes(int) -> setShadowWidthRes
    void setShadowWidth(int) -> setShadowWidth
    void setFadeEnabled(boolean) -> setFadeEnabled
    void setFadeDegree(float) -> setFadeDegree
    void setSelectorEnabled(boolean) -> setSelectorEnabled
    void setSelectedView(android.view.View) -> setSelectedView
    void setSelectorDrawable(int) -> setSelectorDrawable
    void setSelectorBitmap(android.graphics.Bitmap) -> setSelectorBitmap
    void setOnOpenListener(com.slidingmenu.lib.SlidingMenu$OnOpenListener) -> setOnOpenListener
    void setOnCloseListener(com.slidingmenu.lib.SlidingMenu$OnCloseListener) -> setOnCloseListener
    void setOnOpenedListener(com.slidingmenu.lib.SlidingMenu$OnOpenedListener) -> setOnOpenedListener
    void setOnClosedListener(com.slidingmenu.lib.SlidingMenu$OnClosedListener) -> setOnClosedListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    void manageLayers(float) -> a
    com.slidingmenu.lib.SlidingMenu$OnOpenListener access$000(com.slidingmenu.lib.SlidingMenu) -> a
    com.slidingmenu.lib.SlidingMenu$OnCloseListener access$100(com.slidingmenu.lib.SlidingMenu) -> b
com.slidingmenu.lib.SlidingMenu$1 -> com.slidingmenu.lib.k:
    com.slidingmenu.lib.SlidingMenu this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
com.slidingmenu.lib.SlidingMenu$2 -> com.slidingmenu.lib.l:
    int val$layerType -> a
    com.slidingmenu.lib.SlidingMenu this$0 -> b
    void run() -> run
com.slidingmenu.lib.SlidingMenu$CanvasTransformer -> com.slidingmenu.lib.m:
    void transformCanvas(android.graphics.Canvas,float) -> a
com.slidingmenu.lib.SlidingMenu$OnCloseListener -> com.slidingmenu.lib.n:
    void onClose() -> a
com.slidingmenu.lib.SlidingMenu$OnClosedListener -> com.slidingmenu.lib.o:
    void onClosed() -> a
com.slidingmenu.lib.SlidingMenu$OnOpenListener -> com.slidingmenu.lib.p:
    void onOpen() -> a
com.slidingmenu.lib.SlidingMenu$OnOpenedListener -> com.slidingmenu.lib.q:
    void onOpened() -> a
com.slidingmenu.lib.SlidingMenu$SavedState -> com.slidingmenu.lib.r:
    int mItem -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int getItem() -> a
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.slidingmenu.lib.SlidingMenu$SavedState$1 -> com.slidingmenu.lib.s:
    com.slidingmenu.lib.SlidingMenu$SavedState createFromParcel(android.os.Parcel) -> a
    com.slidingmenu.lib.SlidingMenu$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.slidingmenu.lib.app.SlidingActivityHelper -> com.slidingmenu.lib.a.a:
    android.app.Activity mActivity -> a
    com.slidingmenu.lib.SlidingMenu mSlidingMenu -> b
    android.view.View mViewAbove -> c
    android.view.View mViewBehind -> d
    boolean mBroadcasting -> e
    boolean mOnPostCreateCalled -> f
    boolean mEnableSlide -> g
    void onCreate(android.os.Bundle) -> a
    void onPostCreate(android.os.Bundle) -> b
    android.view.View findViewById(int) -> a
    void onSaveInstanceState(android.os.Bundle) -> c
    void registerAboveContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> b
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> a
    void showContent() -> b
    boolean onKeyUp(int,android.view.KeyEvent) -> a
    com.slidingmenu.lib.SlidingMenu access$000(com.slidingmenu.lib.app.SlidingActivityHelper) -> a
com.slidingmenu.lib.app.SlidingActivityHelper$1 -> com.slidingmenu.lib.a.b:
    boolean val$open -> a
    boolean val$secondary -> b
    com.slidingmenu.lib.app.SlidingActivityHelper this$0 -> c
    void run() -> run
com.slidingmenu.lib.app.SlidingFragmentActivity -> com.slidingmenu.lib.a.c:
    com.slidingmenu.lib.app.SlidingActivityHelper mHelper -> n
    void onCreate(android.os.Bundle) -> onCreate
    void onPostCreate(android.os.Bundle) -> onPostCreate
    android.view.View findViewById(int) -> findViewById
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setBehindContentView(int) -> a
    void setBehindContentView(android.view.View) -> setBehindContentView
    void setBehindContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> a
    com.slidingmenu.lib.SlidingMenu getSlidingMenu() -> f
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
com.sundy.pkcao.MainApplication -> com.sundy.pkcao.MainApplication:
    java.lang.String TAG -> a
    void onCreate() -> onCreate
    void onLowMemory() -> onLowMemory
com.sundy.pkcao.R -> com.sundy.pkcao.a:
com.sundy.pkcao.R$styleable -> com.sundy.pkcao.b:
    int[] AbsHListView -> AbsHListView
    int AbsHListView_android_cacheColorHint -> AbsHListView_android_cacheColorHint
    int AbsHListView_android_choiceMode -> AbsHListView_android_choiceMode
    int AbsHListView_android_drawSelectorOnTop -> AbsHListView_android_drawSelectorOnTop
    int AbsHListView_android_listSelector -> AbsHListView_android_listSelector
    int AbsHListView_android_scrollingCache -> AbsHListView_android_scrollingCache
    int AbsHListView_android_smoothScrollbar -> AbsHListView_android_smoothScrollbar
    int AbsHListView_stackFromRight -> AbsHListView_stackFromRight
    int AbsHListView_transcriptMode -> AbsHListView_transcriptMode
    int[] CircleImageView -> CircleImageView
    int CircleImageView_border_color -> CircleImageView_border_color
    int CircleImageView_border_width -> CircleImageView_border_width
    int[] HListView -> HListView
    int HListView_android_divider -> HListView_android_divider
    int HListView_android_entries -> HListView_android_entries
    int HListView_dividerWidth -> HListView_dividerWidth
    int HListView_footerDividersEnabled -> HListView_footerDividersEnabled
    int HListView_headerDividersEnabled -> HListView_headerDividersEnabled
    int HListView_measureWithChild -> HListView_measureWithChild
    int HListView_overScrollFooter -> HListView_overScrollFooter
    int HListView_overScrollHeader -> HListView_overScrollHeader
    int[] PlayBtn -> PlayBtn
    int PlayBtn_left -> PlayBtn_left
    int[] ProgressWheel -> ProgressWheel
    int ProgressWheel_barColor -> ProgressWheel_barColor
    int ProgressWheel_barLength -> ProgressWheel_barLength
    int ProgressWheel_barWidth -> ProgressWheel_barWidth
    int ProgressWheel_circleColor -> ProgressWheel_circleColor
    int ProgressWheel_contourColor -> ProgressWheel_contourColor
    int ProgressWheel_contourSize -> ProgressWheel_contourSize
    int ProgressWheel_delayMillis -> ProgressWheel_delayMillis
    int ProgressWheel_radius -> ProgressWheel_radius
    int ProgressWheel_rimColor -> ProgressWheel_rimColor
    int ProgressWheel_rimWidth -> ProgressWheel_rimWidth
    int ProgressWheel_spinSpeed -> ProgressWheel_spinSpeed
    int ProgressWheel_text -> ProgressWheel_text
    int ProgressWheel_textColor -> ProgressWheel_textColor
    int ProgressWheel_textSize -> ProgressWheel_textSize
    int[] RoundAngleImageView -> RoundAngleImageView
    int RoundAngleImageView_roundHeight -> RoundAngleImageView_roundHeight
    int RoundAngleImageView_roundWidth -> RoundAngleImageView_roundWidth
    int[] SlidingMenu -> SlidingMenu
    int SlidingMenu_behindOffset -> SlidingMenu_behindOffset
    int SlidingMenu_behindScrollScale -> SlidingMenu_behindScrollScale
    int SlidingMenu_behindWidth -> SlidingMenu_behindWidth
    int SlidingMenu_fadeDegree -> SlidingMenu_fadeDegree
    int SlidingMenu_fadeEnabled -> SlidingMenu_fadeEnabled
    int SlidingMenu_mode -> SlidingMenu_mode
    int SlidingMenu_selectorDrawable -> SlidingMenu_selectorDrawable
    int SlidingMenu_selectorEnabled -> SlidingMenu_selectorEnabled
    int SlidingMenu_shadowDrawable -> SlidingMenu_shadowDrawable
    int SlidingMenu_shadowWidth -> SlidingMenu_shadowWidth
    int SlidingMenu_touchModeAbove -> SlidingMenu_touchModeAbove
    int SlidingMenu_touchModeBehind -> SlidingMenu_touchModeBehind
    int SlidingMenu_viewAbove -> SlidingMenu_viewAbove
    int SlidingMenu_viewBehind -> SlidingMenu_viewBehind
com.sundy.pkcao.activitys.ChatActivity -> com.sundy.pkcao.activitys.ChatActivity:
    java.lang.String TAG -> b
    com.sundy.pkcao.tools.xlistview.XListView listview -> c
    java.lang.String avimConversationID -> d
    com.avos.avoscloud.im.v2.AVIMConversation conv -> e
    com.sundy.pkcao.tools.EmotionEditText textEdit -> f
    android.widget.Button sendBtn -> g
    android.view.View chatAddLayout -> h
    android.view.View chatEmotionLayout -> i
    android.view.View$OnClickListener onClick -> j
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> d
    void sendMsg() -> e
    void hideBottomLayoutAndScrollToLast() -> f
    void hideBottomLayout() -> g
    void scrollToLast() -> a
    void hideAddLayout() -> h
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onRefresh() -> b
    void onLoadMore() -> c
    void access$000(com.sundy.pkcao.activitys.ChatActivity) -> a
    void access$100(com.sundy.pkcao.activitys.ChatActivity) -> b
    com.sundy.pkcao.tools.xlistview.XListView access$200(com.sundy.pkcao.activitys.ChatActivity) -> c
com.sundy.pkcao.activitys.ChatActivity$1 -> com.sundy.pkcao.activitys.a:
    com.sundy.pkcao.activitys.ChatActivity this$0 -> a
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.activitys.ChatActivity$2 -> com.sundy.pkcao.activitys.b:
    com.sundy.pkcao.activitys.ChatActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.activitys.ChatActivity$3 -> com.sundy.pkcao.activitys.c:
    com.sundy.pkcao.activitys.ChatActivity this$0 -> a
    void run() -> run
com.sundy.pkcao.activitys.ChatActivity$CustomMessageHandler -> com.sundy.pkcao.activitys.d:
    com.sundy.pkcao.activitys.ChatActivity this$0 -> a
    void onMessage(com.avos.avoscloud.im.v2.AVIMMessage,com.avos.avoscloud.im.v2.AVIMConversation,com.avos.avoscloud.im.v2.AVIMClient) -> onMessage
com.sundy.pkcao.activitys.CommentsActivity -> com.sundy.pkcao.activitys.CommentsActivity:
    java.lang.String TAG -> b
    com.sundy.pkcao.tools.xlistview.XListView xListView -> c
    com.sundy.pkcao.tools.ProgressWheel progressbar -> d
    com.sundy.pkcao.adapters.CommentsAdapter adapter -> e
    java.util.List commentsList -> f
    int curPage -> g
    int pageNum -> h
    boolean ishasMore -> i
    boolean isRefreshing -> j
    java.lang.String last_updated_time -> k
    com.sundy.pkcao.tools.EmotionEditText contentEdit -> l
    java.lang.String Caodian_id -> m
    com.sundy.pkcao.tools.xlistview.XListView$IXListViewListener ixListViewListener -> n
    android.view.View$OnClickListener onClick -> o
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onLoad() -> b
    void getComments() -> c
    void commitComments() -> d
    void scrollToFirst() -> e
    void sendBroadcast2RefreshComments() -> f
    void showProgress(com.sundy.pkcao.tools.ProgressWheel) -> a
    void stopProgress(com.sundy.pkcao.tools.ProgressWheel) -> b
    void onDestroy() -> onDestroy
    boolean access$002(com.sundy.pkcao.activitys.CommentsActivity,boolean) -> a
    boolean access$100(com.sundy.pkcao.activitys.CommentsActivity) -> a
    java.util.List access$200(com.sundy.pkcao.activitys.CommentsActivity) -> b
    com.sundy.pkcao.adapters.CommentsAdapter access$300(com.sundy.pkcao.activitys.CommentsActivity) -> c
    com.sundy.pkcao.tools.xlistview.XListView access$400(com.sundy.pkcao.activitys.CommentsActivity) -> d
    int access$502(com.sundy.pkcao.activitys.CommentsActivity,int) -> a
    java.lang.String access$602(com.sundy.pkcao.activitys.CommentsActivity,java.lang.String) -> a
    void access$700(com.sundy.pkcao.activitys.CommentsActivity) -> e
    void access$800(com.sundy.pkcao.activitys.CommentsActivity) -> f
    boolean access$102(com.sundy.pkcao.activitys.CommentsActivity,boolean) -> b
    boolean access$000(com.sundy.pkcao.activitys.CommentsActivity) -> g
    int access$900(com.sundy.pkcao.activitys.CommentsActivity) -> h
    int access$500(com.sundy.pkcao.activitys.CommentsActivity) -> i
    int access$508(com.sundy.pkcao.activitys.CommentsActivity) -> j
    com.sundy.pkcao.tools.ProgressWheel access$1000(com.sundy.pkcao.activitys.CommentsActivity) -> k
    void access$1100(com.sundy.pkcao.activitys.CommentsActivity,com.sundy.pkcao.tools.ProgressWheel) -> a
    void access$1200(com.sundy.pkcao.activitys.CommentsActivity) -> l
    void access$1300(com.sundy.pkcao.activitys.CommentsActivity,com.sundy.pkcao.tools.ProgressWheel) -> b
    void access$1400(com.sundy.pkcao.activitys.CommentsActivity) -> m
    com.sundy.pkcao.tools.EmotionEditText access$1500(com.sundy.pkcao.activitys.CommentsActivity) -> n
    void access$1600(com.sundy.pkcao.activitys.CommentsActivity) -> o
com.sundy.pkcao.activitys.CommentsActivity$1 -> com.sundy.pkcao.activitys.e:
    com.sundy.pkcao.activitys.CommentsActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.sundy.pkcao.activitys.CommentsActivity$2 -> com.sundy.pkcao.activitys.f:
    com.sundy.pkcao.activitys.CommentsActivity this$0 -> a
    void onRefresh() -> b
    void onLoadMore() -> c
com.sundy.pkcao.activitys.CommentsActivity$3 -> com.sundy.pkcao.activitys.g:
    com.sundy.pkcao.activitys.CommentsActivity this$0 -> a
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.activitys.CommentsActivity$3$1 -> com.sundy.pkcao.activitys.h:
    com.sundy.pkcao.activitys.CommentsActivity$3 this$1 -> a
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.activitys.CommentsActivity$4 -> com.sundy.pkcao.activitys.i:
    java.lang.String val$content -> a
    com.sundy.pkcao.activitys.CommentsActivity this$0 -> b
    void done(com.avos.avoscloud.AVObject,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.activitys.CommentsActivity$4$1 -> com.sundy.pkcao.activitys.j:
    com.sundy.pkcao.activitys.CommentsActivity$4 this$1 -> a
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.activitys.CommentsActivity$5 -> com.sundy.pkcao.activitys.k:
    com.sundy.pkcao.activitys.CommentsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.activitys.CommentsActivity$6 -> com.sundy.pkcao.activitys.l:
    com.sundy.pkcao.activitys.CommentsActivity this$0 -> a
    void run() -> run
com.sundy.pkcao.activitys.EditImageActivity -> com.sundy.pkcao.activitys.EditImageActivity:
    java.lang.String TAG -> b
    com.sundy.pkcao.tools.MosaicView mvImage -> c
    java.lang.String imgPath -> d
    int currentColor -> e
    android.view.View$OnClickListener onClickListener -> f
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    java.lang.String access$000(com.sundy.pkcao.activitys.EditImageActivity) -> a
    com.sundy.pkcao.tools.MosaicView access$100(com.sundy.pkcao.activitys.EditImageActivity) -> b
    int access$202(com.sundy.pkcao.activitys.EditImageActivity,int) -> a
    int access$200(com.sundy.pkcao.activitys.EditImageActivity) -> c
com.sundy.pkcao.activitys.EditImageActivity$1 -> com.sundy.pkcao.activitys.m:
    com.sundy.pkcao.activitys.EditImageActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.activitys.LoadingActivity -> com.sundy.pkcao.activitys.LoadingActivity:
    java.lang.String TAG -> b
    int GO_MAIN -> c
    long SPLASH_DELAY_MILLIS -> d
    android.os.Handler handler -> e
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void goMain() -> b
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void access$000(com.sundy.pkcao.activitys.LoadingActivity) -> a
com.sundy.pkcao.activitys.LoadingActivity$1 -> com.sundy.pkcao.activitys.n:
    com.sundy.pkcao.activitys.LoadingActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.sundy.pkcao.activitys.MainActivity -> com.sundy.pkcao.activitys.MainActivity:
    java.lang.String TAG -> n
    com.sundy.pkcao.fragments.MenuFragment menuFragment -> o
    android.support.v4.app.Fragment mContent -> p
    int exit_count -> q
    void onCreate(android.os.Bundle) -> onCreate
    void initeFragment() -> i
    void addMenuFragment() -> j
    void onStart() -> onStart
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void switchContent(android.support.v4.app.Fragment) -> b
    void addContent(android.support.v4.app.Fragment) -> c
    void showSlidingMenu() -> g
    void onBack() -> h
    void onBackPressed() -> onBackPressed
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void rtLog(java.lang.String,java.lang.String) -> a
    android.support.v4.app.Fragment access$102(com.sundy.pkcao.activitys.MainActivity,android.support.v4.app.Fragment) -> a
com.sundy.pkcao.activitys.MainActivity$2 -> com.sundy.pkcao.activitys.o:
    com.sundy.pkcao.activitys.MainActivity this$0 -> a
    void run() -> run
com.sundy.pkcao.activitys.ScaleImageActivity -> com.sundy.pkcao.activitys.ScaleImageActivity:
    java.lang.String TAG -> b
    java.util.ArrayList list -> c
    android.support.v4.view.ViewPager viewpager -> d
    com.sundy.pkcao.adapters.ImageViewPagerAdapter adapter -> e
    int current_position -> f
    android.view.View$OnClickListener onClickListener -> g
    android.support.v4.view.ViewPager$OnPageChangeListener pageChangeListener -> h
    void onCreate(android.os.Bundle) -> onCreate
    void init() -> a
    void showPerious() -> b
    void showNext() -> c
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void access$000(com.sundy.pkcao.activitys.ScaleImageActivity) -> a
    void access$100(com.sundy.pkcao.activitys.ScaleImageActivity) -> b
    int access$202(com.sundy.pkcao.activitys.ScaleImageActivity,int) -> a
    int access$200(com.sundy.pkcao.activitys.ScaleImageActivity) -> c
    java.util.ArrayList access$300(com.sundy.pkcao.activitys.ScaleImageActivity) -> d
com.sundy.pkcao.activitys.ScaleImageActivity$1 -> com.sundy.pkcao.activitys.p:
    com.sundy.pkcao.activitys.ScaleImageActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.activitys.ScaleImageActivity$2 -> com.sundy.pkcao.activitys.q:
    com.sundy.pkcao.activitys.ScaleImageActivity this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
com.sundy.pkcao.activitys.ScaleImageViewActivity -> com.sundy.pkcao.activitys.ScaleImageViewActivity:
    com.sundy.pkcao.tools.draganddropphotos.DraggableLayout dragableLayout -> b
    android.view.View$OnClickListener onClickListener -> c
    void onCreate(android.os.Bundle) -> onCreate
com.sundy.pkcao.activitys.ScaleImageViewActivity$1 -> com.sundy.pkcao.activitys.r:
    com.sundy.pkcao.activitys.ScaleImageViewActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.activitys._AbstractActivity -> com.sundy.pkcao.activitys.s:
    com.androidquery.AQuery aq -> a
    java.lang.String TAG -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void rtLog(java.lang.String,java.lang.String) -> a
com.sundy.pkcao.adapters.CaoListAdapter -> com.sundy.pkcao.a.a:
    android.content.Context context -> a
    android.view.LayoutInflater inflater -> b
    java.util.List list -> c
    java.lang.String image_url -> d
    com.avos.avoscloud.AVObject current_item -> e
    android.os.Handler handler -> f
    int Image_Height -> g
    void setData(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.io.InputStream getImageStream(java.lang.String) -> a
    com.avos.avoscloud.AVObject access$000(com.sundy.pkcao.adapters.CaoListAdapter) -> a
    java.lang.String access$100(com.sundy.pkcao.adapters.CaoListAdapter) -> b
    android.content.Context access$200(com.sundy.pkcao.adapters.CaoListAdapter) -> c
    com.avos.avoscloud.AVObject access$002(com.sundy.pkcao.adapters.CaoListAdapter,com.avos.avoscloud.AVObject) -> a
    java.lang.String access$102(com.sundy.pkcao.adapters.CaoListAdapter,java.lang.String) -> a
    android.os.Handler access$300(com.sundy.pkcao.adapters.CaoListAdapter) -> d
com.sundy.pkcao.adapters.CaoListAdapter$1 -> com.sundy.pkcao.a.b:
    com.sundy.pkcao.adapters.CaoListAdapter this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.sundy.pkcao.adapters.CaoListAdapter$2 -> com.sundy.pkcao.a.c:
    com.sundy.pkcao.adapters.CaoListAdapter$ViewHolder val$finalHolder -> a
    com.sundy.pkcao.adapters.CaoListAdapter this$0 -> b
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.adapters.CaoListAdapter$3 -> com.sundy.pkcao.a.d:
    java.lang.String val$video_path -> a
    com.sundy.pkcao.adapters.CaoListAdapter this$0 -> b
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.adapters.CaoListAdapter$4 -> com.sundy.pkcao.a.e:
    com.sundy.pkcao.adapters.CaoListAdapter this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.adapters.CaoListAdapter$5 -> com.sundy.pkcao.a.f:
    com.avos.avoscloud.AVObject val$caodian -> a
    com.sundy.pkcao.adapters.CaoListAdapter this$0 -> b
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.adapters.CaoListAdapter$5$1 -> com.sundy.pkcao.a.g:
    java.lang.String val$video_thumbnail_img -> a
    com.sundy.pkcao.adapters.CaoListAdapter$5 this$1 -> b
    void run() -> run
com.sundy.pkcao.adapters.CaoListAdapter$5$2 -> com.sundy.pkcao.a.h:
    com.avos.avoscloud.AVFile val$img1 -> a
    com.sundy.pkcao.adapters.CaoListAdapter$5 this$1 -> b
    void run() -> run
com.sundy.pkcao.adapters.CaoListAdapter$ViewHolder -> com.sundy.pkcao.a.i:
    android.widget.TextView txt_title -> a
    android.widget.TextView txt_count -> b
    android.widget.TextView txt_content -> c
    android.widget.ImageView img -> d
    android.widget.ImageView img_play -> e
    android.widget.TextView btn_add -> f
    android.widget.TextView btn_share -> g
    com.sundy.pkcao.adapters.CaoListAdapter this$0 -> h
com.sundy.pkcao.adapters.CommentsAdapter -> com.sundy.pkcao.a.j:
    android.content.Context context -> a
    android.view.LayoutInflater inflater -> b
    java.util.List list -> c
    void setData(java.util.List) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.sundy.pkcao.adapters.CommentsAdapter$ViewHolder -> com.sundy.pkcao.a.k:
    android.widget.TextView txt_username -> a
    android.widget.TextView txt_comment -> b
    android.widget.TextView txt_date -> c
    com.sundy.pkcao.tools.CircleImageView img -> d
com.sundy.pkcao.adapters.ImageViewPagerAdapter -> com.sundy.pkcao.a.l:
    java.util.LinkedList views -> a
    android.content.Context context -> b
    java.util.List list -> c
    void setData(java.util.List) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    int getCount() -> a
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
com.sundy.pkcao.baidupush.MyPushMessageReceiver -> com.sundy.pkcao.baidupush.MyPushMessageReceiver:
    java.lang.String TAG -> a
    void onBind(android.content.Context,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onBind
    void onMessage(android.content.Context,java.lang.String,java.lang.String) -> onMessage
    void onNotificationClicked(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationClicked
    void onNotificationArrived(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> onNotificationArrived
    void onSetTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onSetTags
    void onDelTags(android.content.Context,int,java.util.List,java.util.List,java.lang.String) -> onDelTags
    void onListTags(android.content.Context,int,java.util.List,java.lang.String) -> onListTags
    void onUnbind(android.content.Context,int,java.lang.String) -> onUnbind
    void updateContent(android.content.Context,java.lang.String) -> a
com.sundy.pkcao.baidupush.Utils -> com.sundy.pkcao.baidupush.a:
    java.lang.String logStringCache -> a
    java.lang.String getMetaValue(android.content.Context,java.lang.String) -> a
com.sundy.pkcao.fragments.AddCaoDianFragment -> com.sundy.pkcao.b.a:
    java.lang.String TAG -> T
    android.support.v4.app.Fragment fragment -> U
    android.view.View v -> V
    java.util.ArrayList photoList -> W
    android.widget.LinearLayout linear_imgs -> X
    int count -> Y
    java.lang.String videoPath -> Z
    java.lang.String video_thumbnail_path -> aa
    java.lang.String photoPath -> ab
    com.sundy.pkcao.tools.ProgressWheel progressbar -> ac
    android.content.SharedPreferences preferences -> ad
    java.lang.String caodian_id -> ae
    int VIDEO_SIZE -> af
    int VIDEO_DURATION -> ag
    android.os.Vibrator vibrator -> ah
    android.view.View$OnClickListener onClick -> ai
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> w
    void selectVideo() -> x
    void selectPhoto() -> y
    void addCaodian() -> z
    void clearUserInfo() -> A
    void onActivityResult(int,int,android.content.Intent) -> a
    void showImgs(android.graphics.Bitmap) -> a
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
    void access$000(com.sundy.pkcao.fragments.AddCaoDianFragment) -> a
    java.lang.String access$102(com.sundy.pkcao.fragments.AddCaoDianFragment,java.lang.String) -> a
    void access$200(com.sundy.pkcao.fragments.AddCaoDianFragment) -> b
    java.lang.String access$302(com.sundy.pkcao.fragments.AddCaoDianFragment,java.lang.String) -> b
    java.lang.String access$402(com.sundy.pkcao.fragments.AddCaoDianFragment,java.lang.String) -> c
    void access$500(com.sundy.pkcao.fragments.AddCaoDianFragment) -> c
    java.lang.String access$300(com.sundy.pkcao.fragments.AddCaoDianFragment) -> d
    java.util.ArrayList access$600(com.sundy.pkcao.fragments.AddCaoDianFragment) -> e
    android.widget.LinearLayout access$700(com.sundy.pkcao.fragments.AddCaoDianFragment) -> f
com.sundy.pkcao.fragments.AddCaoDianFragment$1 -> com.sundy.pkcao.b.b:
    com.sundy.pkcao.fragments.AddCaoDianFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.AddCaoDianFragment$2 -> com.sundy.pkcao.b.c:
    com.sundy.pkcao.fragments.AddCaoDianFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sundy.pkcao.fragments.AddCaoDianFragment$3 -> com.sundy.pkcao.b.d:
    com.sundy.pkcao.fragments.AddCaoDianFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sundy.pkcao.fragments.AddCaoDianFragment$4 -> com.sundy.pkcao.b.e:
    com.sundy.pkcao.fragments.AddCaoDianFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.AddCaoDianFragment$5 -> com.sundy.pkcao.b.f:
    com.sundy.pkcao.fragments.AddCaoDianFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.AddCaoDianFragment$6 -> com.sundy.pkcao.b.g:
    com.sundy.pkcao.fragments.AddCaoDianFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.AddCaoDianFragment$7 -> com.sundy.pkcao.b.h:
    com.sundy.pkcao.fragments.AddCaoDianFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.AddCaoDianFragment$8 -> com.sundy.pkcao.b.i:
    android.view.View val$view -> a
    com.sundy.pkcao.fragments.AddCaoDianFragment this$0 -> b
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.CaoDetailFragment -> com.sundy.pkcao.b.j:
    java.lang.String TAG -> T
    int Video_Image_Height -> U
    com.avos.avoscloud.AVObject item -> V
    android.support.v4.app.Fragment fragment -> W
    android.view.View v -> X
    android.content.SharedPreferences preferences -> Y
    java.lang.String type -> Z
    java.lang.String share_image_url -> aa
    com.sundy.pkcao.fragments.CaoDetailFragment$MyBroadcastReceiver receiver -> ab
    android.view.View$OnClickListener onClick -> ac
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> x
    void registerBroadcast() -> y
    void unregisterBroadcast() -> z
    void getComments() -> A
    void showComments(java.util.List) -> a
    void getLikesCount() -> B
    void showCaodian() -> C
    void goCommentsPage() -> D
    void delete() -> E
    void deleteCaodian() -> F
    void likeCaodian() -> w
    void share() -> G
    void shareContent() -> H
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
    void access$100(com.sundy.pkcao.fragments.CaoDetailFragment) -> a
    void access$200(com.sundy.pkcao.fragments.CaoDetailFragment) -> b
    void access$300(com.sundy.pkcao.fragments.CaoDetailFragment) -> c
    void access$400(com.sundy.pkcao.fragments.CaoDetailFragment,java.util.List) -> a
    android.content.SharedPreferences access$500(com.sundy.pkcao.fragments.CaoDetailFragment) -> d
    void access$600(com.sundy.pkcao.fragments.CaoDetailFragment) -> e
    void access$700(com.sundy.pkcao.fragments.CaoDetailFragment) -> f
com.sundy.pkcao.fragments.CaoDetailFragment$1 -> com.sundy.pkcao.b.k:
    com.sundy.pkcao.fragments.CaoDetailFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.CaoDetailFragment$2 -> com.sundy.pkcao.b.l:
    com.sundy.pkcao.fragments.CaoDetailFragment this$0 -> a
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.CaoDetailFragment$3 -> com.sundy.pkcao.b.m:
    com.sundy.pkcao.fragments.CaoDetailFragment this$0 -> a
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.CaoDetailFragment$4 -> com.sundy.pkcao.b.n:
    java.lang.String val$video_url -> a
    com.sundy.pkcao.fragments.CaoDetailFragment this$0 -> b
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.CaoDetailFragment$5 -> com.sundy.pkcao.b.o:
    java.util.ArrayList val$images -> a
    int val$finalI -> b
    com.sundy.pkcao.fragments.CaoDetailFragment this$0 -> c
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.CaoDetailFragment$6 -> com.sundy.pkcao.b.p:
    android.app.Dialog val$dialog -> a
    com.sundy.pkcao.fragments.CaoDetailFragment this$0 -> b
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.CaoDetailFragment$7 -> com.sundy.pkcao.b.q:
    android.app.Dialog val$dialog -> a
    com.sundy.pkcao.fragments.CaoDetailFragment this$0 -> b
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.CaoDetailFragment$8 -> com.sundy.pkcao.b.r:
    com.sundy.pkcao.fragments.CaoDetailFragment this$0 -> a
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.CaoDetailFragment$9 -> com.sundy.pkcao.b.s:
    com.sundy.pkcao.fragments.CaoDetailFragment this$0 -> a
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.CaoDetailFragment$MyBroadcastReceiver -> com.sundy.pkcao.b.t:
    com.sundy.pkcao.fragments.CaoDetailFragment this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.sundy.pkcao.fragments.EditUserFragment -> com.sundy.pkcao.b.u:
    java.lang.String TAG -> T
    android.view.View v -> U
    android.graphics.Bitmap bitmap -> V
    java.lang.String photoPath -> W
    android.content.SharedPreferences preferences -> X
    java.lang.String username -> Y
    java.lang.String user_img -> Z
    com.sundy.pkcao.tools.ProgressWheel progressbar -> aa
    android.widget.TextView txt_problem -> ab
    android.view.View$OnClickListener onClick -> ac
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> w
    void showPhotoChooseDialog() -> x
    void onActivityResult(int,int,android.content.Intent) -> a
    void updateUserPhoto() -> y
    void editUser() -> z
    void clearUserInfo() -> A
    void login(java.lang.String,java.lang.String) -> b
    void saveUserInfo(com.avos.avoscloud.AVObject) -> a
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
    void access$000(com.sundy.pkcao.fragments.EditUserFragment) -> a
    void access$100(com.sundy.pkcao.fragments.EditUserFragment) -> b
    com.sundy.pkcao.tools.ProgressWheel access$200(com.sundy.pkcao.fragments.EditUserFragment) -> c
    android.graphics.Bitmap access$300(com.sundy.pkcao.fragments.EditUserFragment) -> d
    java.lang.String access$400(com.sundy.pkcao.fragments.EditUserFragment) -> e
    java.lang.String access$500(com.sundy.pkcao.fragments.EditUserFragment) -> f
    void access$600(com.sundy.pkcao.fragments.EditUserFragment,java.lang.String,java.lang.String) -> a
    void access$700(com.sundy.pkcao.fragments.EditUserFragment) -> g
    void access$800(com.sundy.pkcao.fragments.EditUserFragment,com.avos.avoscloud.AVObject) -> a
com.sundy.pkcao.fragments.EditUserFragment$1 -> com.sundy.pkcao.b.v:
    com.sundy.pkcao.fragments.EditUserFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.EditUserFragment$2 -> com.sundy.pkcao.b.w:
    com.sundy.pkcao.fragments.EditUserFragment this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sundy.pkcao.fragments.EditUserFragment$3 -> com.sundy.pkcao.b.x:
    com.sundy.pkcao.fragments.EditUserFragment this$0 -> a
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.EditUserFragment$4 -> com.sundy.pkcao.b.y:
    java.lang.String val$password_old -> a
    java.lang.String val$password_new -> b
    com.sundy.pkcao.fragments.EditUserFragment this$0 -> c
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.EditUserFragment$4$1 -> com.sundy.pkcao.b.z:
    com.sundy.pkcao.fragments.EditUserFragment$4 this$1 -> a
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.EditUserFragment$5 -> com.sundy.pkcao.b.aa:
    com.sundy.pkcao.fragments.EditUserFragment this$0 -> a
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.ILikeFragment -> com.sundy.pkcao.b.ab:
    java.lang.String TAG -> T
    android.support.v4.app.Fragment fragment -> U
    android.view.View v -> V
    com.sundy.pkcao.tools.xlistview.XListView lv_ilike -> W
    com.sundy.pkcao.adapters.CaoListAdapter adapter -> X
    java.util.List list -> Y
    int curPage -> Z
    int pageNum -> aa
    boolean ishasMore -> ab
    boolean isRefreshing -> ac
    java.lang.String last_updated_time -> ad
    com.sundy.pkcao.tools.ProgressWheel progressbar -> ae
    com.avos.avoscloud.AVQuery caodian_query -> af
    android.content.SharedPreferences sharedPreferences -> ag
    java.lang.String user_id -> ah
    com.sundy.pkcao.tools.xlistview.XListView$IXListViewListener ixListViewListener -> ai
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> aj
    android.view.View$OnClickListener onClick -> ak
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> w
    void onLoad() -> x
    void getCaodianIlike() -> y
    void refreshUserInfo() -> z
    void getUserInfo() -> A
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
    boolean access$002(com.sundy.pkcao.fragments.ILikeFragment,boolean) -> a
    boolean access$100(com.sundy.pkcao.fragments.ILikeFragment) -> a
    java.util.List access$200(com.sundy.pkcao.fragments.ILikeFragment) -> b
    com.sundy.pkcao.adapters.CaoListAdapter access$300(com.sundy.pkcao.fragments.ILikeFragment) -> c
    com.sundy.pkcao.tools.xlistview.XListView access$400(com.sundy.pkcao.fragments.ILikeFragment) -> d
    int access$502(com.sundy.pkcao.fragments.ILikeFragment,int) -> a
    java.lang.String access$602(com.sundy.pkcao.fragments.ILikeFragment,java.lang.String) -> a
    void access$700(com.sundy.pkcao.fragments.ILikeFragment) -> e
    void access$800(com.sundy.pkcao.fragments.ILikeFragment) -> f
    boolean access$102(com.sundy.pkcao.fragments.ILikeFragment,boolean) -> b
    boolean access$000(com.sundy.pkcao.fragments.ILikeFragment) -> g
    int access$900(com.sundy.pkcao.fragments.ILikeFragment) -> h
    int access$500(com.sundy.pkcao.fragments.ILikeFragment) -> i
    int access$508(com.sundy.pkcao.fragments.ILikeFragment) -> j
    com.sundy.pkcao.tools.ProgressWheel access$1000(com.sundy.pkcao.fragments.ILikeFragment) -> k
    java.lang.String access$1102(com.sundy.pkcao.fragments.ILikeFragment,java.lang.String) -> b
    android.content.SharedPreferences access$1200(com.sundy.pkcao.fragments.ILikeFragment) -> l
    java.lang.String access$1100(com.sundy.pkcao.fragments.ILikeFragment) -> m
com.sundy.pkcao.fragments.ILikeFragment$1 -> com.sundy.pkcao.b.ac:
    com.sundy.pkcao.fragments.ILikeFragment this$0 -> a
    void onRefresh() -> b
    void onLoadMore() -> c
com.sundy.pkcao.fragments.ILikeFragment$2 -> com.sundy.pkcao.b.ad:
    com.sundy.pkcao.fragments.ILikeFragment this$0 -> a
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.ILikeFragment$3 -> com.sundy.pkcao.b.ae:
    com.sundy.pkcao.fragments.ILikeFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.sundy.pkcao.fragments.ILikeFragment$4 -> com.sundy.pkcao.b.af:
    com.sundy.pkcao.fragments.ILikeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.LoginFragment -> com.sundy.pkcao.b.ag:
    java.lang.String TAG -> T
    android.view.View v -> U
    java.lang.String username -> V
    com.sundy.pkcao.tools.ProgressWheel progressbar -> W
    android.view.View$OnClickListener onClick -> X
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> w
    void login() -> x
    void saveUserInfo(com.avos.avoscloud.AVObject) -> a
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
    void access$000(com.sundy.pkcao.fragments.LoginFragment) -> a
    com.sundy.pkcao.tools.ProgressWheel access$100(com.sundy.pkcao.fragments.LoginFragment) -> b
    void access$200(com.sundy.pkcao.fragments.LoginFragment,com.avos.avoscloud.AVObject) -> a
com.sundy.pkcao.fragments.LoginFragment$1 -> com.sundy.pkcao.b.ah:
    com.sundy.pkcao.fragments.LoginFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.LoginFragment$2 -> com.sundy.pkcao.b.ai:
    android.widget.TextView val$txt_login_problem -> a
    com.sundy.pkcao.fragments.LoginFragment this$0 -> b
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.MainFragment -> com.sundy.pkcao.b.aj:
    java.lang.String TAG -> T
    android.support.v4.app.Fragment fragment -> U
    android.view.View v -> V
    com.sundy.pkcao.tools.xlistview.XListView lv_main -> W
    com.sundy.pkcao.adapters.CaoListAdapter adapter -> X
    java.util.List list -> Y
    int curPage -> Z
    int pageNum -> aa
    boolean ishasMore -> ab
    boolean isRefreshing -> ac
    java.lang.String last_updated_time -> ad
    com.sundy.pkcao.tools.ProgressWheel progressbar -> ae
    com.avos.avoscloud.AVQuery caodian_query -> af
    android.content.SharedPreferences sharedPreferences -> ag
    java.lang.String user_id -> ah
    java.lang.String currentType -> ai
    int HIDDEN -> aj
    int SHOW -> ak
    android.widget.LinearLayout linear_main_bottom -> al
    com.sundy.pkcao.tools.xlistview.XListView$IXListViewListener ixListViewListener -> am
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> an
    android.view.View$OnClickListener onClick -> ao
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> w
    void onLoad() -> x
    void getCaodians() -> y
    void refreshUserInfo() -> z
    void getUserInfo() -> A
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
    boolean access$002(com.sundy.pkcao.fragments.MainFragment,boolean) -> a
    boolean access$100(com.sundy.pkcao.fragments.MainFragment) -> a
    java.util.List access$200(com.sundy.pkcao.fragments.MainFragment) -> b
    com.sundy.pkcao.adapters.CaoListAdapter access$300(com.sundy.pkcao.fragments.MainFragment) -> c
    com.sundy.pkcao.tools.xlistview.XListView access$400(com.sundy.pkcao.fragments.MainFragment) -> d
    int access$502(com.sundy.pkcao.fragments.MainFragment,int) -> a
    java.lang.String access$602(com.sundy.pkcao.fragments.MainFragment,java.lang.String) -> a
    com.avos.avoscloud.AVQuery access$700(com.sundy.pkcao.fragments.MainFragment) -> e
    com.avos.avoscloud.AVQuery access$702(com.sundy.pkcao.fragments.MainFragment,com.avos.avoscloud.AVQuery) -> a
    java.lang.String access$800(com.sundy.pkcao.fragments.MainFragment) -> f
    java.lang.String access$902(com.sundy.pkcao.fragments.MainFragment,java.lang.String) -> b
    android.content.SharedPreferences access$1000(com.sundy.pkcao.fragments.MainFragment) -> g
    java.lang.String access$900(com.sundy.pkcao.fragments.MainFragment) -> h
    void access$1100(com.sundy.pkcao.fragments.MainFragment) -> i
    void access$1200(com.sundy.pkcao.fragments.MainFragment) -> j
    boolean access$102(com.sundy.pkcao.fragments.MainFragment,boolean) -> b
    boolean access$000(com.sundy.pkcao.fragments.MainFragment) -> k
    int access$1300(com.sundy.pkcao.fragments.MainFragment) -> l
    int access$500(com.sundy.pkcao.fragments.MainFragment) -> m
    int access$508(com.sundy.pkcao.fragments.MainFragment) -> n
    com.sundy.pkcao.tools.ProgressWheel access$1400(com.sundy.pkcao.fragments.MainFragment) -> o
    java.lang.String access$802(com.sundy.pkcao.fragments.MainFragment,java.lang.String) -> c
com.sundy.pkcao.fragments.MainFragment$1 -> com.sundy.pkcao.b.ak:
    com.sundy.pkcao.fragments.MainFragment this$0 -> a
    void onRefresh() -> b
    void onLoadMore() -> c
com.sundy.pkcao.fragments.MainFragment$2 -> com.sundy.pkcao.b.al:
    com.sundy.pkcao.fragments.MainFragment this$0 -> a
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.MainFragment$3 -> com.sundy.pkcao.b.am:
    com.sundy.pkcao.fragments.MainFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.sundy.pkcao.fragments.MainFragment$4 -> com.sundy.pkcao.b.an:
    com.sundy.pkcao.fragments.MainFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.MenuFragment -> com.sundy.pkcao.b.ao:
    java.lang.String TAG -> S
    com.androidquery.AQuery aq -> T
    android.view.LayoutInflater layoutinflater -> U
    android.view.View v -> V
    com.sundy.pkcao.fragments.MenuFragment$OnListListener mCallback -> W
    com.sundy.pkcao.fragments.MenuFragment$OnListListener MenuCallBack -> P
    android.support.v4.app.FragmentActivity context -> Q
    int curRadioId -> R
    com.sundy.pkcao.fragments._AbstractFragment main -> X
    com.sundy.pkcao.fragments._AbstractFragment i_like -> Y
    com.sundy.pkcao.fragments._AbstractFragment ta_like -> Z
    com.sundy.pkcao.fragments._AbstractFragment record -> aa
    android.content.SharedPreferences preferences -> ab
    android.view.View$OnClickListener onClickListener -> ac
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> w
    void refreshUserInfo() -> x
    void getUserInfo() -> y
    void hideUserInfo() -> z
    void showUserInfo(com.avos.avoscloud.AVObject) -> a
    android.support.v4.app.Fragment getFragmentItem(int) -> b
    void logout() -> A
    void saveUserInfo(com.avos.avoscloud.AVObject) -> b
    void clearUserInfo() -> B
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
    void onClick(android.view.View) -> onClick
    void rtLog(java.lang.String,java.lang.String) -> a
    com.sundy.pkcao.fragments.MenuFragment$OnListListener access$000(com.sundy.pkcao.fragments.MenuFragment) -> a
    android.support.v4.app.Fragment access$100(com.sundy.pkcao.fragments.MenuFragment,int) -> a
    void access$200(com.sundy.pkcao.fragments.MenuFragment) -> b
    void access$300(com.sundy.pkcao.fragments.MenuFragment) -> c
    com.sundy.pkcao.fragments._AbstractFragment access$402(com.sundy.pkcao.fragments.MenuFragment,com.sundy.pkcao.fragments._AbstractFragment) -> a
    com.sundy.pkcao.fragments._AbstractFragment access$400(com.sundy.pkcao.fragments.MenuFragment) -> d
com.sundy.pkcao.fragments.MenuFragment$1 -> com.sundy.pkcao.b.ap:
    com.sundy.pkcao.fragments.MenuFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.MenuFragment$2 -> com.sundy.pkcao.b.aq:
    com.sundy.pkcao.fragments.MenuFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.MenuFragment$3 -> com.sundy.pkcao.b.ar:
    com.sundy.pkcao.fragments.MenuFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.MenuFragment$4 -> com.sundy.pkcao.b.as:
    com.sundy.pkcao.fragments.MenuFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.MenuFragment$5 -> com.sundy.pkcao.b.at:
    android.app.Dialog val$dialog -> a
    com.sundy.pkcao.fragments.MenuFragment this$0 -> b
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.MenuFragment$6 -> com.sundy.pkcao.b.au:
    android.app.Dialog val$dialog -> a
    com.sundy.pkcao.fragments.MenuFragment this$0 -> b
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.MenuFragment$OnListListener -> com.sundy.pkcao.b.av:
    void switchContent(android.support.v4.app.Fragment) -> b
    void addContent(android.support.v4.app.Fragment) -> c
    void showSlidingMenu() -> g
com.sundy.pkcao.fragments.RecordFragment -> com.sundy.pkcao.b.aw:
    java.lang.String TAG -> T
    android.support.v4.app.Fragment fragment -> U
    android.view.View v -> V
    android.view.View$OnClickListener onClick -> W
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> w
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
com.sundy.pkcao.fragments.RecordFragment$1 -> com.sundy.pkcao.b.ax:
    com.sundy.pkcao.fragments.RecordFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.RegisterFragment -> com.sundy.pkcao.b.ay:
    java.lang.String TAG -> T
    android.view.View v -> U
    android.graphics.Bitmap bitmap -> V
    java.lang.String photoPath -> W
    java.lang.String username -> X
    com.sundy.pkcao.tools.ProgressWheel progressbar -> Y
    android.widget.CheckBox checkBox -> Z
    android.widget.TextView txt_login_problem -> aa
    android.view.View$OnClickListener onClick -> ab
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> w
    void onActivityResult(int,int,android.content.Intent) -> a
    void registerUser() -> x
    void login(java.lang.String,java.lang.String) -> b
    void saveUserInfo(com.avos.avoscloud.AVObject) -> a
    void showTermDialog() -> y
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
    void access$000(com.sundy.pkcao.fragments.RegisterFragment) -> a
    void access$100(com.sundy.pkcao.fragments.RegisterFragment) -> b
    com.sundy.pkcao.tools.ProgressWheel access$200(com.sundy.pkcao.fragments.RegisterFragment) -> c
    java.lang.String access$300(com.sundy.pkcao.fragments.RegisterFragment) -> d
    void access$400(com.sundy.pkcao.fragments.RegisterFragment,java.lang.String,java.lang.String) -> a
    android.widget.TextView access$500(com.sundy.pkcao.fragments.RegisterFragment) -> e
    void access$600(com.sundy.pkcao.fragments.RegisterFragment,com.avos.avoscloud.AVObject) -> a
com.sundy.pkcao.fragments.RegisterFragment$1 -> com.sundy.pkcao.b.az:
    com.sundy.pkcao.fragments.RegisterFragment this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.sundy.pkcao.fragments.RegisterFragment$2 -> com.sundy.pkcao.b.ba:
    com.sundy.pkcao.fragments.RegisterFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.RegisterFragment$2$1 -> com.sundy.pkcao.b.bb:
    com.sundy.pkcao.fragments.RegisterFragment$2 this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.sundy.pkcao.fragments.RegisterFragment$3 -> com.sundy.pkcao.b.bc:
    java.lang.String val$password -> a
    com.sundy.pkcao.fragments.RegisterFragment this$0 -> b
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.RegisterFragment$4 -> com.sundy.pkcao.b.bd:
    com.sundy.pkcao.fragments.RegisterFragment this$0 -> a
    void done(com.avos.avoscloud.AVUser,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.RegisterFragment$5 -> com.sundy.pkcao.b.be:
    android.app.Dialog val$dialog -> a
    com.sundy.pkcao.fragments.RegisterFragment this$0 -> b
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments.TaLikeFragment -> com.sundy.pkcao.b.bf:
    java.lang.String TAG -> T
    android.support.v4.app.Fragment fragment -> U
    android.view.View v -> V
    com.sundy.pkcao.tools.xlistview.XListView lv_talike -> W
    com.sundy.pkcao.adapters.CaoListAdapter adapter -> X
    java.util.List list -> Y
    int curPage -> Z
    int pageNum -> aa
    boolean ishasMore -> ab
    boolean isRefreshing -> ac
    java.lang.String last_updated_time -> ad
    com.sundy.pkcao.tools.ProgressWheel progressbar -> ae
    com.avos.avoscloud.AVQuery caodian_query -> af
    android.content.SharedPreferences sharedPreferences -> ag
    java.lang.String user_id -> ah
    com.sundy.pkcao.tools.xlistview.XListView$IXListViewListener ixListViewListener -> ai
    android.os.Handler handler -> aj
    android.widget.AdapterView$OnItemClickListener onItemClickListener -> ak
    android.view.View$OnClickListener onClick -> al
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void init() -> w
    void onLoad() -> x
    void getCaodianTalike() -> y
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
    boolean access$000(com.sundy.pkcao.fragments.TaLikeFragment) -> a
    boolean access$102(com.sundy.pkcao.fragments.TaLikeFragment,boolean) -> a
    java.util.List access$200(com.sundy.pkcao.fragments.TaLikeFragment) -> b
    com.sundy.pkcao.adapters.CaoListAdapter access$300(com.sundy.pkcao.fragments.TaLikeFragment) -> c
    com.sundy.pkcao.tools.xlistview.XListView access$400(com.sundy.pkcao.fragments.TaLikeFragment) -> d
    int access$502(com.sundy.pkcao.fragments.TaLikeFragment,int) -> a
    java.lang.String access$602(com.sundy.pkcao.fragments.TaLikeFragment,java.lang.String) -> a
    void access$700(com.sundy.pkcao.fragments.TaLikeFragment) -> e
    void access$800(com.sundy.pkcao.fragments.TaLikeFragment) -> f
    boolean access$002(com.sundy.pkcao.fragments.TaLikeFragment,boolean) -> b
    boolean access$100(com.sundy.pkcao.fragments.TaLikeFragment) -> g
    int access$900(com.sundy.pkcao.fragments.TaLikeFragment) -> h
    int access$500(com.sundy.pkcao.fragments.TaLikeFragment) -> i
    int access$508(com.sundy.pkcao.fragments.TaLikeFragment) -> j
    com.sundy.pkcao.tools.ProgressWheel access$1000(com.sundy.pkcao.fragments.TaLikeFragment) -> k
    java.lang.String access$1100(com.sundy.pkcao.fragments.TaLikeFragment) -> l
    android.os.Handler access$1200(com.sundy.pkcao.fragments.TaLikeFragment) -> m
    android.content.SharedPreferences access$1300(com.sundy.pkcao.fragments.TaLikeFragment) -> n
com.sundy.pkcao.fragments.TaLikeFragment$1 -> com.sundy.pkcao.b.bg:
    com.sundy.pkcao.fragments.TaLikeFragment this$0 -> a
    void onRefresh() -> b
    void onLoadMore() -> c
com.sundy.pkcao.fragments.TaLikeFragment$2 -> com.sundy.pkcao.b.bh:
    com.sundy.pkcao.fragments.TaLikeFragment this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.sundy.pkcao.fragments.TaLikeFragment$2$1 -> com.sundy.pkcao.b.bi:
    com.sundy.pkcao.fragments.TaLikeFragment$2 this$1 -> a
    void run() -> run
com.sundy.pkcao.fragments.TaLikeFragment$3 -> com.sundy.pkcao.b.bj:
    com.sundy.pkcao.fragments.TaLikeFragment this$0 -> a
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.TaLikeFragment$3$1 -> com.sundy.pkcao.b.bk:
    com.avos.avoscloud.AVObject val$caodian -> a
    com.sundy.pkcao.fragments.TaLikeFragment$3 this$1 -> b
    void done(java.util.List,com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.fragments.TaLikeFragment$4 -> com.sundy.pkcao.b.bl:
    com.sundy.pkcao.fragments.TaLikeFragment this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.sundy.pkcao.fragments.TaLikeFragment$5 -> com.sundy.pkcao.b.bm:
    com.sundy.pkcao.fragments.TaLikeFragment this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.fragments._AbstractFragment -> com.sundy.pkcao.b.bn:
    java.lang.String TAG -> T
    com.sundy.pkcao.fragments._AbstractFragment$OnListListener mCallback -> P
    android.support.v4.app.FragmentActivity context -> Q
    com.androidquery.AQuery aq -> R
    android.view.LayoutInflater inflater -> S
    void onAttach(android.app.Activity) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onResume() -> f
    void onPause() -> g
    void onStop() -> h
    void onDestroyView() -> i
    void onDestroy() -> j
    void onDetach() -> l
    void onClick(android.view.View) -> onClick
    void showProgress(com.sundy.pkcao.tools.ProgressWheel) -> a
    void stopProgress(com.sundy.pkcao.tools.ProgressWheel) -> b
    void rtLog(java.lang.String,java.lang.String) -> a
com.sundy.pkcao.fragments._AbstractFragment$OnListListener -> com.sundy.pkcao.b.bo:
    void switchContent(android.support.v4.app.Fragment) -> b
    void addContent(android.support.v4.app.Fragment) -> c
    void showSlidingMenu() -> g
    void onBack() -> h
com.sundy.pkcao.service.AddCaodianService -> com.sundy.pkcao.service.AddCaodianService:
    android.app.NotificationManager notificationManager -> a
    android.app.Notification notification -> b
    java.lang.String title -> c
    java.lang.String content -> d
    java.lang.String user_id -> e
    java.lang.String caodian_id -> f
    java.lang.String videoPath -> g
    java.util.ArrayList photoList -> h
    java.lang.String video_thumbnail_path -> i
    int UPLOAD_FILE -> j
    android.os.Handler mHandler -> k
    void uploadCaodian() -> a
    void onCreate() -> onCreate
    void init() -> b
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    void onHandleIntent(android.content.Intent) -> onHandleIntent
    void onDestroy() -> onDestroy
    void access$000(com.sundy.pkcao.service.AddCaodianService) -> a
    android.app.NotificationManager access$100(com.sundy.pkcao.service.AddCaodianService) -> b
    java.lang.String access$200(com.sundy.pkcao.service.AddCaodianService) -> c
    java.util.ArrayList access$300(com.sundy.pkcao.service.AddCaodianService) -> d
    android.app.Notification access$400(com.sundy.pkcao.service.AddCaodianService) -> e
    java.lang.String access$500(com.sundy.pkcao.service.AddCaodianService) -> f
com.sundy.pkcao.service.AddCaodianService$1 -> com.sundy.pkcao.service.a:
    com.sundy.pkcao.service.AddCaodianService this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.sundy.pkcao.service.AddCaodianService$2 -> com.sundy.pkcao.service.b:
    java.text.SimpleDateFormat val$sdf -> a
    java.util.Date val$date -> b
    com.avos.avoscloud.AVObject val$caodian -> c
    com.sundy.pkcao.service.AddCaodianService this$0 -> d
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.service.AddCaodianService$2$1 -> com.sundy.pkcao.service.c:
    com.avos.avoscloud.AVFile val$video_thumbnail -> a
    com.sundy.pkcao.service.AddCaodianService$2 this$1 -> b
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.service.AddCaodianService$2$1$1 -> com.sundy.pkcao.service.d:
    com.sundy.pkcao.service.AddCaodianService$2$1 this$2 -> a
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.service.AddCaodianService$2$1$2 -> com.sundy.pkcao.service.e:
    com.sundy.pkcao.service.AddCaodianService$2$1 this$2 -> a
    void done(java.lang.Integer) -> done
com.sundy.pkcao.service.AddCaodianService$2$2 -> com.sundy.pkcao.service.f:
    com.sundy.pkcao.service.AddCaodianService$2 this$1 -> a
    void done(java.lang.Integer) -> done
com.sundy.pkcao.service.AddCaodianService$3 -> com.sundy.pkcao.service.g:
    com.sundy.pkcao.service.AddCaodianService this$0 -> a
    void done(java.lang.Integer) -> done
com.sundy.pkcao.service.AddCaodianService$4 -> com.sundy.pkcao.service.h:
    com.sundy.pkcao.service.AddCaodianService this$0 -> a
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.service.AddCaodianService$5 -> com.sundy.pkcao.service.i:
    com.sundy.pkcao.service.AddCaodianService this$0 -> a
    void done(java.lang.Integer) -> done
com.sundy.pkcao.service.AddCaodianService$6 -> com.sundy.pkcao.service.j:
    com.sundy.pkcao.service.AddCaodianService this$0 -> a
    void done(com.avos.avoscloud.AVException) -> done
com.sundy.pkcao.service.CacheService -> com.sundy.pkcao.service.k:
    java.util.Map cachedConvs -> a
    java.util.Map cachedUsers -> b
    java.util.List friendIds -> c
    com.avos.avoscloud.im.v2.AVIMConversation lookupConv(java.lang.String) -> a
com.sundy.pkcao.taker.CommonUtility -> com.sundy.pkcao.c.a:
    java.lang.String TAG -> e
    java.lang.String APP_NAME -> a
    int SCREEN_WIDTH -> b
    int SCREEN_HEIGHT -> c
    float SCREEN_DENSITY -> d
    java.lang.String formatDate2String(java.util.Date) -> a
    boolean isLogin(android.app.Activity) -> a
    android.graphics.Bitmap compressImageFromFile(java.lang.String) -> a
    int getRotate(java.lang.String) -> b
    java.lang.String getImagePath3(android.app.Activity,android.net.Uri) -> a
    java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[]) -> a
    boolean isExternalStorageDocument(android.net.Uri) -> a
    boolean isDownloadsDocument(android.net.Uri) -> b
    boolean isMediaDocument(android.net.Uri) -> c
    boolean isGooglePhotosUri(android.net.Uri) -> d
    android.graphics.Bitmap getVideoThumbnail(java.lang.String,int,int,int) -> a
    java.lang.String getLastUpdatedTime() -> a
    java.lang.String saveThumbnail(android.graphics.Bitmap) -> a
    java.lang.String savePhoto(android.graphics.Bitmap) -> b
    android.graphics.Bitmap compressBitmap(java.lang.String,android.graphics.Bitmap) -> a
    boolean isLargeImage(java.lang.String,android.graphics.Bitmap) -> b
    void showShare(android.content.Context,java.util.HashMap) -> a
    void startBaiduPush(android.app.Activity) -> b
    long getFileSize(java.lang.String) -> c
com.sundy.pkcao.taker.ResourceTaker -> com.sundy.pkcao.c.b:
    boolean isDebug -> a
com.sundy.pkcao.tools.BitmapUtil -> com.sundy.pkcao.tools.a:
    android.graphics.Bitmap getImage(java.lang.String) -> a
    com.sundy.pkcao.tools.BitmapUtil$Size getImageSize(java.lang.String) -> b
    android.graphics.Bitmap blur(android.graphics.Bitmap) -> a
    void blur(int[],int[],int,int,int) -> a
    int clamp(int,int,int) -> a
com.sundy.pkcao.tools.BitmapUtil$Size -> com.sundy.pkcao.tools.b:
    int width -> a
    int height -> b
com.sundy.pkcao.tools.CircleImageView -> com.sundy.pkcao.tools.CircleImageView:
    android.widget.ImageView$ScaleType SCALE_TYPE -> a
    android.graphics.Bitmap$Config BITMAP_CONFIG -> b
    android.graphics.RectF mDrawableRect -> c
    android.graphics.RectF mBorderRect -> d
    android.graphics.Matrix mShaderMatrix -> e
    android.graphics.Paint mBitmapPaint -> f
    android.graphics.Paint mBorderPaint -> g
    int mBorderColor -> h
    int mBorderWidth -> i
    android.graphics.Bitmap mBitmap -> j
    android.graphics.BitmapShader mBitmapShader -> k
    int mBitmapWidth -> l
    int mBitmapHeight -> m
    float mDrawableRadius -> n
    float mBorderRadius -> o
    boolean mReady -> p
    boolean mSetupPending -> q
    android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    int getBorderColor() -> getBorderColor
    void setBorderColor(int) -> setBorderColor
    int getBorderWidth() -> getBorderWidth
    void setBorderWidth(int) -> setBorderWidth
    void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    void setImageResource(int) -> setImageResource
    android.graphics.Bitmap getBitmapFromDrawable(android.graphics.drawable.Drawable) -> a
    void setup() -> a
    void updateShaderMatrix() -> b
com.sundy.pkcao.tools.DensityUtil -> com.sundy.pkcao.tools.c:
    int px2dip(android.content.Context,float) -> a
com.sundy.pkcao.tools.EmotionEditText -> com.sundy.pkcao.tools.EmotionEditText:
    void setText(java.lang.CharSequence,android.widget.TextView$BufferType) -> setText
com.sundy.pkcao.tools.MosaicView -> com.sundy.pkcao.tools.MosaicView:
    int mImageWidth -> a
    int mImageHeight -> b
    android.graphics.Bitmap bmBaseLayer -> c
    android.graphics.Bitmap bmCoverLayer -> d
    android.graphics.Bitmap bmMosaicLayer -> e
    android.graphics.Point startPoint -> f
    int mGridWidth -> g
    int mPathWidth -> h
    int mStrokeWidth -> i
    int mStrokeColor -> j
    java.lang.String inPath -> k
    java.lang.String outPath -> l
    com.sundy.pkcao.tools.MosaicView$Effect mEffect -> m
    com.sundy.pkcao.tools.MosaicView$Mode mMode -> n
    android.graphics.Rect mImageRect -> o
    android.graphics.Paint mPaint -> p
    android.graphics.Rect mTouchRect -> q
    java.util.List mTouchRects -> r
    android.graphics.Path mTouchPath -> s
    java.util.List mEraseRects -> t
    int mMosaicColor -> u
    int mPadding -> v
    java.util.List mTouchPaths -> w
    java.util.List mErasePaths -> x
    boolean mMosaic -> y
    void initImage() -> d
    void setSrcPath(java.lang.String) -> setSrcPath
    void setEffect(com.sundy.pkcao.tools.MosaicView$Effect) -> setEffect
    void setMode(com.sundy.pkcao.tools.MosaicView$Mode) -> setMode
    android.graphics.Bitmap getCoverLayer() -> getCoverLayer
    android.graphics.Bitmap getColorMosaic() -> getColorMosaic
    android.graphics.Bitmap getBlurMosaic() -> getBlurMosaic
    android.graphics.Bitmap getGridMosaic() -> getGridMosaic
    void setOutPath(java.lang.String) -> setOutPath
    void setGridWidth(int) -> setGridWidth
    void setPathWidth(int) -> setPathWidth
    int getGridWidth() -> getGridWidth
    void setStrokeColor(int) -> setStrokeColor
    void setMosaicColor(int) -> setMosaicColor
    int getStrokeColor() -> getStrokeColor
    void setStrokeWidth(int) -> setStrokeWidth
    int getStrokeWidth() -> getStrokeWidth
    void setErase(boolean) -> setErase
    void clear() -> a
    boolean reset() -> b
    java.lang.String save() -> c
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    void onGridEvent(int,int,int) -> a
    void onPathEvent(int,int,int) -> b
    void updatePathMosaic() -> e
    void updateGridMosaic() -> f
    void onDraw(android.graphics.Canvas) -> onDraw
    void onLayout(boolean,int,int,int,int) -> onLayout
    int dp2px(int) -> a
com.sundy.pkcao.tools.MosaicView$Effect -> com.sundy.pkcao.tools.d:
    com.sundy.pkcao.tools.MosaicView$Effect GRID -> a
    com.sundy.pkcao.tools.MosaicView$Effect COLOR -> b
    com.sundy.pkcao.tools.MosaicView$Effect BLUR -> c
    com.sundy.pkcao.tools.MosaicView$Effect[] $VALUES -> d
    com.sundy.pkcao.tools.MosaicView$Effect[] values() -> values
    com.sundy.pkcao.tools.MosaicView$Effect valueOf(java.lang.String) -> valueOf
com.sundy.pkcao.tools.MosaicView$Mode -> com.sundy.pkcao.tools.e:
    com.sundy.pkcao.tools.MosaicView$Mode GRID -> a
    com.sundy.pkcao.tools.MosaicView$Mode PATH -> b
    com.sundy.pkcao.tools.MosaicView$Mode[] $VALUES -> c
    com.sundy.pkcao.tools.MosaicView$Mode[] values() -> values
    com.sundy.pkcao.tools.MosaicView$Mode valueOf(java.lang.String) -> valueOf
com.sundy.pkcao.tools.OperationFileHelper -> com.sundy.pkcao.tools.f:
    void RecursionDeleteFile(java.io.File) -> a
com.sundy.pkcao.tools.ProgressWheel -> com.sundy.pkcao.tools.ProgressWheel:
    int layout_height -> c
    int layout_width -> d
    int fullRadius -> e
    int circleRadius -> f
    int barLength -> g
    int barWidth -> h
    int rimWidth -> i
    int textSize -> j
    float contourSize -> k
    int paddingTop -> l
    int paddingBottom -> m
    int paddingLeft -> n
    int paddingRight -> o
    int barColor -> p
    int contourColor -> q
    int circleColor -> r
    int rimColor -> s
    int textColor -> t
    android.graphics.Paint barPaint -> u
    android.graphics.Paint circlePaint -> v
    android.graphics.Paint rimPaint -> w
    android.graphics.Paint textPaint -> x
    android.graphics.Paint contourPaint -> y
    android.graphics.RectF rectBounds -> z
    android.graphics.RectF circleBounds -> A
    android.graphics.RectF circleOuterContour -> B
    android.graphics.RectF circleInnerContour -> C
    int spinSpeed -> D
    int delayMillis -> E
    int progress -> a
    boolean isSpinning -> b
    java.lang.String text -> F
    java.lang.String[] splitText -> G
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setupPaints() -> c
    void setupBounds() -> d
    void parseAttributes(android.content.res.TypedArray) -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    void scheduleRedraw() -> e
    void stopSpinning() -> a
    void spin() -> b
    void setProgress(int) -> setProgress
    void setText(java.lang.String) -> setText
    int getCircleRadius() -> getCircleRadius
    void setCircleRadius(int) -> setCircleRadius
    int getBarLength() -> getBarLength
    void setBarLength(int) -> setBarLength
    int getBarWidth() -> getBarWidth
    void setBarWidth(int) -> setBarWidth
    int getTextSize() -> getTextSize
    void setTextSize(int) -> setTextSize
    int getPaddingTop() -> getPaddingTop
    void setPaddingTop(int) -> setPaddingTop
    int getPaddingBottom() -> getPaddingBottom
    void setPaddingBottom(int) -> setPaddingBottom
    int getPaddingLeft() -> getPaddingLeft
    void setPaddingLeft(int) -> setPaddingLeft
    int getPaddingRight() -> getPaddingRight
    void setPaddingRight(int) -> setPaddingRight
    int getBarColor() -> getBarColor
    void setBarColor(int) -> setBarColor
    int getCircleColor() -> getCircleColor
    void setCircleColor(int) -> setCircleColor
    int getRimColor() -> getRimColor
    void setRimColor(int) -> setRimColor
    android.graphics.Shader getRimShader() -> getRimShader
    void setRimShader(android.graphics.Shader) -> setRimShader
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    int getSpinSpeed() -> getSpinSpeed
    void setSpinSpeed(int) -> setSpinSpeed
    int getRimWidth() -> getRimWidth
    void setRimWidth(int) -> setRimWidth
    int getDelayMillis() -> getDelayMillis
    void setDelayMillis(int) -> setDelayMillis
    int getContourColor() -> getContourColor
    void setContourColor(int) -> setContourColor
    float getContourSize() -> getContourSize
    void setContourSize(float) -> setContourSize
com.sundy.pkcao.tools.RecordButton -> com.sundy.pkcao.tools.RecordButton:
    int[] recordImageIds -> a
    android.widget.TextView textView -> b
    java.lang.String outputPath -> c
    com.sundy.pkcao.tools.RecordButton$RecordEventListener recordEventListener -> d
    long startTime -> e
    android.app.Dialog recordIndicator -> f
    android.view.View view -> g
    android.media.MediaRecorder recorder -> h
    com.sundy.pkcao.tools.RecordButton$ObtainDecibelThread thread -> i
    android.os.Handler volumeHandler -> j
    android.widget.ImageView imageView -> k
    int status -> l
    android.content.DialogInterface$OnDismissListener onDismiss -> m
    void setSavePath(java.lang.String) -> setSavePath
    void setRecordEventListener(com.sundy.pkcao.tools.RecordButton$RecordEventListener) -> setRecordEventListener
    void init() -> b
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    int getColor(int) -> a
    void setTextViewByStatus() -> c
    void startRecord() -> d
    void initRecordDialog() -> e
    void finishRecord() -> f
    void cancelRecord() -> g
    void startRecording() -> h
    void stopRecording() -> i
    void access$000(com.sundy.pkcao.tools.RecordButton) -> a
    android.media.MediaRecorder access$200(com.sundy.pkcao.tools.RecordButton) -> b
    android.os.Handler access$300(com.sundy.pkcao.tools.RecordButton) -> c
    int[] access$400() -> a
    android.widget.ImageView access$500(com.sundy.pkcao.tools.RecordButton) -> d
com.sundy.pkcao.tools.RecordButton$1 -> com.sundy.pkcao.tools.g:
    com.sundy.pkcao.tools.RecordButton this$0 -> a
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.sundy.pkcao.tools.RecordButton$ObtainDecibelThread -> com.sundy.pkcao.tools.h:
    boolean running -> b
    com.sundy.pkcao.tools.RecordButton this$0 -> a
    void exit() -> a
    void run() -> run
com.sundy.pkcao.tools.RecordButton$RecordEventListener -> com.sundy.pkcao.tools.i:
    void onFinishedRecord(java.lang.String,int) -> a
    void onStartRecord() -> a
com.sundy.pkcao.tools.RecordButton$ShowVolumeHandler -> com.sundy.pkcao.tools.j:
    com.sundy.pkcao.tools.RecordButton this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.sundy.pkcao.tools.SimpleTextWatcher -> com.sundy.pkcao.tools.k:
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.sundy.pkcao.tools.draganddropphotos.DraggableLayout -> com.sundy.pkcao.tools.draganddropphotos.DraggableLayout:
    java.util.HashSet listeners -> c
    com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView activeView -> d
    boolean dragging -> e
    int height -> a
    int width -> b
    void onClick(android.view.View) -> onClick
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean addOnInterceptToutchEventListener(com.sundy.pkcao.tools.draganddropphotos.DraggableLayout$OnInterceptToutchEventListener) -> a
    com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView getActiveView() -> getActiveView
    void setActiveView(com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView) -> setActiveView
    void setBackground() -> a
    boolean isDragging() -> b
    void setDragging(boolean) -> setDragging
com.sundy.pkcao.tools.draganddropphotos.DraggableLayout$OnInterceptToutchEventListener -> com.sundy.pkcao.tools.draganddropphotos.a:
    void onTouchEvent(android.view.MotionEvent) -> a
com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView -> com.sundy.pkcao.tools.draganddropphotos.b:
    android.view.ScaleGestureDetector mScaleDetector -> a
    com.sundy.pkcao.tools.draganddropphotos.RotationGestureDetector rotationDetector -> b
    float angle -> c
    com.sundy.pkcao.tools.draganddropphotos.DraggableLayout parentLayout -> d
    android.view.MotionEvent parentEvent -> e
    java.lang.String imagePath -> f
    android.graphics.Bitmap bitmap -> g
    float mScaleFactor -> h
    float imgX -> i
    float imgY -> j
    float iX -> k
    float iY -> l
    float dx -> m
    float dy -> n
    int pointerCount -> o
    int prevCount -> p
    com.sundy.pkcao.tools.draganddropphotos.DraggableLayout$OnInterceptToutchEventListener onInterceptToutchEventListener -> q
    boolean onLongClick(android.view.View) -> onLongClick
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean checkActiveView(android.view.MotionEvent) -> a
    void onDragging(android.view.MotionEvent) -> b
    float getSizedX(float) -> a
    float getSizedY(float) -> b
    boolean onRotation(com.sundy.pkcao.tools.draganddropphotos.RotationGestureDetector) -> a
    com.sundy.pkcao.tools.draganddropphotos.DraggableLayout getParentLayout() -> getParentLayout
    void setParentLayout(com.sundy.pkcao.tools.draganddropphotos.DraggableLayout) -> setParentLayout
    com.sundy.pkcao.tools.draganddropphotos.DraggableLayout$OnInterceptToutchEventListener getOnInterceptToutchEventListener() -> getOnInterceptToutchEventListener
    java.lang.String getImagePath() -> getImagePath
    void setImagePath(java.lang.String) -> setImagePath
    float getAngle() -> getAngle
    float getiX() -> getiX
    float getiY() -> getiY
    float getmScaleFactor() -> getmScaleFactor
    void setBitmap(android.graphics.Bitmap) -> setBitmap
    android.graphics.Bitmap getBitmap() -> getBitmap
    android.view.MotionEvent access$002(com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView,android.view.MotionEvent) -> a
    float access$232(com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView,float) -> a
    float access$202(com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView,float) -> b
    float access$200(com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView) -> a
com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView$1 -> com.sundy.pkcao.tools.draganddropphotos.c:
    com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView this$0 -> a
    void onTouchEvent(android.view.MotionEvent) -> a
com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView$ScaleListener -> com.sundy.pkcao.tools.draganddropphotos.d:
    com.sundy.pkcao.tools.draganddropphotos.ImageDraggableView this$0 -> a
    boolean onScale(android.view.ScaleGestureDetector) -> onScale
com.sundy.pkcao.tools.draganddropphotos.RotationGestureDetector -> com.sundy.pkcao.tools.draganddropphotos.e:
    float fX -> a
    float fY -> b
    float sX -> c
    float sY -> d
    float focalX -> e
    float focalY -> f
    int ptrID1 -> g
    int ptrID2 -> h
    float mAngle -> i
    boolean firstTouch -> j
    com.sundy.pkcao.tools.draganddropphotos.RotationGestureDetector$OnRotationGestureListener mListener -> k
    float getAngle() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    float getMidpoint(float,float) -> b
    float findAngleDelta(float,float) -> a
    float ClipAngleTo0_360(float) -> a
    float angleBetweenLines(float,float,float,float,float,float,float,float) -> a
com.sundy.pkcao.tools.draganddropphotos.RotationGestureDetector$OnRotationGestureListener -> com.sundy.pkcao.tools.draganddropphotos.f:
    boolean onRotation(com.sundy.pkcao.tools.draganddropphotos.RotationGestureDetector) -> a
com.sundy.pkcao.tools.emoji.EmotionUtils -> com.sundy.pkcao.tools.a.a:
    java.util.List emojiGroups -> a
    java.util.regex.Pattern pattern -> b
    java.lang.String[] emojiCodes -> c
    boolean contain(java.lang.String[],java.lang.String) -> a
    java.lang.CharSequence replace(android.content.Context,java.lang.String) -> a
    android.graphics.Bitmap getEmojiDrawable(android.content.Context,java.lang.String) -> b
    android.graphics.Bitmap getDrawableByName(android.content.Context,java.lang.String) -> c
com.sundy.pkcao.tools.xlistview.XListView -> com.sundy.pkcao.tools.xlistview.XListView:
    float mLastY -> a
    android.widget.Scroller mScroller -> b
    android.widget.AbsListView$OnScrollListener mScrollListener -> c
    com.sundy.pkcao.tools.xlistview.XListView$IXListViewListener mListViewListener -> d
    com.sundy.pkcao.tools.xlistview.XListViewHeader mHeaderView -> e
    android.widget.RelativeLayout mHeaderViewContent -> f
    android.widget.TextView mHeaderTimeView -> g
    int mHeaderViewHeight -> h
    boolean mEnablePullRefresh -> i
    boolean mPullRefreshing -> j
    com.sundy.pkcao.tools.xlistview.XListViewFooter mFooterView -> k
    boolean mEnablePullLoad -> l
    boolean mPullLoading -> m
    boolean mIsFooterReady -> n
    int mTotalItemCount -> o
    int mScrollBack -> p
    android.widget.TextView mFooterViewTextView -> q
    void initWithContext(android.content.Context) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void stopRefresh() -> a
    void stopLoadMore() -> b
    void setFooterViewText(java.lang.String) -> setFooterViewText
    void setRefreshTime(java.lang.String) -> setRefreshTime
    void invokeOnScrolling() -> c
    void updateHeaderHeight(float) -> a
    void resetHeaderHeight() -> d
    void updateFooterHeight(float) -> b
    void resetFooterHeight() -> e
    void startLoadMore() -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setXListViewListener(com.sundy.pkcao.tools.xlistview.XListView$IXListViewListener) -> setXListViewListener
    void setAdapter(android.widget.Adapter) -> setAdapter
    int access$002(com.sundy.pkcao.tools.xlistview.XListView,int) -> a
    android.widget.RelativeLayout access$100(com.sundy.pkcao.tools.xlistview.XListView) -> a
    void access$200(com.sundy.pkcao.tools.xlistview.XListView) -> b
com.sundy.pkcao.tools.xlistview.XListView$1 -> com.sundy.pkcao.tools.xlistview.a:
    com.sundy.pkcao.tools.xlistview.XListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.sundy.pkcao.tools.xlistview.XListView$2 -> com.sundy.pkcao.tools.xlistview.b:
    com.sundy.pkcao.tools.xlistview.XListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.sundy.pkcao.tools.xlistview.XListView$IXListViewListener -> com.sundy.pkcao.tools.xlistview.c:
    void onRefresh() -> b
    void onLoadMore() -> c
com.sundy.pkcao.tools.xlistview.XListView$OnXScrollListener -> com.sundy.pkcao.tools.xlistview.d:
    void onXScrolling(android.view.View) -> a
com.sundy.pkcao.tools.xlistview.XListViewFooter -> com.sundy.pkcao.tools.xlistview.e:
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.view.View mProgressBar -> c
    android.widget.TextView mHintView -> d
    void setState(int) -> setState
    void setState(int,java.lang.String) -> a
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void hide() -> a
    void show() -> b
    void initView(android.content.Context) -> a
com.sundy.pkcao.tools.xlistview.XListViewHeader -> com.sundy.pkcao.tools.xlistview.f:
    android.widget.LinearLayout mContainer -> a
    android.widget.ImageView mArrowImageView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mHintTextView -> d
    int mState -> e
    android.view.animation.Animation mRotateUpAnim -> f
    android.view.animation.Animation mRotateDownAnim -> g
    int ROTATE_ANIM_DURATION -> h
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
org.apache.http.entity.mime.FormBodyPart -> org.apache.http.entity.mime.FormBodyPart:
    java.lang.String name -> name
    org.apache.http.entity.mime.Header header -> header
    org.apache.http.entity.mime.content.ContentBody body -> body
    java.lang.String getName() -> getName
    org.apache.http.entity.mime.content.ContentBody getBody() -> getBody
    org.apache.http.entity.mime.Header getHeader() -> getHeader
    void addField(java.lang.String,java.lang.String) -> addField
    void generateContentDisp(org.apache.http.entity.mime.content.ContentBody) -> generateContentDisp
    void generateContentType(org.apache.http.entity.mime.content.ContentBody) -> generateContentType
    void generateTransferEncoding(org.apache.http.entity.mime.content.ContentBody) -> generateTransferEncoding
org.apache.http.entity.mime.Header -> org.apache.http.entity.mime.Header:
    java.util.List fields -> fields
    java.util.Map fieldMap -> fieldMap
    void addField(org.apache.http.entity.mime.MinimalField) -> addField
    java.util.List getFields() -> getFields
    org.apache.http.entity.mime.MinimalField getField(java.lang.String) -> getField
    java.util.List getFields(java.lang.String) -> getFields
    int removeFields(java.lang.String) -> removeFields
    void setField(org.apache.http.entity.mime.MinimalField) -> setField
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
org.apache.http.entity.mime.HttpMultipart -> org.apache.http.entity.mime.HttpMultipart:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> FIELD_SEP
    org.apache.http.util.ByteArrayBuffer CR_LF -> CR_LF
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> TWO_DASHES
    java.lang.String subType -> subType
    java.nio.charset.Charset charset -> charset
    java.lang.String boundary -> boundary
    java.util.List parts -> parts
    org.apache.http.entity.mime.HttpMultipartMode mode -> mode
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> encode
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> writeBytes
    void writeBytes(java.lang.String,java.io.OutputStream) -> writeBytes
    void writeField(org.apache.http.entity.mime.MinimalField,java.io.OutputStream) -> writeField
    void writeField(org.apache.http.entity.mime.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> writeField
    java.lang.String getSubType() -> getSubType
    java.nio.charset.Charset getCharset() -> getCharset
    org.apache.http.entity.mime.HttpMultipartMode getMode() -> getMode
    java.util.List getBodyParts() -> getBodyParts
    void addBodyPart(org.apache.http.entity.mime.FormBodyPart) -> addBodyPart
    java.lang.String getBoundary() -> getBoundary
    void doWriteTo(org.apache.http.entity.mime.HttpMultipartMode,java.io.OutputStream,boolean) -> doWriteTo
    void writeTo(java.io.OutputStream) -> writeTo
    long getTotalLength() -> getTotalLength
org.apache.http.entity.mime.HttpMultipart$1 -> org.apache.http.entity.mime.HttpMultipart$1:
    int[] $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode -> $SwitchMap$org$apache$http$entity$mime$HttpMultipartMode
org.apache.http.entity.mime.HttpMultipartMode -> org.apache.http.entity.mime.HttpMultipartMode:
    org.apache.http.entity.mime.HttpMultipartMode STRICT -> STRICT
    org.apache.http.entity.mime.HttpMultipartMode BROWSER_COMPATIBLE -> BROWSER_COMPATIBLE
    org.apache.http.entity.mime.HttpMultipartMode[] $VALUES -> $VALUES
    org.apache.http.entity.mime.HttpMultipartMode[] values() -> values
    org.apache.http.entity.mime.HttpMultipartMode valueOf(java.lang.String) -> valueOf
org.apache.http.entity.mime.MIME -> org.apache.http.entity.mime.MIME:
    java.lang.String CONTENT_TYPE -> CONTENT_TYPE
    java.lang.String CONTENT_TRANSFER_ENC -> CONTENT_TRANSFER_ENC
    java.lang.String CONTENT_DISPOSITION -> CONTENT_DISPOSITION
    java.lang.String ENC_8BIT -> ENC_8BIT
    java.lang.String ENC_BINARY -> ENC_BINARY
    java.nio.charset.Charset DEFAULT_CHARSET -> DEFAULT_CHARSET
org.apache.http.entity.mime.MinimalField -> org.apache.http.entity.mime.MinimalField:
    java.lang.String name -> name
    java.lang.String value -> value
    java.lang.String getName() -> getName
    java.lang.String getBody() -> getBody
    java.lang.String toString() -> toString
org.apache.http.entity.mime.MultipartEntity -> org.apache.http.entity.mime.MultipartEntity:
    char[] MULTIPART_CHARS -> MULTIPART_CHARS
    org.apache.http.entity.mime.HttpMultipart multipart -> multipart
    org.apache.http.Header contentType -> contentType
    long length -> length
    boolean dirty -> dirty
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> generateContentType
    java.lang.String generateBoundary() -> generateBoundary
    void addPart(org.apache.http.entity.mime.FormBodyPart) -> addPart
    void addPart(java.lang.String,org.apache.http.entity.mime.content.ContentBody) -> addPart
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.AbstractContentBody -> org.apache.http.entity.mime.content.AbstractContentBody:
    java.lang.String mimeType -> mimeType
    java.lang.String mediaType -> mediaType
    java.lang.String subType -> subType
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
org.apache.http.entity.mime.content.ByteArrayBody -> org.apache.http.entity.mime.content.ByteArrayBody:
    byte[] data -> data
    java.lang.String filename -> filename
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.ContentBody -> org.apache.http.entity.mime.content.ContentBody:
    java.lang.String getFilename() -> getFilename
    void writeTo(java.io.OutputStream) -> writeTo
org.apache.http.entity.mime.content.ContentDescriptor -> org.apache.http.entity.mime.content.ContentDescriptor:
    java.lang.String getMimeType() -> getMimeType
    java.lang.String getMediaType() -> getMediaType
    java.lang.String getSubType() -> getSubType
    java.lang.String getCharset() -> getCharset
    java.lang.String getTransferEncoding() -> getTransferEncoding
    long getContentLength() -> getContentLength
org.apache.http.entity.mime.content.FileBody -> org.apache.http.entity.mime.content.FileBody:
    java.io.File file -> file
    java.lang.String filename -> filename
    java.lang.String charset -> charset
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
    java.io.File getFile() -> getFile
org.apache.http.entity.mime.content.InputStreamBody -> org.apache.http.entity.mime.content.InputStreamBody:
    java.io.InputStream in -> in
    java.lang.String filename -> filename
    java.io.InputStream getInputStream() -> getInputStream
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.apache.http.entity.mime.content.StringBody -> org.apache.http.entity.mime.content.StringBody:
    byte[] content -> content
    java.nio.charset.Charset charset -> charset
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String,java.nio.charset.Charset) -> create
    org.apache.http.entity.mime.content.StringBody create(java.lang.String) -> create
    java.io.Reader getReader() -> getReader
    void writeTo(java.io.OutputStream) -> writeTo
    java.lang.String getTransferEncoding() -> getTransferEncoding
    java.lang.String getCharset() -> getCharset
    long getContentLength() -> getContentLength
    java.lang.String getFilename() -> getFilename
org.java_websocket.WebSocket -> org.a.a:
    void sendFrame(org.java_websocket.framing.Framedata) -> sendFrame
    java.net.InetSocketAddress getLocalSocketAddress() -> getLocalSocketAddress
org.java_websocket.WebSocket$READYSTATE -> org.a.b:
    org.java_websocket.WebSocket$READYSTATE NOT_YET_CONNECTED -> a
    org.java_websocket.WebSocket$READYSTATE CONNECTING -> b
    org.java_websocket.WebSocket$READYSTATE OPEN -> c
    org.java_websocket.WebSocket$READYSTATE CLOSING -> d
    org.java_websocket.WebSocket$READYSTATE CLOSED -> e
    org.java_websocket.WebSocket$READYSTATE[] $VALUES -> f
    org.java_websocket.WebSocket$READYSTATE[] values() -> values
    org.java_websocket.WebSocket$READYSTATE valueOf(java.lang.String) -> valueOf
org.java_websocket.WebSocket$Role -> org.a.c:
    org.java_websocket.WebSocket$Role CLIENT -> a
    org.java_websocket.WebSocket$Role SERVER -> b
    org.java_websocket.WebSocket$Role[] $VALUES -> c
    org.java_websocket.WebSocket$Role[] values() -> values
    org.java_websocket.WebSocket$Role valueOf(java.lang.String) -> valueOf
org.java_websocket.WebSocketAdapter -> org.a.d:
    org.java_websocket.handshake.ServerHandshakeBuilder onWebsocketHandshakeReceivedAsServer(org.java_websocket.WebSocket,org.java_websocket.drafts.Draft,org.java_websocket.handshake.ClientHandshake) -> onWebsocketHandshakeReceivedAsServer
    void onWebsocketHandshakeReceivedAsClient(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake,org.java_websocket.handshake.ServerHandshake) -> onWebsocketHandshakeReceivedAsClient
    void onWebsocketHandshakeSentAsClient(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake) -> onWebsocketHandshakeSentAsClient
    void onWebsocketMessageFragment(org.java_websocket.WebSocket,org.java_websocket.framing.Framedata) -> onWebsocketMessageFragment
    void onWebsocketPing(org.java_websocket.WebSocket,org.java_websocket.framing.Framedata) -> onWebsocketPing
    void onWebsocketPong(org.java_websocket.WebSocket,org.java_websocket.framing.Framedata) -> onWebsocketPong
    java.lang.String getFlashPolicy(org.java_websocket.WebSocket) -> getFlashPolicy
org.java_websocket.WebSocketImpl -> org.a.e:
    int RCVBUF -> a
    boolean DEBUG -> b
    java.util.List defaultdraftlist -> c
    java.nio.channels.SelectionKey key -> d
    java.nio.channels.ByteChannel channel -> e
    java.util.concurrent.BlockingQueue outQueue -> f
    java.util.concurrent.BlockingQueue inQueue -> g
    boolean flushandclosestate -> i
    org.java_websocket.WebSocket$READYSTATE readystate -> j
    org.java_websocket.WebSocketListener wsl -> k
    java.util.List knownDrafts -> l
    org.java_websocket.drafts.Draft draft -> m
    org.java_websocket.WebSocket$Role role -> n
    org.java_websocket.framing.Framedata$Opcode current_continuous_frame_opcode -> o
    java.nio.ByteBuffer tmpHandshakeBytes -> p
    org.java_websocket.handshake.ClientHandshake handshakerequest -> q
    java.lang.String closemessage -> r
    java.lang.Integer closecode -> s
    java.lang.Boolean closedremotely -> t
    java.lang.String resourceDescriptor -> u
    boolean $assertionsDisabled -> h
    void decode(java.nio.ByteBuffer) -> a
    boolean decodeHandshake(java.nio.ByteBuffer) -> c
    void decodeFrames(java.nio.ByteBuffer) -> d
    void close(int,java.lang.String,boolean) -> c
    void close(int,java.lang.String) -> a
    void closeConnection(int,java.lang.String,boolean) -> a
    void closeConnection(int,boolean) -> a
    void closeConnection(int,java.lang.String) -> b
    void flushAndClose(int,java.lang.String,boolean) -> b
    void eot() -> a
    void close(int) -> a
    void close(org.java_websocket.exceptions.InvalidDataException) -> a
    void send(java.lang.String) -> a
    void send(java.nio.ByteBuffer) -> b
    void send(byte[]) -> a
    void send(java.util.Collection) -> a
    void sendFragmentedFrame(org.java_websocket.framing.Framedata$Opcode,java.nio.ByteBuffer,boolean) -> a
    void sendFrame(org.java_websocket.framing.Framedata) -> sendFrame
    boolean hasBufferedData() -> b
    org.java_websocket.drafts.Draft$HandshakeState isFlashEdgeCase(java.nio.ByteBuffer) -> e
    void startHandshake(org.java_websocket.handshake.ClientHandshakeBuilder) -> a
    void write(java.nio.ByteBuffer) -> f
    void write(java.util.List) -> a
    void open(org.java_websocket.handshake.Handshakedata) -> a
    boolean isConnecting() -> c
    boolean isOpen() -> d
    boolean isClosing() -> e
    boolean isFlushAndClose() -> f
    boolean isClosed() -> g
    org.java_websocket.WebSocket$READYSTATE getReadyState() -> h
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    java.net.InetSocketAddress getRemoteSocketAddress() -> i
    java.net.InetSocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    void close() -> j
org.java_websocket.WebSocketListener -> org.a.f:
    org.java_websocket.handshake.ServerHandshakeBuilder onWebsocketHandshakeReceivedAsServer(org.java_websocket.WebSocket,org.java_websocket.drafts.Draft,org.java_websocket.handshake.ClientHandshake) -> onWebsocketHandshakeReceivedAsServer
    void onWebsocketHandshakeReceivedAsClient(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake,org.java_websocket.handshake.ServerHandshake) -> onWebsocketHandshakeReceivedAsClient
    void onWebsocketHandshakeSentAsClient(org.java_websocket.WebSocket,org.java_websocket.handshake.ClientHandshake) -> onWebsocketHandshakeSentAsClient
    void onWebsocketMessage(org.java_websocket.WebSocket,java.lang.String) -> onWebsocketMessage
    void onWebsocketMessage(org.java_websocket.WebSocket,java.nio.ByteBuffer) -> onWebsocketMessage
    void onWebsocketMessageFragment(org.java_websocket.WebSocket,org.java_websocket.framing.Framedata) -> onWebsocketMessageFragment
    void onWebsocketOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.Handshakedata) -> onWebsocketOpen
    void onWebsocketClose(org.java_websocket.WebSocket,int,java.lang.String,boolean) -> onWebsocketClose
    void onWebsocketClosing(org.java_websocket.WebSocket,int,java.lang.String,boolean) -> onWebsocketClosing
    void onWebsocketCloseInitiated(org.java_websocket.WebSocket,int,java.lang.String) -> onWebsocketCloseInitiated
    void onWebsocketError(org.java_websocket.WebSocket,java.lang.Exception) -> onWebsocketError
    void onWebsocketPing(org.java_websocket.WebSocket,org.java_websocket.framing.Framedata) -> onWebsocketPing
    void onWebsocketPong(org.java_websocket.WebSocket,org.java_websocket.framing.Framedata) -> onWebsocketPong
    java.lang.String getFlashPolicy(org.java_websocket.WebSocket) -> getFlashPolicy
    void onWriteDemand(org.java_websocket.WebSocket) -> onWriteDemand
    java.net.InetSocketAddress getLocalSocketAddress(org.java_websocket.WebSocket) -> getLocalSocketAddress
    java.net.InetSocketAddress getRemoteSocketAddress(org.java_websocket.WebSocket) -> getRemoteSocketAddress
org.java_websocket.client.WebSocketClient -> org.a.a.a:
    java.net.URI uri -> uri
    org.java_websocket.WebSocketImpl engine -> engine
    java.net.Socket socket -> socket
    java.io.InputStream istream -> istream
    java.io.OutputStream ostream -> ostream
    java.net.Proxy proxy -> proxy
    java.lang.Thread writeThread -> writeThread
    org.java_websocket.drafts.Draft draft -> draft
    java.util.Map headers -> headers
    java.util.concurrent.CountDownLatch connectLatch -> connectLatch
    java.util.concurrent.CountDownLatch closeLatch -> closeLatch
    int connectTimeout -> connectTimeout
    boolean $assertionsDisabled -> $assertionsDisabled
    java.net.URI getURI() -> getURI
    org.java_websocket.drafts.Draft getDraft() -> getDraft
    void connect() -> connect
    boolean connectBlocking() -> connectBlocking
    void close() -> close
    void closeBlocking() -> closeBlocking
    void send(java.lang.String) -> send
    void send(byte[]) -> send
    void run() -> run
    int getPort() -> getPort
    void sendHandshake() -> sendHandshake
    org.java_websocket.WebSocket$READYSTATE getReadyState() -> getReadyState
    void onWebsocketMessage(org.java_websocket.WebSocket,java.lang.String) -> onWebsocketMessage
    void onWebsocketMessage(org.java_websocket.WebSocket,java.nio.ByteBuffer) -> onWebsocketMessage
    void onWebsocketMessageFragment(org.java_websocket.WebSocket,org.java_websocket.framing.Framedata) -> onWebsocketMessageFragment
    void onWebsocketOpen(org.java_websocket.WebSocket,org.java_websocket.handshake.Handshakedata) -> onWebsocketOpen
    void onWebsocketClose(org.java_websocket.WebSocket,int,java.lang.String,boolean) -> onWebsocketClose
    void onWebsocketError(org.java_websocket.WebSocket,java.lang.Exception) -> onWebsocketError
    void onWriteDemand(org.java_websocket.WebSocket) -> onWriteDemand
    void onWebsocketCloseInitiated(org.java_websocket.WebSocket,int,java.lang.String) -> onWebsocketCloseInitiated
    void onWebsocketClosing(org.java_websocket.WebSocket,int,java.lang.String,boolean) -> onWebsocketClosing
    void onCloseInitiated(int,java.lang.String) -> onCloseInitiated
    void onClosing(int,java.lang.String,boolean) -> onClosing
    org.java_websocket.WebSocket getConnection() -> getConnection
    java.net.InetSocketAddress getLocalSocketAddress(org.java_websocket.WebSocket) -> getLocalSocketAddress
    java.net.InetSocketAddress getRemoteSocketAddress(org.java_websocket.WebSocket) -> getRemoteSocketAddress
    void onOpen(org.java_websocket.handshake.ServerHandshake) -> onOpen
    void onMessage(java.lang.String) -> onMessage
    void onClose(int,java.lang.String,boolean) -> onClose
    void onError(java.lang.Exception) -> onError
    void onMessage(java.nio.ByteBuffer) -> onMessage
    void onFragment(org.java_websocket.framing.Framedata) -> onFragment
    void setProxy(java.net.Proxy) -> setProxy
    void setSocket(java.net.Socket) -> setSocket
    void sendFragmentedFrame(org.java_websocket.framing.Framedata$Opcode,java.nio.ByteBuffer,boolean) -> sendFragmentedFrame
    boolean isOpen() -> isOpen
    boolean isFlushAndClose() -> isFlushAndClose
    boolean isClosed() -> isClosed
    boolean isClosing() -> isClosing
    boolean isConnecting() -> isConnecting
    boolean hasBufferedData() -> hasBufferedData
    void close(int) -> close
    void close(int,java.lang.String) -> close
    void closeConnection(int,java.lang.String) -> closeConnection
    void send(java.nio.ByteBuffer) -> send
    void sendFrame(org.java_websocket.framing.Framedata) -> sendFrame
    java.net.InetSocketAddress getLocalSocketAddress() -> getLocalSocketAddress
    java.net.InetSocketAddress getRemoteSocketAddress() -> getRemoteSocketAddress
    java.lang.String getResourceDescriptor() -> getResourceDescriptor
    org.java_websocket.WebSocketImpl access$100(org.java_websocket.client.WebSocketClient) -> access$100
    java.io.OutputStream access$200(org.java_websocket.client.WebSocketClient) -> access$200
org.java_websocket.client.WebSocketClient$1 -> org.a.a.b:
org.java_websocket.client.WebSocketClient$WebsocketWriteThread -> org.a.a.c:
    org.java_websocket.client.WebSocketClient this$0 -> a
    void run() -> run
org.java_websocket.drafts.Draft -> org.a.b.a:
    int MAX_FAME_SIZE -> a
    int INITIAL_FAMESIZE -> b
    byte[] FLASH_POLICY_REQUEST -> c
    org.java_websocket.WebSocket$Role role -> d
    org.java_websocket.framing.Framedata$Opcode continuousFrameType -> e
    java.nio.ByteBuffer readLine(java.nio.ByteBuffer) -> a
    java.lang.String readStringLine(java.nio.ByteBuffer) -> b
    org.java_websocket.handshake.HandshakeBuilder translateHandshakeHttp(java.nio.ByteBuffer,org.java_websocket.WebSocket$Role) -> a
    org.java_websocket.drafts.Draft$HandshakeState acceptHandshakeAsClient(org.java_websocket.handshake.ClientHandshake,org.java_websocket.handshake.ServerHandshake) -> a
    org.java_websocket.drafts.Draft$HandshakeState acceptHandshakeAsServer(org.java_websocket.handshake.ClientHandshake) -> a
    boolean basicAccept(org.java_websocket.handshake.Handshakedata) -> a
    java.nio.ByteBuffer createBinaryFrame(org.java_websocket.framing.Framedata) -> a
    java.util.List createFrames(java.nio.ByteBuffer,boolean) -> a
    java.util.List createFrames(java.lang.String,boolean) -> a
    java.util.List continuousFrame(org.java_websocket.framing.Framedata$Opcode,java.nio.ByteBuffer,boolean) -> a
    void reset() -> a
    java.util.List createHandshake(org.java_websocket.handshake.Handshakedata,org.java_websocket.WebSocket$Role) -> a
    java.util.List createHandshake(org.java_websocket.handshake.Handshakedata,org.java_websocket.WebSocket$Role,boolean) -> a
    org.java_websocket.handshake.ClientHandshakeBuilder postProcessHandshakeRequestAsClient(org.java_websocket.handshake.ClientHandshakeBuilder) -> a
    org.java_websocket.handshake.HandshakeBuilder postProcessHandshakeResponseAsServer(org.java_websocket.handshake.ClientHandshake,org.java_websocket.handshake.ServerHandshakeBuilder) -> a
    java.util.List translateFrame(java.nio.ByteBuffer) -> c
    org.java_websocket.drafts.Draft$CloseHandshakeType getCloseHandshakeType() -> b
    org.java_websocket.drafts.Draft copyInstance() -> c
    org.java_websocket.handshake.Handshakedata translateHandshake(java.nio.ByteBuffer) -> d
    int checkAlloc(int) -> a
    void setParseMode(org.java_websocket.WebSocket$Role) -> a
org.java_websocket.drafts.Draft$CloseHandshakeType -> org.a.b.b:
    org.java_websocket.drafts.Draft$CloseHandshakeType NONE -> a
    org.java_websocket.drafts.Draft$CloseHandshakeType ONEWAY -> b
    org.java_websocket.drafts.Draft$CloseHandshakeType TWOWAY -> c
    org.java_websocket.drafts.Draft$CloseHandshakeType[] $VALUES -> d
    org.java_websocket.drafts.Draft$CloseHandshakeType[] values() -> values
    org.java_websocket.drafts.Draft$CloseHandshakeType valueOf(java.lang.String) -> valueOf
org.java_websocket.drafts.Draft$HandshakeState -> org.a.b.c:
    org.java_websocket.drafts.Draft$HandshakeState MATCHED -> a
    org.java_websocket.drafts.Draft$HandshakeState NOT_MATCHED -> b
    org.java_websocket.drafts.Draft$HandshakeState[] $VALUES -> c
    org.java_websocket.drafts.Draft$HandshakeState[] values() -> values
    org.java_websocket.drafts.Draft$HandshakeState valueOf(java.lang.String) -> valueOf
org.java_websocket.drafts.Draft_10 -> org.a.b.d:
    java.nio.ByteBuffer incompleteframe -> g
    org.java_websocket.framing.Framedata fragmentedframe -> h
    java.util.Random reuseableRandom -> i
    boolean $assertionsDisabled -> f
    int readVersion(org.java_websocket.handshake.Handshakedata) -> b
    org.java_websocket.drafts.Draft$HandshakeState acceptHandshakeAsClient(org.java_websocket.handshake.ClientHandshake,org.java_websocket.handshake.ServerHandshake) -> a
    org.java_websocket.drafts.Draft$HandshakeState acceptHandshakeAsServer(org.java_websocket.handshake.ClientHandshake) -> a
    java.nio.ByteBuffer createBinaryFrame(org.java_websocket.framing.Framedata) -> a
    java.util.List createFrames(java.nio.ByteBuffer,boolean) -> a
    java.util.List createFrames(java.lang.String,boolean) -> a
    byte fromOpcode(org.java_websocket.framing.Framedata$Opcode) -> a
    java.lang.String generateFinalKey(java.lang.String) -> a
    org.java_websocket.handshake.ClientHandshakeBuilder postProcessHandshakeRequestAsClient(org.java_websocket.handshake.ClientHandshakeBuilder) -> a
    org.java_websocket.handshake.HandshakeBuilder postProcessHandshakeResponseAsServer(org.java_websocket.handshake.ClientHandshake,org.java_websocket.handshake.ServerHandshakeBuilder) -> a
    byte[] toByteArray(long,int) -> a
    org.java_websocket.framing.Framedata$Opcode toOpcode(byte) -> a
    java.util.List translateFrame(java.nio.ByteBuffer) -> c
    org.java_websocket.framing.Framedata translateSingleFrame(java.nio.ByteBuffer) -> e
    void reset() -> a
    org.java_websocket.drafts.Draft copyInstance() -> c
    org.java_websocket.drafts.Draft$CloseHandshakeType getCloseHandshakeType() -> b
org.java_websocket.drafts.Draft_10$IncompleteException -> org.a.b.e:
    int preferedsize -> b
    org.java_websocket.drafts.Draft_10 this$0 -> a
    int getPreferedSize() -> a
org.java_websocket.drafts.Draft_17 -> org.a.b.f:
    org.java_websocket.drafts.Draft$HandshakeState acceptHandshakeAsServer(org.java_websocket.handshake.ClientHandshake) -> a
    org.java_websocket.handshake.ClientHandshakeBuilder postProcessHandshakeRequestAsClient(org.java_websocket.handshake.ClientHandshakeBuilder) -> a
    org.java_websocket.drafts.Draft copyInstance() -> c
org.java_websocket.drafts.Draft_75 -> org.a.b.g:
    boolean readingState -> f
    java.util.List readyframes -> g
    java.nio.ByteBuffer currentFrame -> h
    java.util.Random reuseableRandom -> i
    org.java_websocket.drafts.Draft$HandshakeState acceptHandshakeAsClient(org.java_websocket.handshake.ClientHandshake,org.java_websocket.handshake.ServerHandshake) -> a
    org.java_websocket.drafts.Draft$HandshakeState acceptHandshakeAsServer(org.java_websocket.handshake.ClientHandshake) -> a
    java.nio.ByteBuffer createBinaryFrame(org.java_websocket.framing.Framedata) -> a
    java.util.List createFrames(java.nio.ByteBuffer,boolean) -> a
    java.util.List createFrames(java.lang.String,boolean) -> a
    org.java_websocket.handshake.ClientHandshakeBuilder postProcessHandshakeRequestAsClient(org.java_websocket.handshake.ClientHandshakeBuilder) -> a
    org.java_websocket.handshake.HandshakeBuilder postProcessHandshakeResponseAsServer(org.java_websocket.handshake.ClientHandshake,org.java_websocket.handshake.ServerHandshakeBuilder) -> a
    java.util.List translateRegularFrame(java.nio.ByteBuffer) -> e
    java.util.List translateFrame(java.nio.ByteBuffer) -> c
    void reset() -> a
    org.java_websocket.drafts.Draft$CloseHandshakeType getCloseHandshakeType() -> b
    java.nio.ByteBuffer createBuffer() -> d
    java.nio.ByteBuffer increaseBuffer(java.nio.ByteBuffer) -> f
    org.java_websocket.drafts.Draft copyInstance() -> c
org.java_websocket.drafts.Draft_76 -> org.a.b.h:
    boolean failed -> i
    byte[] closehandshake -> j
    java.util.Random reuseableRandom -> k
    byte[] createChallenge(java.lang.String,java.lang.String,byte[]) -> a
    java.lang.String generateKey() -> e
    byte[] getPart(java.lang.String) -> a
    org.java_websocket.drafts.Draft$HandshakeState acceptHandshakeAsClient(org.java_websocket.handshake.ClientHandshake,org.java_websocket.handshake.ServerHandshake) -> a
    org.java_websocket.drafts.Draft$HandshakeState acceptHandshakeAsServer(org.java_websocket.handshake.ClientHandshake) -> a
    org.java_websocket.handshake.ClientHandshakeBuilder postProcessHandshakeRequestAsClient(org.java_websocket.handshake.ClientHandshakeBuilder) -> a
    org.java_websocket.handshake.HandshakeBuilder postProcessHandshakeResponseAsServer(org.java_websocket.handshake.ClientHandshake,org.java_websocket.handshake.ServerHandshakeBuilder) -> a
    org.java_websocket.handshake.Handshakedata translateHandshake(java.nio.ByteBuffer) -> d
    java.util.List translateFrame(java.nio.ByteBuffer) -> c
    java.nio.ByteBuffer createBinaryFrame(org.java_websocket.framing.Framedata) -> a
    org.java_websocket.drafts.Draft$CloseHandshakeType getCloseHandshakeType() -> b
    org.java_websocket.drafts.Draft copyInstance() -> c
org.java_websocket.exceptions.IncompleteHandshakeException -> org.a.c.a:
    int newsize -> a
    int getPreferedSize() -> a
org.java_websocket.exceptions.InvalidDataException -> org.a.c.b:
    int closecode -> a
    int getCloseCode() -> a
org.java_websocket.exceptions.InvalidFrameException -> org.a.c.c:
org.java_websocket.exceptions.InvalidHandshakeException -> org.a.c.d:
org.java_websocket.exceptions.LimitExedeedException -> org.a.c.e:
org.java_websocket.exceptions.NotSendableException -> org.a.c.f:
org.java_websocket.exceptions.WebsocketNotConnectedException -> org.a.c.g:
org.java_websocket.framing.CloseFrame -> org.a.d.a:
    int getCloseCode() -> a
    java.lang.String getMessage() -> b
org.java_websocket.framing.CloseFrameBuilder -> org.a.d.b:
    java.nio.ByteBuffer emptybytebuffer -> a
    int code -> f
    java.lang.String reason -> g
    void setCodeAndMessage(int,java.lang.String) -> a
    void initCloseCode() -> g
    int getCloseCode() -> a
    void initMessage() -> h
    java.lang.String getMessage() -> b
    java.lang.String toString() -> toString
    void setPayload(java.nio.ByteBuffer) -> a
    java.nio.ByteBuffer getPayloadData() -> c
org.java_websocket.framing.FrameBuilder -> org.a.d.c:
    void setFin(boolean) -> a
    void setOptcode(org.java_websocket.framing.Framedata$Opcode) -> a
    void setPayload(java.nio.ByteBuffer) -> a
    void setTransferemasked(boolean) -> b
org.java_websocket.framing.Framedata -> org.a.d.d:
    boolean isFin() -> d
    boolean getTransfereMasked() -> e
    org.java_websocket.framing.Framedata$Opcode getOpcode() -> f
    java.nio.ByteBuffer getPayloadData() -> c
org.java_websocket.framing.Framedata$Opcode -> org.a.d.e:
    org.java_websocket.framing.Framedata$Opcode CONTINUOUS -> a
    org.java_websocket.framing.Framedata$Opcode TEXT -> b
    org.java_websocket.framing.Framedata$Opcode BINARY -> c
    org.java_websocket.framing.Framedata$Opcode PING -> d
    org.java_websocket.framing.Framedata$Opcode PONG -> e
    org.java_websocket.framing.Framedata$Opcode CLOSING -> f
    org.java_websocket.framing.Framedata$Opcode[] $VALUES -> g
    org.java_websocket.framing.Framedata$Opcode[] values() -> values
    org.java_websocket.framing.Framedata$Opcode valueOf(java.lang.String) -> valueOf
org.java_websocket.framing.FramedataImpl1 -> org.a.d.f:
    byte[] emptyarray -> b
    boolean fin -> c
    org.java_websocket.framing.Framedata$Opcode optcode -> d
    java.nio.ByteBuffer unmaskedpayload -> a
    boolean transferemasked -> e
    boolean isFin() -> d
    org.java_websocket.framing.Framedata$Opcode getOpcode() -> f
    boolean getTransfereMasked() -> e
    java.nio.ByteBuffer getPayloadData() -> c
    void setFin(boolean) -> a
    void setOptcode(org.java_websocket.framing.Framedata$Opcode) -> a
    void setPayload(java.nio.ByteBuffer) -> a
    void setTransferemasked(boolean) -> b
    java.lang.String toString() -> toString
org.java_websocket.handshake.ClientHandshake -> org.a.e.a:
    java.lang.String getResourceDescriptor() -> a
org.java_websocket.handshake.ClientHandshakeBuilder -> org.a.e.b:
    void setResourceDescriptor(java.lang.String) -> a
org.java_websocket.handshake.HandshakeBuilder -> org.a.e.c:
    void setContent(byte[]) -> a
    void put(java.lang.String,java.lang.String) -> a
org.java_websocket.handshake.HandshakeImpl1Client -> org.a.e.d:
    java.lang.String resourceDescriptor -> a
    void setResourceDescriptor(java.lang.String) -> a
    java.lang.String getResourceDescriptor() -> a
org.java_websocket.handshake.HandshakeImpl1Server -> org.a.e.e:
    short httpstatus -> a
    java.lang.String httpstatusmessage -> b
    java.lang.String getHttpStatusMessage() -> a
    void setHttpStatusMessage(java.lang.String) -> a
    void setHttpStatus(short) -> a
org.java_websocket.handshake.Handshakedata -> org.a.e.f:
    java.util.Iterator iterateHttpFields() -> b
    java.lang.String getFieldValue(java.lang.String) -> b
    boolean hasFieldValue(java.lang.String) -> c
    byte[] getContent() -> c
org.java_websocket.handshake.HandshakedataImpl1 -> org.a.e.g:
    byte[] content -> a
    java.util.TreeMap map -> b
    java.util.Iterator iterateHttpFields() -> b
    java.lang.String getFieldValue(java.lang.String) -> b
    byte[] getContent() -> c
    void setContent(byte[]) -> a
    void put(java.lang.String,java.lang.String) -> a
    boolean hasFieldValue(java.lang.String) -> c
org.java_websocket.handshake.ServerHandshake -> org.a.e.h:
    java.lang.String getHttpStatusMessage() -> a
org.java_websocket.handshake.ServerHandshakeBuilder -> org.a.e.i:
    void setHttpStatus(short) -> a
    void setHttpStatusMessage(java.lang.String) -> a
org.java_websocket.util.Base64 -> org.a.f.a:
    byte[] _STANDARD_ALPHABET -> b
    byte[] _STANDARD_DECODABET -> c
    byte[] _URL_SAFE_ALPHABET -> d
    byte[] _URL_SAFE_DECODABET -> e
    byte[] _ORDERED_ALPHABET -> f
    byte[] _ORDERED_DECODABET -> g
    boolean $assertionsDisabled -> a
    byte[] getAlphabet(int) -> b
    byte[] getDecodabet(int) -> c
    byte[] encode3to4(byte[],byte[],int,int) -> b
    byte[] encode3to4(byte[],int,int,byte[],int,int) -> a
    java.lang.String encodeBytes(byte[]) -> a
    java.lang.String encodeBytes(byte[],int,int,int) -> a
    byte[] encodeBytesToBytes(byte[],int,int,int) -> b
    int decode4to3(byte[],int,byte[],int,int) -> b
    byte[] access$000(int) -> a
    int access$200(byte[],int,byte[],int,int) -> a
    byte[] access$300(byte[],byte[],int,int) -> a
org.java_websocket.util.Base64$OutputStream -> org.a.f.b:
    boolean encode -> a
    int position -> b
    byte[] buffer -> c
    int bufferLength -> d
    int lineLength -> e
    boolean breakLines -> f
    byte[] b4 -> g
    boolean suspendEncoding -> h
    int options -> i
    byte[] decodabet -> j
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flushBase64() -> a
    void close() -> close
org.java_websocket.util.Charsetfunctions -> org.a.f.c:
    java.nio.charset.CodingErrorAction codingErrorAction -> a
    byte[] utf8Bytes(java.lang.String) -> a
    byte[] asciiBytes(java.lang.String) -> b
    java.lang.String stringAscii(byte[],int,int) -> a
    java.lang.String stringUtf8(java.nio.ByteBuffer) -> a
